{"meta":{"title":"Hzebin 黄泽彬的博客","subtitle":null,"description":null,"author":"Huang Zebin","url":"http://blog.hzebin.cn"},"pages":[{"title":"Hzebin  |  404 Error","date":"2019-01-27T02:40:04.478Z","updated":"2019-01-27T02:40:04.478Z","comments":true,"path":"404.html","permalink":"http://blog.hzebin.cn/404.html","excerpt":"","text":""},{"title":"留言板","date":"2019-01-27T02:37:32.627Z","updated":"2019-01-27T02:37:32.627Z","comments":true,"path":"liuyan/index.html","permalink":"http://blog.hzebin.cn/liuyan/index.html","excerpt":"","text":""},{"title":"成长足迹","date":"2019-01-27T06:36:40.878Z","updated":"2019-01-27T06:36:40.878Z","comments":true,"path":"footprint/index.html","permalink":"http://blog.hzebin.cn/footprint/index.html","excerpt":"","text":""},{"title":"","date":"2019-01-26T12:18:35.502Z","updated":"2019-01-26T12:18:35.502Z","comments":true,"path":"shuatiben/index.html","permalink":"http://blog.hzebin.cn/shuatiben/index.html","excerpt":"","text":""},{"title":"","date":"2019-01-24T02:41:26.161Z","updated":"2019-01-24T02:41:26.161Z","comments":false,"path":"categories/index.html","permalink":"http://blog.hzebin.cn/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-02-19T13:31:02.015Z","updated":"2019-02-19T13:31:02.015Z","comments":true,"path":"links/index.html","permalink":"http://blog.hzebin.cn/links/index.html","excerpt":"","text":"在这里添加一些有趣、优秀的友链。本站刚搭建完成，还有很多不足之处，欢迎各位互换友链，请在下方留言。 友链要求： √原创优先&nbsp;&nbsp;&nbsp;√技术优先×经常宕机&nbsp;&nbsp;&nbsp;×不合法规&nbsp;&nbsp;&nbsp;×擦边球站&nbsp;&nbsp;&nbsp;×红标报毒 名称 网页链接 程序员在线工具 http://www.ofmonkey.com/ 疆飞.NET https://www.jiangfei.net/ Sanshi http://www.sanshi30.cn/ 一稚杨的博客 https://huangwenyang.cn/main/ 爱生活爱技术 http://www.xioaxin12.xyz/ 燕十三 https://www.yanshisan.cn/Blog/Index"},{"title":"","date":"2019-01-24T07:19:39.661Z","updated":"2019-01-24T07:19:39.661Z","comments":false,"path":"tags/index.html","permalink":"http://blog.hzebin.cn/tags/index.html","excerpt":"","text":""},{"title":"test area","date":"2019-02-19T13:24:32.107Z","updated":"2019-02-19T13:24:32.107Z","comments":true,"path":"test/index.html","permalink":"http://blog.hzebin.cn/test/index.html","excerpt":"","text":"水果 价格 数量 香蕉 $1 苹果 $1 6 草莓 $1 7"}],"posts":[{"title":"Jquery学习笔记（一）","slug":"jQuery学习笔记（一）","date":"2019-09-22T03:42:00.000Z","updated":"2019-09-22T03:42:28.539Z","comments":true,"path":"2019/09/22/jQuery学习笔记（一）/","link":"","permalink":"http://blog.hzebin.cn/2019/09/22/jQuery学习笔记（一）/","excerpt":"","text":"什么是jQueryjQuery是一款跨浏览器的开源JavaScript库，它的核心理念是write less,do more（写得更少，做的更多）。 jQuery 1.x版本兼容IE6/7/8，使用最为广泛，所以推荐使用1.x最新版本(官网地址：https://code.jquery.com/) DOM对象与jQuery对象什么是DOM对象在Javascript中，经常需要操作DOM。所谓DOM指的是文档对象模型。它提供了对文档结构化的描述，并将HTML页面与脚本、程序语言联系起来. 什么是jQuery对象$()是一个工厂函数，通过$(参数)的形式可以创建jQuery的实例对象，创建了jQuery对象之后，可以调用提供的方法。备注：$(参数)等价于jQuery(参数)，若在项目中$被用于其他功能，则可使用jQuery进行操作。123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"&gt; &lt;title&gt;jQuery对象&lt;/title&gt; &lt;script src=\"./js/jquery-1.12.4.js\"&gt;&lt;/script&gt; &lt;!--引入本地jQuery--&gt;&lt;/head&gt;&lt;body&gt; &lt;div&gt;Hello jQuery&lt;/div&gt; &lt;script&gt; //创建div元素对象，保存为obj var obj = $('div'); //判断obj是否为jQuery对象 alert(obj instanceof jQuery); //输出结果为true //调用html()方法获取元素的内容 alert(obj.html()); //输出结果为Hello jQuery &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 拓展：在使用jQuery时，不仅可以通过jQuery对象调用实例方法，还可以直接通过“$.方法名()”的形式调用静态方法。静态方法“$.trim()”可以过滤字符串两端的空白字符 jQuery对象转换成DOM对象jQuery对象属于类数组对象，其内部将DOM对象作为数组元素。jQuery对象转换成DOM对象有两种方式，index表示DOM对象在jQuery对象中的索引。方式1：obj[index]123456789&lt;div&gt;第一个div&lt;/div&gt;&lt;div&gt;第二个div&lt;/div&gt;&lt;script&gt; var divs = $('div') //divs类数组 var div1 = divs[0]; var div2 = divs[1]; alert(div1.innerHTML); alert(div2.innerHTML);&lt;/script&gt; 方式2：obj.get(index)12345&lt;div&gt;第一个div&lt;/div&gt;&lt;script&gt; var result = $('div').get(0).innerHTML; alert(result);&lt;/script&gt; DOM对象转换成jQuery对象将DOM对象作为$()函数的参数，即可转换成jQuery对象12345678&lt;button id=\"myBtn\"&gt;Hello HuangZebin&lt;/button&gt;&lt;script&gt; //获取DOM对象myBtn var btn = document.getElementById('myBtn'); //将DOM对象转为jQuery对象 var btn1 = $(btn); //这里不用单引号! alert(btn1[0] === btn); //三等于号（值 类型 都相同）&lt;/script&gt; Chrome开发者工具讲解外链：https://blog.csdn.net/Huang2016SCJ/article/details/101017442","categories":[],"tags":[{"name":"jQuery","slug":"jQuery","permalink":"http://blog.hzebin.cn/tags/jQuery/"}]},{"title":"web学习之javascript","slug":"web学习之javascript","date":"2019-07-14T09:49:00.000Z","updated":"2019-07-14T13:49:52.855Z","comments":true,"path":"2019/07/14/web学习之javascript/","link":"","permalink":"http://blog.hzebin.cn/2019/07/14/web学习之javascript/","excerpt":"","text":"eg: 20190714C01.jpg eg:外部引入js文件 20190714C02.jpg 我们可以将JavaScript代码放在html文件中任何位置:放在部分,浏览器解析head部分就会执行这个代码，然后才解析页面的其余部分。放在部分,JavaScript代码在网页读取到该语句的时候就会执行。 注意: javascript作为一种脚本语言可以放在html页面中任何位置，但是浏览器解释html时是按先后顺序的，所以前面的script就先被执行。比如进行页面显示初始化的js必须放在head里面，因为初始化都要求提前进行（如给页面body设置css等）；而如果是通过事件调用执行的function那么对位置没什么要求的。 20190714C03.jpg 123456789javascript注释//单行注释/*asasd多行注释asdasd*/ 定义变量使用关键字var,语法如下：var 变量名123456789101112131415161718变量名可以任意取名，但要遵循命名规则: 1.变量必须使用字母、下划线(_)或者美元符($)开始。 2.然后可以使用任意多个英文字母、数字、下划线(_)或者美元符($)组成。 3.不能使用JavaScript关键词与JavaScript保留字。变量要先声明再赋值，如下：var mychar;mychar=\"javascript\";var mynum = 6;变量可以重复赋值，如下：var mychar;mychar=\"javascript\";mychar=\"hello\";注意:1. 在JS中区分大小写，如变量mychar与myChar是不一样的，表示是两个变量。2. 变量虽然也可以不声明，直接使用，但不规范，需要先声明，后使用。 JavaScript-判断语句（if…else）1234567891011121314语法:if(条件)&#123; 条件成立时执行的代码 &#125;else&#123; 条件不成立时执行的代码 &#125;eg:&lt;script type=\"text/javascript\"&gt; var myage = 18; if(myage&gt;=18) //myage&gt;=18是判断条件 &#123; document.write(\"你是成年人。\");&#125; else //否则年龄小于18 &#123; document.write(\"未满18岁，你不是成年人。\");&#125;&lt;/script&gt; javascript函数定义：12345基本语法如下:function 函数名()&#123; 函数代码;&#125; eg: 20190714C04.jpg JavaScript-输出内容（document.write）12345678910111213141516171819202122232425document.write() 可用于直接向 HTML 输出流写内容。简单的说就是直接在网页中输出内容。第一种:输出内容用\"\"括起，直接输出\"\"号内的内容。&lt;script type=\"text/javascript\"&gt; document.write(\"I love JavaScript！\"); //内容用\"\"括起来，\"\"里的内容直接输出。&lt;/script&gt;第二种:通过变量，输出内容&lt;script type=\"text/javascript\"&gt; var mystr=\"hello world!\"; document.write(mystr); //直接写变量名，输出变量存储的内容。&lt;/script&gt;第三种:输出多项内容，内容之间用+号连接。&lt;script type=\"text/javascript\"&gt; var mystr=\"hello\"; document.write(mystr+\"I love JavaScript\"); //多项内容之间用+号连接&lt;/script&gt;第四种:输出HTML标签，并起作用，标签使用\"\"括起来。&lt;script type=\"text/javascript\"&gt; var mystr=\"hello\";document.write(mystr+\"&lt;br&gt;\");//输出hello后，输出一个换行符 document.write(\"JavaScript\");&lt;/script&gt; 关于空格的eg: 20190714C05.jpg JavaScript-警告（alert 消息对话框）1234567891011我们在访问网站的时候，有时会突然弹出一个小窗口，上面写着一段提示信息文字。如果你不点击“确定”，就不能对网页做任何操作，这个小窗口就是使用alert实现的。语法: alert(字符串或变量); 看下面的代码:&lt;script type=\"text/javascript\"&gt; var mynum = 30; alert(\"hello!\"); alert(mynum);&lt;/script&gt; JavaScript-确认（confirm 消息对话框）1234567891011121314151617181920212223confirm 消息对话框通常用于允许用户做选择的动作，如：“你对吗？”等。弹出对话框(包括一个确定按钮和一个取消按钮)。语法:confirm(str);参数说明:str：在消息对话框中要显示的文本返回值: Boolean值返回值:当用户点击\"确定\"按钮时，返回true当用户点击\"取消\"按钮时，返回false注: 通过返回值可以判断用户点击了什么按钮看下面的代码:&lt;script type=\"text/javascript\"&gt; var mymessage=confirm(\"你喜欢JavaScript吗?\"); if(mymessage==true) &#123; document.write(\"很好,加油!\"); &#125; else &#123; document.write(\"JS功能强大，要学习噢!\"); &#125;&lt;/script&gt; JavaScript-提问（prompt 消息对话框）12345678910111213141516171819prompt弹出消息对话框,通常用于询问一些需要与用户交互的信息。弹出消息对话框（包含一个确定按钮、取消按钮与一个文本输入框）。语法:prompt(str1, str2);参数说明：str1: 要显示在消息对话框中的文本，不可修改str2：文本框中的内容，可以修改返回值:1. 点击确定按钮，文本框中的内容将作为函数返回值2. 点击取消按钮，将返回null看看下面代码:var myname=prompt(\"请输入你的姓名:\");if(myname!=null) &#123; alert(\"你好\"+myname); &#125;else &#123; alert(\"你好 my friend.\"); &#125; JavaScript-打开新窗口（window.open）123456789101112131415161718192021open() 方法可以查找一个已经存在或者新建的浏览器窗口。语法：window.open([URL], [窗口名称], [参数字符串])参数说明:URL：可选参数，在窗口中要显示网页的网址或路径。如果省略这个参数，或者它的值是空字符串，那么窗口就不显示任何文档。窗口名称：可选参数，被打开窗口的名称。 1.该名称由字母、数字和下划线字符组成。 2.\"_top\"、\"_blank\"、\"_self\"具有特殊意义的名称。 _blank：在新窗口显示目标网页 _self：在当前窗口显示目标网页 _top：框架网页中在上部窗口中显示目标网页 3.相同 name 的窗口只能创建一个，要想创建多个窗口则 name 不能相同。 4.name 不能包含有空格。参数字符串：可选参数，设置窗口参数，各参数用逗号隔开。例如:打开http://www.imooc.com网站，大小为300px * 200px，无菜单，无工具栏，无状态栏，有滚动条窗口：&lt;script type=\"text/javascript\"&gt; window.open('http://www.imooc.com','_blank','width=300,height=200,menubar=no,toolbar=no, status=no,scrollbars=yes')&lt;/script&gt;注意：运行结果考虑浏览器兼容问题。 参数表： 20190714C06.jpg JavaScript-关闭窗口（window.close）1234567891011121314close()关闭窗口用法：window.close(); //关闭本窗口或&lt;窗口对象&gt;.close(); //关闭指定的窗口例如:关闭新建的窗口。&lt;script type=\"text/javascript\"&gt; var mywin=window.open('http://www.imooc.com'); //将新打的窗口对象，存储在变量mywin中 mywin.close();&lt;/script&gt;注意:上面代码在打开新窗口的同时，关闭该窗口，看不到被打开的窗口。","categories":[],"tags":[{"name":"web前端","slug":"web前端","permalink":"http://blog.hzebin.cn/tags/web前端/"}]},{"title":"web学习之css","slug":"web学习之css","date":"2019-07-14T08:34:00.000Z","updated":"2019-07-14T12:48:43.550Z","comments":true,"path":"2019/07/14/web学习之css/","link":"","permalink":"http://blog.hzebin.cn/2019/07/14/web学习之css/","excerpt":"","text":"CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字体加粗等。 eg: 20190714B01.jpg css代码格式： 20190714B02.jpg 1234567多条声明需要用分号分隔&lt;style type=\"text/css\"&gt;p&#123; font-size:12px; /*css的注释语句这样写*/ color:red;&#125;&lt;style&gt; css样式有三种形式：内联式、嵌入式和外部式①内联式1&lt;p style=\"color:red;font-size:12px\"&gt;这里文字是红色，大小为12px&lt;/p&gt; ②嵌入式123456789&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;&lt;title&gt;嵌入式css样式&lt;/title&gt;&lt;style type=\"text/css\"&gt;span&#123; /*选择器*/ color:red; /*样式*/&#125;&lt;/style&gt;&lt;/head&gt; ③外部式12345678连接style.css，样式写在了该文件中&lt;head&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;&lt;title&gt;嵌入式css样式&lt;/title&gt;&lt;link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;&lt;/head&gt;&lt;body&gt; 三种样式的优先级：内联式 &gt; 嵌入式 &gt; 外部式但是嵌入式&gt;外部式有一个前提：嵌入式css样式的位置一定在外部式的后面。如右代码编辑器就是这样，代码在…代码的前面（实际开发中也是这么写的）。感兴趣的小伙伴可以试一下，把它们调换顺序，再看他们的优先级是否变化。【其实总结来说，就是–就近原则（离被设置元素越近优先级别越高）】 类选择器12345678910111213141516语法：.类选器名称&#123;css样式代码;&#125;注意：1、英文圆点开头2、其中类选器名称可以任意起名（但不要起中文噢）使用方法：第一步：使用合适的标签把要修饰的内容标记起来，如下：&lt;span&gt;胆小如鼠&lt;/span&gt;第二步：使用class=\"类选择器名称\"为标签设置一个类，如下：&lt;span class=\"stress\"&gt;胆小如鼠&lt;/span&gt;第三步：设置类选器css样式，如下：.stress&#123;color:red;&#125;/*类前面要加入一个英文圆点*/ eg: 20190714B03.jpg ID选择器1234在很多方面，ID选择器都类似于类选择符，但也有一些重要的区别：1、为标签设置id=\"ID名称\"，而不是class=\"类名称\"。2、ID选择符的前面是井号（#）号，而不是英文圆点（.） eg: 20190714B04.jpg imooc 8-5 –&gt;go","categories":[],"tags":[{"name":"web前端","slug":"web前端","permalink":"http://blog.hzebin.cn/tags/web前端/"}]},{"title":"web学习之html","slug":"web学习之html","date":"2019-07-14T08:15:00.000Z","updated":"2019-07-14T08:15:53.413Z","comments":true,"path":"2019/07/14/web学习之html/","link":"","permalink":"http://blog.hzebin.cn/2019/07/14/web学习之html/","excerpt":"","text":"HTML是网页内容的载体。内容就是网页制作者放在页面上想要让用户浏览的信息，可以包含文字、图片、视频等。 CSS样式是表现。就像网页的外衣。比如，标题字体、颜色变化，或为标题加入背景图片、边框等。所有这些用来改变内容外观的东西称之为表现。 JavaScript是用来实现网页上的特效效果。如：鼠标滑过弹出下拉菜单。或鼠标滑过表格的背景颜色改变。还有焦点新闻（新闻图片）的轮换。可以这么理解，有动画的，有交互的一般都是用JavaScript来实现的。 1234567891011121314151617&lt;!DOCTYPE HTML&gt;&lt;html&gt; &lt;!--根标签--&gt; &lt;head&gt; &lt;!--文档头部标签--&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt; &lt;title&gt;Html和CSS的关系&lt;/title&gt; &lt;style type=\"text/css\"&gt; h1&#123; font-size:12px; color:#930; text-align:center; &#125; &lt;!--css样式--&gt; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;!--网页显示的主要内容--&gt; &lt;h1&gt;Hello World!&lt;/h1&gt; &lt;/body&gt;&lt;/html&gt; 123456789101112131415标签可以大写或小写，但建议为小写&lt;h1&gt;&lt;/h1&gt; 标题标签&lt;p&gt;段落文本&lt;/p&gt; 段落标签 [默认样式：段前段后都会有空白]&lt;img src=\"1.jpg\"&gt; 图片img引用标签&lt;em&gt;&lt;/em&gt; 斜字体，强调关键字&lt;strong&gt;&lt;/strong&gt; 粗字体&lt;p1&gt;&lt;/p2&gt; ... &lt;p6&gt;&lt;/p6&gt; 文章标题 [默认样式：加粗 1到6字体从大到小]&lt;span&gt;文本&lt;/span&gt; 为文字设置单独的样式&lt;br/&gt; 换行&lt;hr/&gt; 水平横线 [默认样式：加粗黑色]&lt;address&gt;联系地址信息&lt;/address&gt; 地址信息标签 [默认样式：斜体 ;可以定义一个地址，如电子邮件地址、签名、文档的作者身份]&lt;code&gt;代码语言&lt;code&gt; 单行代码&lt;pre&gt;代码语言&lt;/pre&gt; 多行代码 [代码会保留空格和换行符]&lt;div&gt;&lt;/div&gt; 可以把一些独立的逻辑部分划分出来，相当于一个容器&amp;nbsp; 空格 1234567891011&lt;head&gt;标签的作用:文档的头部描述了文档的各种属性和信息，包括文档的标题等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。下面这些标签可用在 head 部分:&lt;head&gt; &lt;title&gt;...&lt;/title&gt; &lt;!--网页的标题信息--&gt; &lt;meta&gt; &lt;link&gt; &lt;style&gt;...&lt;/style&gt; &lt;script&gt;...&lt;/script&gt;&lt;/head&gt; 1&lt;span&gt;&lt;/span&gt;标签 为文字设置单独的样式eg: 20190714A01.jpg 12&lt;q&gt;引用文本&lt;/q&gt;标签短文本引用，引用别人的话，自动为文本两边加上双引号 eg: 20190714A02.jpg 12&lt;blockquote&gt;文本引用&lt;/blockquote&gt;标签对长文本进行引用，引用的文本整段会缩进 20190714A03.jpg 12ul-li标签列表显示标签，没有前后顺序,默认样式每项li前都会自带一个圆点 eg: 20190714A04.jpg ol-li标签列表显示标签，有前后顺序，默认样式每项前有序号，序号从1开始eg: 20190714A05.jpg 123&lt;div&gt;&lt;/div&gt; 标签可以为一个逻辑部分设置一个名称，唯一标识&lt;div id=\"板块名称\"&gt;..&lt;/div&gt; 123456789&lt;table&gt;&lt;/table&gt;标签创建表格的元素有table、tbody、tr(行)、th（表格表头，默认粗体居中）、td(单元格)&lt;tbody&gt;…&lt;/tbody&gt;：如果不加&lt;thead&gt;&lt;tbody&gt;&lt;tfooter&gt; , table表格加载完后才显示。加上这些表格结构， tbody包含行的内容下载完优先显示，不必等待表格结束后在显示，同时如果表格很长，用tbody分段，可以一部分一部分地显示。（通俗理解table 可以按结构一块块的显示，不在等整个表格加载完后显示。）&lt;table summary=\"表格简介文本\"&gt; 给表格添加摘要摘要的内容是不会在浏览器中显示出来的。它的作用是增加表格的可读性(语义化)，使搜索引擎更好的读懂表格内容，还可以使屏幕阅读器更好的帮助特殊用户读取表格内容。&lt;caption&gt;标题文本&lt;/caption&gt; 给表格添加标题用以描述表格内容，标题的显示位置：表格上方。 eg:为表格加入边框 20190714A06.jpg eg:为表格添加摘要和标题 20190714A07.jpg 12345678&lt;a&gt;标签链接到另一个页面&lt;a href=\"目标网址\" title=\"鼠标滑过显示的文本\"&gt;链接显示的文本&lt;/a&gt;只要为文本加入a标签后，文字的颜色就会自动变为蓝色（被点击过的文本颜色为紫色）设置在新的浏览器窗口中打开&lt;a href=\"目标网址\" target=\"_blank\"&gt;click here!&lt;/a&gt;&lt;a&gt;标签可以利用mailto链接邮件地址 mailto参数详解： 20190714A08.jpg eg:如果mailto后面同时有多个参数的话，第一个参数必须以“?”开头，后面的参数每一个都以“&amp;”分隔。 20190714A09.jpg 1234&lt;img&gt; 插入图片的标签&lt;img src=\"图片地址\" alt=\"下载失败时的替换文本\" title = \"提示文本\"&gt;1、title：提供在图像可见时对图像的描述(鼠标滑过图片时显示的文本)；2、图像可以是GIF，PNG，JPEG格式的图像文件。 123456789101112131415&lt;form&gt;&lt;/form&gt; 表单标签，与用户交互&lt;form method=\"传送方式\" action=\"服务器文件\"&gt;action ：浏览者输入的数据被传送到的地方,比如一个PHP页面(save.php)文本输入框、密码输入框&lt;form&gt; &lt;input type=\"text/password\" name=\"名称\" value=\"文本\" /&gt;&lt;/form&gt;1、type： 当type=\"text\"时，输入框为文本输入框 当type=\"password\"时, 输入框为密码输入框 当type=\"submit\"时, 确定按钮 当type=\"reset\"时, 重置按钮2、name：为文本框命名，以备后台程序ASP 、PHP使用。3、value：为文本输入框设置默认值。(一般起到提示作用) 1234567891011121314&lt;textaarea&gt;&lt;/textarea&gt; 文本域，支持多行文本输入语法：&lt;textarea rows=\"行数\" cols=\"列数\"&gt;文本&lt;/textarea&gt;1、&lt;textarea&gt;标签是成对出现的，以&lt;textarea&gt;开始，以&lt;/textarea&gt;结束。2、cols ：多行输入域的列数。3、rows ：多行输入域的行数。4、在&lt;textarea&gt;&lt;/textarea&gt;标签之间可以输入默认值。eg:&lt;form method=\"post\" action=\"save.php\"&gt; &lt;label&gt;联系我们&lt;/label&gt; &lt;textarea cols=\"50\" rows=\"10\" &gt;在这里输入内容...&lt;/textarea&gt;&lt;/form&gt; 123456789使用单选框、复选框，让用户选择语法：&lt;input type=\"radio/checkbox\" value=\"值\" name=\"名称\" checked=\"checked\"/&gt;1、type: 当 type=\"radio\" 时，控件为单选框 当 type=\"checkbox\" 时，控件为复选框2、value：提交数据到服务器的值（后台程序PHP使用）3、name：为控件命名，以备后台程序 ASP、PHP 使用4、checked：当设置 checked=\"checked\" 时，该选项被默认选中 eg: 20190714A10.jpg 下拉框列表eg: 20190714A11.jpg 12使用下拉列表框进行多选下拉列表也可以进行多选操作，在&lt;select&gt;标签中设置multiple=\"multiple\"属性，就可以实现多选功能，在 windows 操作系统下，进行多选时按下Ctrl键同时进行单击（在 Mac下使用 Command +单击），可以选择多个选项。 eg: 20190714A12.jpg 1234567form表单中的label标签label标签不会向用户呈现任何特殊效果，它的作用是为鼠标用户改进了可用性。如果你在 label 标签内点击文本，就会触发此控件。就是说，当用户单击选中该label标签时，浏览器就会自动将焦点转到和标签相关的表单控件上（就自动选中和该label标签相关连的表单控件上）。语法：&lt;label for=\"控件id名称\"&gt;注意：标签的 for 属性中的值应当与相关控件的 id 属性值一定要相同。 eg: 20190714A13.jpg","categories":[],"tags":[{"name":"web前端","slug":"web前端","permalink":"http://blog.hzebin.cn/tags/web前端/"}]},{"title":"软件设计师之程序语言基础知识","slug":"软件设计师之程序语言基础知识","date":"2019-03-16T12:46:28.000Z","updated":"2019-03-16T14:36:02.553Z","comments":true,"path":"2019/03/16/软件设计师之程序语言基础知识/","link":"","permalink":"http://blog.hzebin.cn/2019/03/16/软件设计师之程序语言基础知识/","excerpt":"","text":"基础知识低级语言和高级语言(1)低级语言机器语言和汇编语言称为低级语言。&emsp;&emsp;机器语言指0、1组成的机器指令序列&emsp;&emsp;汇编语言指用符号表示指令的语言&emsp;&emsp;MOV AX,2&emsp;&emsp;MOV BX,3&emsp;&emsp;ADD AX,BX (2)高级语言&emsp;&emsp;高级语言是从人类的逻辑思维角度出发、面向各类应用的程序语言，抽象程度大大提高，需要编译成特定机器上的目标代码才能执行。这类语言与人们使用的自然语言比较接近，大大提高了 程序设计的效率。 编译程序和解释程序&emsp;&emsp;高级语言或汇编语言编写的程序称为源程序，源程序不能直接 在计算机上执行。&emsp;&emsp;如果源程序是汇编语言编写的，则需要一个称为汇编程序 的翻译程序将其翻译成目标程序，然后才能执行。&emsp;&emsp;如果源程序是为高级语言时，这个翻译程序称为编译程序&emsp;&emsp;按源程序中语句的执行顺序，逐条翻译并立即执行相关功 能的处理程序、称为解释程序。 程序的执行方式：1、编译执行：按编译方式在计算机上执行用高级语言编写的 程序，需经过两个阶段：编译阶段，把源程序翻译为目标程序； 运行阶段，真正执行此目标程序。&emsp;&emsp;优点：执行效率高、占用资源小。&emsp;&emsp;缺点：兼容性差。2、解释执行：源程序的每个语句一经解释就立即执行。&emsp;&emsp;优点：可移植性较好、开发速度较快、与用户通信方便。&emsp;&emsp;缺点：效率低。 编译系统基本原理编译程序的工作过程可以分为6个阶段：词法分析、语法分析、语义分析、中间代码生成、代码优化、目标代码生成。 ①词法分析阶段输入源程序，对构成源程序的字符串进行扫描和分解，识别 出一个个的单词，删掉无用信息，报告分析时的错误。一个程序语言的基本语法符号分为五类：关键字、标识符、 常量、运算符、界符等词法分析器所输出单词符号常常表示成如下的二元式：(单词种别，单词符号的属性值)描述词法规则通常用：正规式和有限自动机 2、状态转换图状态转换图是状态有限的有向图，用圆圈表示结点状态，结 点之间有向边代表状态转换，有向边上可标记字符，表示前 一状态接受某一个字符之后的状态转移。&emsp;&emsp;下图表示在状态i下的状态转换：&emsp;&emsp;若输入字符为x，则读入x并转换到状态j&emsp;&emsp;若输入字符为y，则读入y并转换到状态k 状态转换图的功能&emsp;&emsp;用于识别一定字符串状态转换图的要求&emsp;&emsp;状态（即结点）个数有限&emsp;&emsp;至少一个初始状态，若干终止状态&emsp;&emsp;每条边上标有字符（也可以是空字符） 状态转换图的表示习惯&emsp;&emsp;初始状态用”○”表示&emsp;&emsp;非终止状态用”○”表示&emsp;&emsp;状态之间的跳转用含有字符的有向边表示&emsp;&emsp;终止状态用”◎”表示&emsp;&emsp;多读进一个字符用”*”表示 3、正规表达式与正规集（定义和运算）状态转换图可以构造词法分析程序，但属于非形式化描述 正规表达式（简称正规式）是词法分析的形式化表示方法。 所谓形式化的方法，是指用一整套带有严格规定的符号体系 来描述问题的方法。&emsp;&emsp;优点：更加清晰和准确 正规式与正规集的递归定义：1、ε和Φ都是字母表∑上的正规式，它们所表示的正规集分别为{ε}和Φ；2、任何a∈∑，a是∑上的一个正规式，它所表示的正规集为{a}；3、仅由有限次使用上述三步骤而得到的表达式才是∑上的正规式。仅由这 些正规式所表示的子集才是∑上的正规集。 正规式定义中“|”读为“或“·”读为“连接”“*”读为”闭包”（即，任意有限次的自重复连接） 程序语言的控制结构–unfinish","categories":[],"tags":[{"name":"软件设计师","slug":"软件设计师","permalink":"http://blog.hzebin.cn/tags/软件设计师/"},{"name":"程序语言基础知识","slug":"程序语言基础知识","permalink":"http://blog.hzebin.cn/tags/程序语言基础知识/"}]},{"title":"在MyEclipse开发JSP的初学小知识","slug":"在MyEclipse开发JSP的初学小知识","date":"2019-02-25T12:31:04.000Z","updated":"2019-02-25T14:46:59.477Z","comments":true,"path":"2019/02/25/在MyEclipse开发JSP的初学小知识/","link":"","permalink":"http://blog.hzebin.cn/2019/02/25/在MyEclipse开发JSP的初学小知识/","excerpt":"","text":"外挂Tomcat服务器如果没有MyEclipse编译器，如何浏览JSP项目呢？通过Tomcat软件就可以浏览MyEclipse导出的.war项目 从MyEclipse导出项目右击项目 -&gt; Export -&gt; WAR file 20180225_2_A Tomcat服务器将Tomcat下载到D:\\apache-tomcat-9.0.14 ， 则该目录为Tomcat的安装路径 20180225_2_B conf下的server.xml文件可以配置Tomcat的端口号 20180225_2_C 双击startup.bat可以启动Tomcat服务器 20180225_2_D webapps文件夹内存放的是项目的地方，将导出的homework.war文件粘贴的这个位置，则就是讲这个JSP项目部署到Tomcat服务器中了 20180225_2_E 打开浏览器输入正确的端口号和项目路径，可以浏览到项目的内容 20180225_2_F 双击shutdown.bat可以关闭Tomcat服务器 20180225_2_G 服务器上编译的文件存放在这个位置 20180225_2_H","categories":[],"tags":[{"name":"MyEclipse","slug":"MyEclipse","permalink":"http://blog.hzebin.cn/tags/MyEclipse/"},{"name":"JSP Web","slug":"JSP-Web","permalink":"http://blog.hzebin.cn/tags/JSP-Web/"}]},{"title":"初学在MyEclipse下开发JSP页面","slug":"初学在MyEclipse下开发JSP页面","date":"2019-02-25T11:35:56.000Z","updated":"2019-02-25T14:47:04.220Z","comments":true,"path":"2019/02/25/初学在MyEclipse下开发JSP页面/","link":"","permalink":"http://blog.hzebin.cn/2019/02/25/初学在MyEclipse下开发JSP页面/","excerpt":"","text":"新建JSP Web项目依次操作：File -&gt; New -&gt; Web Projects 20190225A 依次操作：Next -&gt; Next 20190225B 点击finish完成项目的创建 项目结构图如下 20190225C 修改index.jsp文件的代码，第一行修改为pageEncoding=”UTF-8” 20190225D 在下方的Servers选项卡中，点击右边图标，将需要部署的项目进行部署（add and remove) 20190225E 将项目homework添加到服务器完成部署 20190225F 20190225G 点击启动Tomcat服务器 20190225H Console选项卡显示启动服务器的结果，http-8080表示服务器端口 20190225I 在浏览器中输入正确的端口号和路径浏览jsp网页 20190225J 在serverxml文件中可以修改项目的端口号 20190225K","categories":[],"tags":[{"name":"MyEclipse","slug":"MyEclipse","permalink":"http://blog.hzebin.cn/tags/MyEclipse/"},{"name":"JSP Web","slug":"JSP-Web","permalink":"http://blog.hzebin.cn/tags/JSP-Web/"}]},{"title":"如何在Eclipse配置Tomcat服务器及创建Java Web项目","slug":"如何在Eclipse配置Tomcat服务器及创建Java Web项目","date":"2019-02-10T13:43:55.772Z","updated":"2019-02-10T14:54:05.861Z","comments":true,"path":"2019/02/10/如何在Eclipse配置Tomcat服务器及创建Java Web项目/","link":"","permalink":"http://blog.hzebin.cn/2019/02/10/如何在Eclipse配置Tomcat服务器及创建Java Web项目/","excerpt":"","text":"配置前的准备1.通过Tomcat官网链接 http://tomcat.apache.org/ 下载合适的Tomcat2.安装好Eclipse Jee Neon3.配置好Java的JDK，新建Eclipse的workplace 在Eclipse Jee中配置Tomcat点击上边栏Window里的Preferences选项，出现下图 选择Server -&gt; Runtime Environments -&gt; add，出现下图 选择你下载的Tomcat的服务器版本，点击next 选择好下载的Tomcat的文件的目录，点击finish，点击ok在下面的Servers选项卡点击蓝色的英文 选择下载的Tomcat版本并点击finish 出现下图显示的Tomcat服务器并双击它 我这里更改了服务器访问的端口为8888选择Use Tomcat…..如下图 之后保存文件鼠标右击服务器并点击start 当Tomcat服务器显示started时，Tomcat服务器已经启动打开浏览器输入localhost:8888 (端口已设置为8888），出现Tomcat的所示页面则表明Tomcat配置完成，如下图 新建JSP Web项目在eclipse左侧空白处，右键选择New-&gt;Dynamic Web Project（或者左上角File-&gt;New-&gt;Dynamic Web Project）。若New的选择列表中没有Dynamic Web Project，则选择Others，然后输入dynamic（一般输入dy就可以），选择Dynamic Web Project。出现如下图 选择好之后点击next -&gt; next如下所示 修改根目录文件名为WebRoot，下面打勾，最后点击finish此时项目创建完毕，结果如下图的项目文件结构： jsp项目需要写在WebRoot文件夹内，右击WebRoot添加Jsp File文件并编辑代码 右击Tomcat服务器选择Add and Remove，将Hello项目向右部署到服务器 右击启动start Tomcat服务器或restart在浏览器输入正确的URL则可以看到部署的JSP网页","categories":[],"tags":[{"name":"JSP Web","slug":"JSP-Web","permalink":"http://blog.hzebin.cn/tags/JSP-Web/"},{"name":"Tomcat","slug":"Tomcat","permalink":"http://blog.hzebin.cn/tags/Tomcat/"},{"name":"Eclipse","slug":"Eclipse","permalink":"http://blog.hzebin.cn/tags/Eclipse/"}]},{"title":"Centos下Nginx安装与配置","slug":"Centos下Nginx安装与配置","date":"2019-01-30T10:19:06.000Z","updated":"2019-01-30T11:25:29.247Z","comments":true,"path":"2019/01/30/Centos下Nginx安装与配置/","link":"","permalink":"http://blog.hzebin.cn/2019/01/30/Centos下Nginx安装与配置/","excerpt":"","text":"Nginx有什么用？我们知道一个服务器只有一个80端口，如果我们有一个服务器，并且我们有多个web应用都需要使用到服务器的80端口，我们该怎么办呢？当第一个web应用使用了80端口后，其他应用就使用不了80端口，因为服务器的80端口已经被第一个web应用给占用了，为了解决多个应用在同一个服务器共同使用80端口，我们可以利用Nginx。 在Centos服务器下安装Nginx安装Nginx前的环境准备首先由于nginx的一些模块依赖一些lib库，所以在安装nginx之前，必须先安装这些lib库，这些依赖库主要有g++、gcc、openssl-devel、pcre-devel和zlib-devel 所以执行如下命令安装 1234$ yum install gcc-c++ $ yum install pcre pcre-devel $ yum install zlib zlib-devel $ yum install openssl openssl--devel 开始安装Nginx安装之前，最好检查一下是否已经安装有nginx1$ find -name nginx 如果系统已经安装了nginx，那么就先卸载1$ yum remove nginx 首先进入/usr/local目录1$ cd /usr/local 从官网下载最新版的nginx,可以进入官网寻找最新版本1$ wget http://nginx.org/download/nginx-1.15.8.tar.gz 解压nginx压缩包1$ tar -zxvf nginx-1.15.8.tar.gz 会产生一个nginx-1.15.8 目录，这时进入nginx-1.15.8目录1$ cd nginx-1.15.8 接下来安装，使用–prefix参数指定nginx安装的目录,make、make install安装，命令如下：【如何系统提示./configure: error: the HTTP gzip module requires the zlib library. 则再安装库，命令为yum install -y zlib-devel】 123$ sudo ./configure --prefix=/usr/local/nginx #这一步需要按需要添加编译参数$ sudo make$ sudo make install 如果没有报错，顺利完成后，最好看一下nginx的安装目录1$ whereis nginx 安装完毕后，进入安装后目录（/usr/local/nginx）便可以启动或停止它了。 到此，使用CentOS安装nginx已经完成了! 启动先测试一下配置文件是否正确：1$ /usr/local/nginx/sbin/nginx -t 无问题可以启动：【如果使用netstat -ltunp命令，可以看到0.0.0.0:80端口被httpd这个进程占用了， 如何解决服务器的80端口被httpd占用，可以先让它httpd结束，命令为service httpd stop ； 启用httpd的命令为service httpd start】1$ /usr/local/nginx/sbin/nginx 检查是否启动成功：打开浏览器访问此机器的 IP，如果浏览器出现 Welcome to nginx! 则表示 Nginx 已经安装并运行成功。部分命令如下：重启：1$ /usr/local/nginx/sbin/nginx –s reload 停止：1$ /usr/local/nginx/sbin/nginx –s stop 测试配置文件是否正常：1$ /usr/local/nginx/sbin/nginx –t 强制关闭：1$ pkill nginx nginx.conf的配置我们可以在/usr/local/nginx/conf目录下找到nginx.conf文件，如下图 假设你的官网主页使用了80端口，它的url为http://xxx.cn ，另一个abc应用的url为http://abc.xxx.cn ,先在服务器建好文件夹准备存放不同的应用12345678910111213141516171819202122232425262728293031323334353637worker_processes 1;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; server &#123; listen 80; #使用80端口监听 server_name localhost; location / &#123; root /var/www/html/; #放官网的文件目录 index index.html index.htm; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125; server &#123; listen 80; #使用80端口监听 server_name abc.xxx.cn; #abc web应用的url location / &#123; root /var/www/web_abc/; #存放abc web应用的文件夹 index index.html index.htm; proxy_pass http://120.55.123.123:1234; #假设服务器的ip地址为120.55.123.123，想用1234端口来转 #发,1234端口先设置服务器规则为允许 &#125; &#125; &#125; 现在在浏览器输入http://xxx.cn 就可以访问官网了，在浏览器输入http://abc.xxx.cn （子域名）就可以访问abc web应用了","categories":[],"tags":[{"name":"服务器","slug":"服务器","permalink":"http://blog.hzebin.cn/tags/服务器/"},{"name":"Centos","slug":"Centos","permalink":"http://blog.hzebin.cn/tags/Centos/"},{"name":"Nginx","slug":"Nginx","permalink":"http://blog.hzebin.cn/tags/Nginx/"}]},{"title":"利用python的turtle库绘画（随机花蕾）","slug":"利用python的turtle库绘画（随机花蕾）","date":"2019-01-25T06:44:38.000Z","updated":"2019-01-25T07:17:12.068Z","comments":true,"path":"2019/01/25/利用python的turtle库绘画（随机花蕾）/","link":"","permalink":"http://blog.hzebin.cn/2019/01/25/利用python的turtle库绘画（随机花蕾）/","excerpt":"","text":"使用python语言，利用turtle库绘画出了一个随机花蕾图，程序中使用了随机函数，所以每次运行结束展示的效果图都会不一样，图片展示： python源代码展示：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106import turtleimport randomturtle.tracer(100)def drawLine(drawColor,a,b,ra,rb): turtle.left(90) turtle.color(drawColor) turtle.pensize(1.8) turtle.circle(ra,a/2) turtle.pensize(1.6) turtle.circle(ra,a/2) turtle.pensize(1.4) turtle.circle(-rb,b/2) turtle.pensize(1.2) turtle.circle(-rb,b/2) turtle.penup() turtle.right(180) turtle.circle(rb,b) turtle.circle(-ra,a) turtle.left(180) turtle.pendown() turtle.right(90)def flower1(mySize,myLen,myColor): #花 六个花瓣 参数：画笔size 花瓣len 颜色color turtle.pensize(mySize) turtle.color(myColor) turtle.pendown() time=0 while time&lt;6: turtle.fd(myLen) turtle.left(120) turtle.fd(myLen) turtle.right(60) time+=1 turtle.penup()def rflower(left,s,rlena,rlenb,k,stepa,stepb): #画花的范围left 间隔s 花瓣大小 rCur 花间间隔stepa stepb while k&gt;left: turtle.right(90) turtle.fd(-k) k-=s turtle.fd(k) turtle.left(90) twoCircle=0 while twoCircle&lt;360: c=random.randint(0,1) if c: flower1(random.randint(2,5),random.randint(rlena,rlenb),\"#FF1493\") else: flower1(random.randint(2,5),random.randint(rlena,rlenb),\"#FFB6C1\") turtle.penup() step=random.randint(stepa,stepb) turtle.circle(k,step) twoCircle+=step return left-5 #turtle.setup(600,600)turtle.getscreen().bgcolor(\"black\")#turtle.speed(2000)turtle.penup()turtle.fd(250)turtle.left(90)'''#delect start..........turtle.pendown()turtle.color(\"#FFFFFF\")turtle.circle(250,360)turtle.penup()#delete end............'''turtle.pendown()# 深粉色 #FF1493# 浅粉红 #FFB6C1### 步骤1 ###oneCircle=0while oneCircle&lt;720: ra=random.randint(100,150) #曲线半径 a=random.randint(10,30) #曲线第一段的弧度 rb=random.randint(50,200) #曲线半径 b=random.randint(10,30) #曲线第二段的弧度 if oneCircle&lt;360: drawLine(\"#FF1493\",a,b,ra,rb) else: drawLine(\"#FFB6C1\",a,b,ra,rb) step=random.randint(3,7) turtle.penup() turtle.circle(250,step) turtle.pendown() oneCircle+=step### 步骤2 ###turtle.penup()k=245k=rflower(220,random.randint(10,20),1,3,k,3,20)k=rflower(150,random.randint(30,50),2,6,k,20,50)k=rflower(85,random.randint(50,70),5,15,k,50,100)turtle.update()","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://blog.hzebin.cn/tags/python/"},{"name":"turtle库","slug":"turtle库","permalink":"http://blog.hzebin.cn/tags/turtle库/"}]},{"title":"利用python的turtle库绘画（卡通人物）","slug":"利用python的turtle库绘画（卡通人物）","date":"2019-01-25T06:34:01.000Z","updated":"2019-01-25T07:11:16.359Z","comments":true,"path":"2019/01/25/利用python的turtle库绘画（卡通人物）/","link":"","permalink":"http://blog.hzebin.cn/2019/01/25/利用python的turtle库绘画（卡通人物）/","excerpt":"","text":"使用python语言，利用turtle库绘画出了一个卡通人物图，图片展示： python源代码展示：import turtleturtle.tracer(100)def init(): ##图画框的初始化 #turtle.setup(700, 700, 10, 0) turtle.pensize(8) turtle.seth(-90) turtle.penup() turtle.fd(250) turtle.seth(-180) # turtle.speed(100)def leftCloth(): ##人物左边的衣服 turtle.begin_fill() turtle.pendown() turtle.fd(30) # print(turtle.position()) #(-30.00,-250.00) turtle.right(10) turtle.fd(20) turtle.left(5) turtle.fd(40) turtle.right(40) turtle.fd(15) turtle.seth(85) turtle.fd(40) # print(turtle.position()) #(-96.66,-192.59) for i in range(10): turtle.fd(5) turtle.left(4) turtle.left(10) turtle.fd(150) # print(turtle.position()) #(-213.75,-38.78) turtle.right(90) turtle.fd(5) turtle.right(10) turtle.fd(5) turtle.left(10) turtle.fd(40) turtle.right(85) turtle.fd(110) for i in range(10): turtle.fd(3) turtle.left(3) turtle.fd(10) for i in range(10): turtle.fd(3) turtle.right(3) turtle.right(10) turtle.fd(20) turtle.right(20) for i in range(68): turtle.fd(2) turtle.right(0.3) turtle.fillcolor('#493830') turtle.end_fill() first = True ##衣服的两条不同颜色的折线 for j in range(2): turtle.penup() if first: turtle.goto(-30, -250) first = False else: turtle.goto(-40, -250) turtle.pencolor(\"#282320\") turtle.pensize(11) turtle.pendown() turtle.seth(100) turtle.fd(40) turtle.right(60) turtle.fd(30) turtle.left(90) turtle.fd(25) turtle.right(30) turtle.fd(50) for i in range(10): turtle.fd(3) turtle.left(2) turtle.pensize(8) # print(\"* 左衣间&#123;&#125;\".format(turtle.position())) turtle.pencolor(\"black\") # 左边衣服的两条褶皱 turtle.seth(-100) turtle.fd(20) turtle.penup() turtle.goto(-95, -170) turtle.pendown() turtle.seth(10) for i in range(10): turtle.fd(3) turtle.left(6)def palm(): # 人物的左手掌 turtle.begin_fill() turtle.penup() turtle.goto(-205, -30) turtle.pendown() turtle.seth(150) turtle.fd(20) for i in range(10): turtle.fd(3) turtle.right(5) for i in range(10): turtle.fd(1) turtle.right(5) for i in range(10): turtle.fd(2) turtle.right(3) turtle.right(20) turtle.fd(5) turtle.left(100) turtle.fd(10) turtle.right(90) turtle.fd(20) turtle.right(80) for i in range(20): turtle.fd(2) turtle.left(0.2) turtle.goto(-205, -30) turtle.fillcolor(\"#fdeab0\") turtle.end_fill()def neck(): # 人物的三角形脖子 turtle.penup() turtle.pencolor(\"black\") turtle.goto(-58, -85) turtle.seth(-10) turtle.pensize(5) turtle.pendown() turtle.begin_fill() for i in range(30): turtle.fd(3) turtle.left(0.6) turtle.seth(-60) turtle.fd(10) turtle.right(80) turtle.fd(30) # print(\"衣尖&#123;&#125;\".format(turtle.position())) turtle.right(60) turtle.fd(40) turtle.goto(-58, -85) turtle.fillcolor(\"#fdeab0\") turtle.end_fill()def collar(): # 人物中间的衬衫 turtle.goto(-30, -100) turtle.pencolor(\"black\") turtle.begin_fill() turtle.goto(-20, -120) turtle.goto(0, -180) turtle.goto(12, -250) turtle.seth(0) turtle.fd(60) turtle.seth(90) # print(\"衣服右下角&#123;&#125;\".format(turtle.position())) for i in range(53): turtle.fd(3) turtle.left(0.5) turtle.goto(13, -114) turtle.goto(-30, -100) turtle.fillcolor(\"#c1d2d6\") turtle.end_fill()def rightCloth(): # 人物右边的衣服 turtle.penup() turtle.goto(72, -250) turtle.seth(90) turtle.begin_fill() for i in range(58): turtle.fd(3) turtle.left(0.5) # print(\"右上衣尖&#123;&#125;\".format(turtle.position())) turtle.seth(-20) turtle.pendown() turtle.fd(20) for i in range(20): turtle.fd(2) turtle.right(2) turtle.fd(20) for i in range(30): turtle.fd(3) turtle.right(1) turtle.fd(10) turtle.right(30) turtle.fd(20) # print(\"右手间&#123;&#125;\".format(turtle.position())) turtle.goto(72, -250) turtle.fillcolor(\"#493830\") turtle.end_fill() first = True for j in range(2): # 右边衣服的两条不同颜色的折线 turtle.penup() if first: turtle.goto(102, -245) first = False else: turtle.goto(107, -245) turtle.pensize(5) turtle.pencolor(\"#282320\") turtle.pendown() turtle.seth(100) turtle.fd(40) turtle.left(30) turtle.fd(25) turtle.right(60) turtle.fd(30) turtle.left(60) turtle.fd(70)def face(): # 人物的脸部轮廓 turtle.penup() turtle.goto(29, -83) turtle.seth(0) turtle.pendown() turtle.begin_fill() for i in range(20): turtle.fd(6) turtle.left(2) for i in range(20): turtle.fd(2) turtle.left(4) for i in range(20): turtle.fd(2) turtle.right(2) # 头发位置开始 # print(\"头发开始位置&#123;&#125;\".format(turtle.position())) for i in range(20): turtle.fd(5) turtle.left(0.8) for i in range(10): turtle.fd(2) turtle.left(2) turtle.left(20) for i in range(50): turtle.fd(7) turtle.left(1.5) turtle.seth(-60) for i in range(40): turtle.fd(5) turtle.right(1.5) # 到达左手衣袖的上面 # print(\"左手&#123;&#125;\".format(turtle.position())) turtle.left(80) turtle.fd(115) for i in range(10): turtle.fd(5) turtle.left(4) turtle.left(10) turtle.fd(45) turtle.goto(29, -85) turtle.fillcolor(\"#fdeab0\") turtle.end_fill()def hair(): # 人物的头发 turtle.penup() turtle.goto(-181, -1) turtle.seth(50) turtle.pendown() turtle.begin_fill() for i in range(45): turtle.fd(4) turtle.left(1.6) turtle.seth(10) turtle.fd(100) turtle.right(5) turtle.fd(40) turtle.right(10) turtle.fd(80) for i in range(20): turtle.fd(1) turtle.right(1) turtle.fd(50) turtle.circle(-100, 10) for i in range(30): turtle.fd(1) turtle.right(2) turtle.fd(40) for i in range(20): turtle.fd(1) turtle.left(1) turtle.fd(20) turtle.left(180 - 40) turtle.fd(30) for i in range(10): turtle.fd(2) turtle.left(2) for i in range(30): turtle.fd(5) turtle.left(1.5) turtle.left(10) turtle.fd(10) turtle.right(180 - 60) turtle.fd(15) turtle.seth(145) turtle.fd(10) for i in range(10): turtle.fd(6) turtle.left(2) turtle.fd(50) turtle.left(10) turtle.fd(50) for i in range(30): turtle.fd(6) turtle.left(1.5) for i in range(10): turtle.fd(1) turtle.left(1) turtle.left(20) turtle.fd(20) turtle.right(10) for i in range(60): turtle.fd(2) turtle.left(1) turtle.goto(-181, -1) turtle.fillcolor(\"black\") turtle.end_fill()def eyebrow(): # 眉毛 turtle.penup() # 左眉毛 turtle.begin_fill() turtle.pensize(1) turtle.goto(-30, 100) turtle.pendown() turtle.seth(180 - 10) for i in range(20): turtle.fd(1.5) turtle.right(0.3) turtle.circle(-2, 165) turtle.fd(40) turtle.pensize(3) turtle.circle(-2, 200) turtle.goto(-30, 100) turtle.fillcolor(\"black\") turtle.end_fill() turtle.penup() # 右眉毛 turtle.begin_fill() turtle.pensize(1) turtle.seth(0) turtle.goto(50, 100) turtle.pendown() for i in range(20): turtle.fd(1.5) turtle.left(0.3) turtle.circle(2, 165) turtle.fd(40) turtle.pensize(3) turtle.circle(2, 200) turtle.goto(50, 100) turtle.fillcolor(\"black\") turtle.end_fill()def eyes(): # 眼睛 turtle.penup() turtle.begin_fill() # 右眼睛 turtle.goto(65, 80) turtle.seth(30) turtle.pensize(3) turtle.pendown() turtle.circle(-10, 30) for i in range(10): turtle.fd(3) turtle.right(8) turtle.right(20) turtle.fd(15) for i in range(20): turtle.fd(3) turtle.right(10) turtle.left(30) for i in range(10): f = turtle.fd(1.5) turtle.right(0.5) turtle.goto(65, 80) turtle.fillcolor(\"#884330\") turtle.end_fill() turtle.seth(-100) turtle.goto(70, 65) turtle.pencolor(\"black\") turtle.pensize(23) turtle.fd(15) turtle.penup() turtle.pencolor(\"#f9e3d1\") turtle.goto(75, 40) turtle.pendown() turtle.pensize(4) turtle.circle(2.8, 360) # 左眼睛 turtle.penup() turtle.begin_fill() turtle.goto(-50, 80) turtle.seth(30) turtle.pensize(3) turtle.pencolor(\"black\") turtle.pendown() turtle.circle(-10, 30) for i in range(10): turtle.fd(3) turtle.right(8) turtle.right(20) turtle.fd(15) for i in range(20): turtle.fd(3) turtle.right(10) turtle.left(30) for i in range(10): f = turtle.fd(1.5) turtle.right(0.5) turtle.goto(-50, 80) turtle.fillcolor(\"#884330\") turtle.end_fill() turtle.seth(-100) turtle.goto(-45, 65) turtle.pencolor(\"black\") turtle.pensize(23) turtle.fd(12) turtle.penup() turtle.pencolor(\"#f9e3d1\") turtle.goto(-37, 43) turtle.pendown() turtle.pensize(4) turtle.circle(2.8, 360)def redFace(): # 害羞的脸颊 mySize = 30 myLen = 40 first = True for j in range(2): turtle.penup() if first: # 左脸颊 turtle.pensize(mySize) turtle.pencolor(\"#f7bb84\") turtle.goto(-110, 0) first = False else: # 右脸颊 turtle.pencolor(\"#f7bb84\") turtle.seth(0) turtle.fd(140) mySize /= 1.1 myLen /= 1.3 turtle.pendown() turtle.seth(0) turtle.fd(myLen) turtle.penup() turtle.fd(-myLen + 5) for i in range(3): turtle.seth(-50) turtle.fd(-myLen / 4) turtle.pendown() turtle.pencolor(\"black\") turtle.pensize(mySize / 4) turtle.fd(myLen / 3) turtle.penup() turtle.fd(-2) turtle.seth(0) turtle.fd(14)def nose(): # 鼻子 turtle.penup() turtle.goto(10, 0) turtle.pensize(8) turtle.pencolor(\"#e6ce61\") turtle.pendown() for i in range(10): turtle.fd(2) turtle.fd(1)def mouse(): # 嘴巴 turtle.penup() turtle.goto(-10, -60) turtle.pencolor(\"black\") turtle.pendown() for i in range(20): turtle.fd(3) turtle.left(1)def signMyName(): # 签名 turtle.penup() turtle.goto(150, -200) turtle.pendown() turtle.write(\"黄泽彬\\n2018年10月28日\", font=(\"Arial\", 18, \"normal\"))def decoration(): # 手部摇动装饰 first = True for j in range(3): turtle.penup() if first: turtle.goto(-290, 10) first = False else: turtle.goto(-260, -10) turtle.pendown() turtle.seth(-85) for i in range(20): turtle.fd(4) turtle.left(2)def main(): ##主函数 init() ##初始化 leftCloth() ##左边的衣服 palm() # 左边手掌 neck() # 脖子 collar() # 中间的衬衫 rightCloth() # 右衣服 face() # 脸 hair() # 头发 eyebrow() # 眉毛 eyes() # 眼睛 redFace() # 红脸颊 nose() # 鼻子 mouse() # 嘴巴 signMyName() # 签名 decoration() # 手部摇动装饰main() # 主函数turtle.penup()turtle.hideturtle()turtle.update()turtle.done()","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://blog.hzebin.cn/tags/python/"},{"name":"turtle库","slug":"turtle库","permalink":"http://blog.hzebin.cn/tags/turtle库/"}]},{"title":"test","slug":"test","date":"2019-01-20T07:25:54.000Z","updated":"2019-01-25T07:20:17.104Z","comments":true,"path":"2019/01/20/test/","link":"","permalink":"http://blog.hzebin.cn/2019/01/20/test/","excerpt":"","text":"@card{ 在page页中，建议把内容都放到card中。 } @timeline{ 2016@item{ 11月6日为 Card theme 添加 page layout。}}","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://blog.hzebin.cn/tags/test/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-01-20T07:24:37.142Z","updated":"2019-01-25T07:27:17.203Z","comments":true,"path":"2019/01/20/hello-world/","link":"","permalink":"http://blog.hzebin.cn/2019/01/20/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://blog.hzebin.cn/tags/test/"}]}]}