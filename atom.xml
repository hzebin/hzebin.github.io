<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hzebin 黄泽彬的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://github.com/hzebin/"/>
  <updated>2020-01-26T02:42:05.348Z</updated>
  <id>http://github.com/hzebin/</id>
  
  <author>
    <name>Huang Zebin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue</title>
    <link href="http://github.com/hzebin/2020/01/26/vue/"/>
    <id>http://github.com/hzebin/2020/01/26/vue/</id>
    <published>2020-01-26T02:40:24.652Z</published>
    <updated>2020-01-26T02:42:05.348Z</updated>
    
    <content type="html"><![CDATA[<h1 id="6-SCJ-》-CWL"><a href="#6-SCJ-》-CWL" class="headerlink" title="6-SCJ -》 CWL"></a>6-SCJ -》 CWL</h1><h2 id="认识Vue"><a href="#认识Vue" class="headerlink" title="认识Vue"></a>认识Vue</h2><p>Vue(读音似view)</p><p>Vue是一个渐进式的框架，响应式</p><p>Vue有很多特点和Web卡法中常见的高级功能：</p><ol><li>解耦视图和数据</li><li>可复用的组件</li><li>前端路由技术</li><li>状态管理</li><li>虚拟DOM</li></ol><h2 id="引入Vue的CDN"><a href="#引入Vue的CDN" class="headerlink" title="引入Vue的CDN"></a>引入Vue的CDN</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开发环境版本，包含了有帮助的命令行警告--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--生产环境版本，优化了尺寸和速度--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="初步使用"><a href="#初步使用" class="headerlink" title="初步使用"></a>初步使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        &#123;&#123;message&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,  <span class="comment">//绑定元素</span></span></span><br><span class="line"><span class="actionscript">            data: &#123;  <span class="comment">//设置数据</span></span></span><br><span class="line"><span class="actionscript">                message: <span class="string">'Hello 黄泽彬'</span>,</span></span><br><span class="line"><span class="actionscript">                name: <span class="string">'黄泽彬'</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="循环展示列表数据-v-for"><a href="#循环展示列表数据-v-for" class="headerlink" title="循环展示列表数据 v-for"></a>循环展示列表数据 v-for</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"item in movies"</span>&gt;</span></span><br><span class="line">                &#123;&#123;item&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">            data: &#123;</span></span><br><span class="line"><span class="actionscript">                name: <span class="string">'HuangZebin'</span>,</span></span><br><span class="line"><span class="actionscript">                movies: [<span class="string">'速度与激情'</span>, <span class="string">'西游记'</span>, <span class="string">'垃圾'</span>]</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="绑定事件-v-on"><a href="#绑定事件-v-on" class="headerlink" title="绑定事件 v-on"></a>绑定事件 v-on</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        当前技术：&#123;&#123;counter&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"++counter"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"--counter"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">            data: &#123;</span></span><br><span class="line"><span class="undefined">                counter: 0</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        当前技术：&#123;&#123;counter&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"sub"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">            data: &#123;</span></span><br><span class="line"><span class="undefined">                counter: 0</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            methods: &#123;</span></span><br><span class="line"><span class="actionscript">                add: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    ++<span class="keyword">this</span>.counter;</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="actionscript">                sub: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    --<span class="keyword">this</span>.counter;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h2><p>MVVM (Model View View Model)</p><h2 id="Vue实例传入的options"><a href="#Vue实例传入的options" class="headerlink" title="Vue实例传入的options"></a>Vue实例传入的options</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">el</span><br><span class="line">类型：string | HTMLElement</span><br><span class="line">作用：决定之后Vue实例会管理哪一个DOM</span><br><span class="line">data</span><br><span class="line">类型：Object | Function【组件当中data必须是一个函数】</span><br><span class="line">作用：Vue实例对应的数据对象</span><br><span class="line">methods</span><br><span class="line">类型：&#123; [key: string]: Function &#125;</span><br><span class="line">作用：定义属于Vue的一些方法，可以在其他地方调用，也可以在指令中使用</span><br></pre></td></tr></table></figure><h2 id="Mustache语法"><a href="#Mustache语法" class="headerlink" title="Mustache语法"></a>Mustache语法</h2><p>通过Mustache语法（双大括号），可以将data中的文本数据插入到HTML中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--Mustache语法不仅可以写变量，也可以写简单的表达式--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;firstName + ' ' + lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;counter * 2&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'Hello'</span>,</span></span><br><span class="line"><span class="actionscript">        firstName: <span class="string">'黄'</span>,</span></span><br><span class="line"><span class="actionscript">        lastName: <span class="string">'泽彬'</span>,</span></span><br><span class="line"><span class="undefined">        counter: 1</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-once语法"><a href="#v-once语法" class="headerlink" title="v-once语法"></a>v-once语法</h2><p>v-once指令不需要跟任何表达式，该指令表示元素和组件只渲染一次，不会随着数据的改变而改变</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--在控制台修改message，虽是响应式的，但v-once那一句不会改变--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'黄泽彬'</span></span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-html语法"><a href="#v-html语法" class="headerlink" title="v-html语法"></a>v-html语法</h2><p>v-html可以将数据解析为htm格式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;url&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--解析为html--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-html</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        url: '<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://hzebin.cn"</span>&gt;</span>黄泽彬个人主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span>'</span></span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-text语法"><a href="#v-text语法" class="headerlink" title="v-text语法"></a>v-text语法</h2><p>v-text作用和Mustache比较相似：都是用于将数据显示在界面中，v-text通常情况下，接收一个string类型</p><p>（不够灵活，后面的数据会被覆盖，没有双大括号好用）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;message&#125;&#125;456<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--456会被覆盖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-text</span>=<span class="string">"message"</span>&gt;</span>456<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'123'</span></span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="v-pre指令"><a href="#v-pre指令" class="headerlink" title="v-pre指令"></a>v-pre指令</h2><p>v-pre用于跳过这个元素和它子元素的编译过程，用于显示原本的Mustache语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--显示&#123;&#123;message&#125;&#125;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-pre</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'黄泽彬'</span></span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-v-cloak"><a href="#13-v-cloak" class="headerlink" title="[??] 13 v-cloak"></a>[??] 13 v-cloak</h2><h2 id="v-bind指令"><a href="#v-bind指令" class="headerlink" title="v-bind指令"></a>v-bind指令</h2><p>v-bind作用是动态绑定属性，缩写为【:】</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--将数据动态绑定给属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">"imageUrl"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"aHref"</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--语法糖的写法--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">"imageUrl"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"aHref"</span>&gt;</span>百度一下(语法糖)<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        imageUrl: <span class="string">'https://i0.hdslb.com/bfs/archive/a85460cd16061187d1eb88ef849008ac7e8f1f3a.jpg@336w_190h.webp'</span>,</span></span><br><span class="line"><span class="actionscript">        aHref: <span class="string">'http://baidu.com'</span></span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>v-bind动态绑定class—-对象语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="undefined">      color: red;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--&lt;h1 :class="&#123;key1: value1, key2: value2&#125;"&gt;&lt;/h1&gt;--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;h1 :class="&#123;类名: boolean, 类名: value2&#125;"&gt;&lt;/h1&gt;--&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--class的数据会合并--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"t1"</span> <span class="attr">:class</span>=<span class="string">"&#123;active: isActive, line: isLine&#125;"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btnClick"</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'你好啊'</span>,</span></span><br><span class="line"><span class="actionscript">        isActive: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">        isLine: <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      methods: &#123;</span></span><br><span class="line"><span class="actionscript">        btnClick: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.isActive = !<span class="keyword">this</span>.isActive;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>v-bind动态绑定class—-数组语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--                        当成字符串解析--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"title"</span> <span class="attr">:class</span>=<span class="string">"['aa', 'bbb']"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--             没有单引号为变量--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">:class</span>=<span class="string">"['a', c]"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--通过方法返回--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">:class</span>=<span class="string">"getClass()"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'Hello'</span>,</span></span><br><span class="line"><span class="actionscript">        c: <span class="string">'ccc'</span></span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      methods: &#123;</span></span><br><span class="line"><span class="actionscript">        getClass: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> [<span class="keyword">this</span>.c];</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>v-bind动态绑定style（一）</p><p>我们可以用v-bind:style来绑定一些CSS内联样式</p><p>在写CSS属性名时，比如font-size</p><ol><li>我们可以使用驼峰式（camelCase）fontSize</li><li>或短横线分割（Kebab-case，记得用单引号括起来）’font-size’</li></ol><p>绑定class有两种方式：</p><ol><li><p>对象语法（属性值加了单引号为字符串，否则为变量）</p></li><li><p>数组语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--对象属性--&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;h1 :style="&#123;key属性名: value属性值&#125;"&gt;&lt;/h1&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">:style</span>=<span class="string">""</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--对象语法--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">:style</span>=<span class="string">"&#123;fontSize: '50px'&#125;"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">:style</span>=<span class="string">"&#123;fontSize: finalSize&#125;"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="comment">&lt;!--推荐--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">:style</span>=<span class="string">"getStyle()"</span>&gt;</span>&#123;&#123;message&#125;&#125;123<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'Hello World'</span>,</span></span><br><span class="line"><span class="actionscript">        finalSize: <span class="string">'100px'</span></span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      methods: &#123;</span></span><br><span class="line"><span class="actionscript">        getStyle: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> &#123;fontSize: <span class="keyword">this</span>.finalSize&#125;;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--数组属性--&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">:style</span>=<span class="string">"[baseStyle1, baseStyle2]"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        message: <span class="string">'hzb'</span>,</span></span><br><span class="line"><span class="actionscript">        baseStyle1: &#123;fontSize: <span class="string">'100px'</span>&#125;,  <span class="comment">//对象，键值对</span></span></span><br><span class="line"><span class="actionscript">        baseStyle2: &#123;backgroundColor: <span class="string">'red'</span>&#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="计算属性-computed"><a href="#计算属性-computed" class="headerlink" title="计算属性 computed"></a>计算属性 computed</h2><p>computed: {}  可以对需要的数据进行转化之后显示，或需要将多个数据结合起来显示。(<strong>只执行一次，有缓存</strong>)（<strong>相当于一个属性，用名词命名</strong>）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;firstName + ' ' + lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;getFullName()&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--计算属性，是一个属性，不用()--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        firstName: <span class="string">'Huang'</span>,</span></span><br><span class="line"><span class="actionscript">        lastName: <span class="string">'Zebin'</span></span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      methods: &#123;</span></span><br><span class="line"><span class="actionscript">        getFullName: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="actionscript">      computed: &#123;  <span class="comment">//计算属性</span></span></span><br><span class="line"><span class="actionscript">        fullName: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>总价为&#123;&#123;totalPrice&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="undefined">        books: [</span></span><br><span class="line"><span class="actionscript">          &#123;id: <span class="string">'101'</span>, name: <span class="string">'操作系统'</span>, price: <span class="number">100</span>&#125;,</span></span><br><span class="line"><span class="actionscript">          &#123;id: <span class="string">'102'</span>, name: <span class="string">'Linux操作系统'</span>, price: <span class="number">150</span>&#125;,</span></span><br><span class="line"><span class="actionscript">          &#123;id: <span class="string">'103'</span>, name: <span class="string">'高等数学'</span>, price: <span class="number">200</span>&#125;</span></span><br><span class="line"><span class="undefined">        ]</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      computed: &#123;</span></span><br><span class="line"><span class="actionscript">        totalPrice: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">let</span> total = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.books.length; ++i) &#123;</span></span><br><span class="line"><span class="actionscript">            total += <span class="keyword">this</span>.books[i].price;</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> total;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="完整写计算属性的get-set"><a href="#完整写计算属性的get-set" class="headerlink" title="完整写计算属性的get/set"></a>完整写计算属性的get/set</h2><p>计算属性一般没有set方法，为只读属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        firstName: <span class="string">'Huang'</span>,</span></span><br><span class="line"><span class="actionscript">        lastName: <span class="string">'Zebin'</span></span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      computed: &#123;</span></span><br><span class="line"><span class="undefined">        fullName: &#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">set</span>: <span class="function"><span class="keyword">function</span><span class="params">(newValue)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//在控制台改变fullName变量的值试试</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"=="</span> + newValue + <span class="string">"=="</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">const</span> names = newValue.split(<span class="string">' '</span>);  <span class="comment">//空格隔开，返回数组</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.firstName = names[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.lastName = names[<span class="number">1</span>];</span></span><br><span class="line"><span class="undefined">          &#125;,</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">get</span>: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line"><span class="undefined">          &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="计算属性和methods的对比"><a href="#计算属性和methods的对比" class="headerlink" title="计算属性和methods的对比"></a>计算属性和methods的对比</h2><p>methods方法每次调用都会重新计算；而computed只要结果不变就只执行一次，它有缓存，<strong>推荐computed</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--1.直接拼接，语言过于繁琐--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;firstName&#125;&#125; &#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--2.通过methods方法--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;getFullName()&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--3.通过计算属性,有缓存，只执行一次--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">      data: &#123;</span></span><br><span class="line"><span class="actionscript">        firstName: <span class="string">'Huang'</span>,</span></span><br><span class="line"><span class="actionscript">        lastName: <span class="string">'泽彬'</span></span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      methods: &#123;</span></span><br><span class="line"><span class="actionscript">        getFullName: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;,</span></span><br><span class="line"><span class="undefined">      computed: &#123;</span></span><br><span class="line"><span class="actionscript">        fullName: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">' '</span> + <span class="keyword">this</span>.lastName;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ES6补充"><a href="#ES6补充" class="headerlink" title="ES6补充"></a>ES6补充</h2><p>事实上var是JS的一个设计上的错误，<strong>let关键字</strong>是可以更完美代替var。<strong>let有块级作用域，而var在块外任然可以访问会有问题</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;6-SCJ-》-CWL&quot;&gt;&lt;a href=&quot;#6-SCJ-》-CWL&quot; class=&quot;headerlink&quot; title=&quot;6-SCJ -》 CWL&quot;&gt;&lt;/a&gt;6-SCJ -》 CWL&lt;/h1&gt;&lt;h2 id=&quot;认识Vue&quot;&gt;&lt;a href=&quot;#认识Vue&quot; cla
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://github.com/hzebin/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>使用AspectJ实现AOP</title>
    <link href="http://github.com/hzebin/2020/01/10/%E4%BD%BF%E7%94%A8AspectJ%E5%AE%9E%E7%8E%B0Spring%20AOP/"/>
    <id>http://github.com/hzebin/2020/01/10/使用AspectJ实现Spring AOP/</id>
    <published>2020-01-10T12:32:44.712Z</published>
    <updated>2020-01-10T12:39:12.503Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用AspectJ实现AOP"><a href="#使用AspectJ实现AOP" class="headerlink" title="使用AspectJ实现AOP"></a>使用AspectJ实现AOP</h1><h2 id="Aspect简介"><a href="#Aspect简介" class="headerlink" title="Aspect简介"></a>Aspect简介</h2><p>AspectJ是一个基于Java语言的AOP框架</p><p>Spring2.0以后新增了对AspectJ切点表达式支持</p><p>@AspectJ是AspectJ 1.5新增的功能，通过JDK5注解技术，允许直接在Bean类中定义切面</p><p><strong>新版本Spring框架，建议使用AspectJ方式来开发AOP</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用AspectJ需要引入Spring AOP和AspectJ相关Jar包：</span><br><span class="line">spring-aop</span><br><span class="line">aopalliance</span><br><span class="line">spring-aspects</span><br><span class="line">aspectjweaver</span><br></pre></td></tr></table></figure><br><p>案例使用的代码：</p><p> <a href="https://github.com/hzebin/SpringAOP_AspectJ">https://github.com/hzebin/SpringAOP_AspectJ</a> </p><br><h2 id="使用AspectJ是，xml配置文件格式"><a href="#使用AspectJ是，xml配置文件格式" class="headerlink" title="使用AspectJ是，xml配置文件格式"></a>使用AspectJ是，xml配置文件格式</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--上面为aop的xml配置--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--开启aspectJ的注解开发，自动代理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--下面开始编写代码--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="AspectJ提供的通知类型"><a href="#AspectJ提供的通知类型" class="headerlink" title="@AspectJ提供的通知类型"></a>@AspectJ提供的通知类型</h2><table><thead><tr><th>通知类型</th><th>说明</th></tr></thead><tbody><tr><td>@Before</td><td>前置通知，相当于BeforeAdvice</td></tr><tr><td>@AfterReturning</td><td>后置通知，相当于AfterReturningAdvice</td></tr><tr><td>@Around</td><td>环绕通知，相当于AfterReturningAdvice</td></tr><tr><td>@AfterThrowing</td><td>异常抛出通知，相当于ThrowAdvice</td></tr><tr><td>@After</td><td>最终通知（相当于try-catch的finally），不管是否异常，该通知都会执行</td></tr><tr><td>@DeclareParents</td><td>引介通知，相当于IntroductionInterceptor</td></tr></tbody></table><h1 id="使用的例子-注解方式"><a href="#使用的例子-注解方式" class="headerlink" title="使用的例子(注解方式)"></a>使用的例子(注解方式)</h1><h3 id="step1-创建Maven项目（Webapp）"><a href="#step1-创建Maven项目（Webapp）" class="headerlink" title="step1:创建Maven项目（Webapp）"></a>step1:创建Maven项目（Webapp）</h3><h3 id="step2-引入jar包"><a href="#step2-引入jar包" class="headerlink" title="step2:引入jar包"></a>step2:引入jar包</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hzebin<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>im_spring_aspect<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>im_spring_aspect Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project's website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--测试包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Spring开发包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--Spring AOP需要引入的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--AspectJ需要引入的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>im_spring_aspect<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="step3-1-创建目标类"><a href="#step3-1-创建目标类" class="headerlink" title="step3 - 1:创建目标类"></a>step3 - 1:创建目标类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.hzebin.demo1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProductDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"增加操作"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"修改操作"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">find</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"查询操作"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"删除操作"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="step3-2-创建切面类"><a href="#step3-2-创建切面类" class="headerlink" title="step3 - 2:创建切面类"></a>step3 - 2:创建切面类</h3><p>JoinPoint类可以获得切入点信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.hzebin.demo1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AspectJ定义切面类，注解方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Aspect</span>  <span class="comment">//表明这是切面类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAspectAnno</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//前置通知</span></span><br><span class="line"><span class="comment">//    @Before(value = "execution(* cn.hzebin.demo1.ProductDao.*(..))")</span></span><br><span class="line">    <span class="meta">@Before</span>(value = <span class="string">"execution(* cn.hzebin.demo1.ProductDao.add(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//JoinPoint为获得切入点信息</span></span><br><span class="line">        System.out.println(<span class="string">"前置通知"</span> + joinPoint);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="step4-创建applicationContext-xml配置文件"><a href="#step4-创建applicationContext-xml配置文件" class="headerlink" title="step4:创建applicationContext.xml配置文件"></a>step4:创建applicationContext.xml配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--上面为aop的xml配置--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--开启aspectJ的注解开发，自动代理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--下面开始编写代码--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--cn.hzebin.demo1--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--目标类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"productDao"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.demo1.ProductDao"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--定义切面--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.demo1.MyAspectAnno"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="step5-使用"><a href="#step5-使用" class="headerlink" title="step5:使用"></a>step5:使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.hzebin.demo1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">AspectJ 切面 使用案例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class="line"><span class="meta">@ContextConfiguration</span>(<span class="string">"classpath:applicationContext.xml"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringDemo1</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span>(name = <span class="string">"productDao"</span>)</span><br><span class="line">    <span class="keyword">private</span> ProductDao productDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        productDao.add();</span><br><span class="line">        productDao.delete();</span><br><span class="line">        productDao.find();</span><br><span class="line">        productDao.update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="Before前置通知"><a href="#Before前置通知" class="headerlink" title="@Before前置通知"></a>@Before前置通知</h2><p>可以在方法中传入JoinPoint对象，用来获得切点的信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//前置通知</span></span><br><span class="line"><span class="comment">//    @Before(value = "execution(* cn.hzebin.demo1.ProductDao.*(..))")</span></span><br><span class="line"><span class="meta">@Before</span>(value = <span class="string">"execution(* cn.hzebin.demo1.ProductDao.add(..))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//JoinPoint为获得切入点信息</span></span><br><span class="line">    System.out.println(<span class="string">"==前置通知==,可以获得切入点信息"</span> + joinPoint);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AfterReturning后置通知"><a href="#AfterReturning后置通知" class="headerlink" title="@AfterReturning后置通知"></a>@AfterReturning后置通知</h2><p>通过returning属性，可以定义方法返回值，作为参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//后置通知</span></span><br><span class="line"><span class="meta">@AfterReturning</span>(value = <span class="string">"execution(* cn.hzebin.demo1.ProductDao.update(..))"</span>, returning = <span class="string">"result"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">(Object result)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"==后置通知==，可以获得切入点的返回值  -&gt;  "</span> + result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Around环绕通知"><a href="#Around环绕通知" class="headerlink" title="@Around环绕通知"></a>@Around环绕通知</h2><p>around方法的返回值就是目标代理方法执行返回值</p><p>参数为ProceedingJoinPoint，可以拦截目标方法的执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//环绕通知</span></span><br><span class="line"><span class="meta">@Around</span>(value = <span class="string">"execution(* cn.hzebin.demo1.ProductDao.delete(..))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">demo3</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"环绕前的通知"</span>);</span><br><span class="line">    Object obj = joinPoint.proceed();  <span class="comment">//执行目标方法，会有目标方法的返回值，可以不调用，则为拦截</span></span><br><span class="line">    System.out.println(<span class="string">"环绕后的通知"</span>);</span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AfterThrowing异常通知"><a href="#AfterThrowing异常通知" class="headerlink" title="@AfterThrowing异常通知"></a>@AfterThrowing异常通知</h2><p>通过设置throwing属性，可以设置发生异常对象参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//异常通知</span></span><br><span class="line"><span class="meta">@AfterThrowing</span>(value = <span class="string">"execution(* cn.hzebin.demo1.ProductDao.find(..))"</span>, throwing = <span class="string">"e"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo4</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"异常通知，"</span> + e.getMessage());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="After最终通知"><a href="#After最终通知" class="headerlink" title="@After最终通知"></a>@After最终通知</h2><p>无论是否发生异常，最终通知总是会被执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最终通知</span></span><br><span class="line"><span class="meta">@After</span>(value = <span class="string">"execution(* cn.hzebin.demo1.ProductDao.findOne(..))"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"最终通知"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h2 id="Pointcut可以给切点命名"><a href="#Pointcut可以给切点命名" class="headerlink" title="@Pointcut可以给切点命名"></a>@Pointcut可以给切点命名</h2><ul><li>在每个通知内定义切点，会造成工作量大，不易维护，对于重复的切点，可以使用@Pointcut进行定义</li><li>切点方法：private void 切点名() {}</li><li>当通知多个切点时，可以使用||进行连接</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.hzebin.demo2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给切点命名，维护代码更加方便</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AspectAnno</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Before</span>(value = <span class="string">"myPointCut1() || myPointCut2()"</span>)  <span class="comment">//多个切点可以使用||进行连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"前置通知"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterReturning</span>(value = <span class="string">"myPointCut2()"</span>, returning = <span class="string">"result"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">demo2</span><span class="params">(Object result)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"后置通知"</span> + result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//给切点命名</span></span><br><span class="line">    <span class="meta">@Pointcut</span>(value = <span class="string">"execution(* cn.hzebin.demo2.ProductDao.add(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">myPointCut1</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(value = <span class="string">"execution(* cn.hzebin.demo2.ProductDao.delete(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">myPointCut2</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(value = <span class="string">"execution(* cn.hzebin.demo2.ProductDao.update(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">myPointCut3</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(value = <span class="string">"execution(* cn.hzebin.demo2.ProductDao.findOne(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">myPointCut4</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut</span>(value = <span class="string">"execution(* cn.hzebin.demo2.ProductDao.findAll(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">myPointCut5</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><h1 id="Aspect的XML配置"><a href="#Aspect的XML配置" class="headerlink" title="Aspect的XML配置"></a>Aspect的XML配置</h1><p><strong>== 【unfinish】 ==</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;使用AspectJ实现AOP&quot;&gt;&lt;a href=&quot;#使用AspectJ实现AOP&quot; class=&quot;headerlink&quot; title=&quot;使用AspectJ实现AOP&quot;&gt;&lt;/a&gt;使用AspectJ实现AOP&lt;/h1&gt;&lt;h2 id=&quot;Aspect简介&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="Spring" scheme="http://github.com/hzebin/tags/Spring/"/>
    
      <category term="AOP" scheme="http://github.com/hzebin/tags/AOP/"/>
    
      <category term="Aspect" scheme="http://github.com/hzebin/tags/Aspect/"/>
    
  </entry>
  
  <entry>
    <title>Spring IOC</title>
    <link href="http://github.com/hzebin/2020/01/08/Spring%20IOC/"/>
    <id>http://github.com/hzebin/2020/01/08/Spring IOC/</id>
    <published>2020-01-08T12:51:26.595Z</published>
    <updated>2020-01-08T13:25:12.593Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-IOC"><a href="#Spring-IOC" class="headerlink" title="Spring IOC"></a>Spring IOC</h1><p>Spring IOC 练习的代码地址：</p><p> <a href="https://github.com/hzebin/SpringIOC">https://github.com/hzebin/SpringIOC</a> </p><p>=====================================</p><p>Spring IOC的底层原理：<strong>工厂模式 + 反射 + 配置文件</strong> 【为了减少程序之间的耦合性】</p><p><strong>IOC (Inverse of Control)控制反转</strong>，将原本在程序中手动创建的对象（例如UserService）的控制权，交由Spring框架管理。</p><p><strong>DI(Dependency Injection)依赖注入</strong>，就是在Spring创建这个对象的过程中，将这个对象所依赖的<strong>属性</strong>注入进去。</p><br><p>使用Spring IOC需要导入的jar包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 四个核心包</span></span><br><span class="line">spring-beans</span><br><span class="line">spring-context</span><br><span class="line">spring-core</span><br><span class="line">spring-expression</span><br><span class="line"><span class="comment">// 还要引入</span></span><br><span class="line">commons-logging</span><br><span class="line">log4j</span><br><span class="line">junit</span><br></pre></td></tr></table></figure><br><h2 id="Spring的Bean管理-XML方式"><a href="#Spring的Bean管理-XML方式" class="headerlink" title="Spring的Bean管理(XML方式)"></a>Spring的Bean管理(XML方式)</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--applicationContext.xml配置文件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><br><p>Bean的实例化有三种方式：</p><ol><li>采用无参数的构造方法方式</li><li>静态工厂的实例化方式</li><li>实例工厂实例化</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Bean实例化的三种方式==================================================--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--1.采用无参数的构造方法的方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"bean1"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo2.Bean1"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--2.静态工厂的方式,因为是静态方法，所以可以用类.方法直接使用--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"bean2"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo2.Bean2Factory"</span> <span class="attr">factory-method</span>=<span class="string">"createBean2"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--3.实例工厂的方式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"bean3Factory"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo2.Bean3Factory"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"bean3"</span> <span class="attr">factory-bean</span>=<span class="string">"bean3Factory"</span> <span class="attr">factory-method</span>=<span class="string">"createBean3"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="Bean配置里的属性："><a href="#Bean配置里的属性：" class="headerlink" title="Bean配置里的属性："></a>Bean配置里的属性：</h3><p><strong>id和name</strong>:</p><p>id和name效果是一样的。一般情况下装配一个Bean时，通过指定一个id属性作为Bean的名称。</p><p>id属性在IOC容器中必须是唯一的。</p><p>如果Bean的名称中含有特殊字符（例如name=”/studentService”），就要改为使用name属性（id不能含有特殊字符）。</p><br><p><strong>class</strong>:</p><p>class用于设置一个类的完全路径名称，主要的作用是给IOC容器生成类的实例。</p><br><p><strong>Bean的作用域属性scope</strong>:</p><table><thead><tr><th>类别</th><th>说明</th></tr></thead><tbody><tr><td>singleton（默认情况下是<strong>单例</strong>）</td><td>在SpringIOC容器中仅存在一个Bean实例，Bean以单实例的方式存在</td></tr><tr><td>prototype（<strong>多例</strong>）</td><td>每次调用getBean()时都会返回一个新的实例</td></tr><tr><td>request</td><td>每次HTTP请求都会创建一个新的Bean，该作用域只适合于WebApplicationContext环境</td></tr><tr><td>session</td><td>同一个HTTP Session共享一个Bean，不同的HTTP Session使用不同的Bean。该作用域只适合于WebApplicationContext环境</td></tr></tbody></table><br><p><strong>init-method和destory-method属性</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/01/08/U3ROa5fnCNIZurv.png" alt="20190108A.png" title>                </div>                <div class="image-caption">20190108A.png</div>            </figure><p>Tip:如果是多例的话，程序不知道销毁谁</p><br><h3 id="Spring的属性注入–构造方法注入"><a href="#Spring的属性注入–构造方法注入" class="headerlink" title="Spring的属性注入–构造方法注入"></a>Spring的属性注入–构造方法注入</h3><ul><li><p>通过构造方法注入Bean的属性值或依赖对象，它保证了Bean实例在实例化之后就可以使用了</p></li><li><p>构造器注入在<constructor-arg>元素里申明的属性</constructor-arg></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--构造方法注入--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"user"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo4.User"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"黄泽彬"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"22"</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="Spring的属性注入–set方法注入"><a href="#Spring的属性注入–set方法注入" class="headerlink" title="Spring的属性注入–set方法注入"></a>Spring的属性注入–set方法注入</h3><ul><li>使用set方法注入，在Spring配置文件中，通过<property>设置注入的属性</property></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"person"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo4.Person"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"熊君"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"22"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cat"</span> <span class="attr">ref</span>=<span class="string">"cat"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span>  <span class="comment">&lt;!--注入对象  ref为引用下面的bean的id--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cat"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo4.Cat"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="Spring的属性注入–p名称空间"><a href="#Spring的属性注入–p名称空间" class="headerlink" title="Spring的属性注入–p名称空间"></a>Spring的属性注入–p名称空间</h3><ul><li>为了简化XML文件配置，Spring2.5开始引入一个新的p名称空间</li><li>p:&lt;属性名&gt; = “xxx” 引入常量值</li><li>p:&lt;属性名&gt;-ref = “xxx” 引入其他Bean对象</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">需要在applicationContext.xml头部添加：</span><br><span class="line">xmlns:p="http://www.springframework.org/schema/p"</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cat"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo4.Cat"</span> <span class="attr">p:name</span>=<span class="string">"小猫"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"person"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo4.Person"</span> <span class="attr">p:name</span>=<span class="string">"胡文瀚"</span> <span class="attr">p:age</span>=<span class="string">"23"</span> <span class="attr">p:cat-ref</span>=<span class="string">"cat"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="Spring的属性注入–SpEL注入-Spring-expresssion-language"><a href="#Spring的属性注入–SpEL注入-Spring-expresssion-language" class="headerlink" title="Spring的属性注入–SpEL注入(Spring expresssion language)"></a>Spring的属性注入–SpEL注入(Spring expresssion language)</h3><ul><li><p>Spring表达式语言，对依赖注入进行简化</p></li><li><p>语法：  #{表达式}</p></li><li><p>&lt;bean id=”” value=”#{表达式}”</p><ul><li><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#&#123;'hello'&#125;  使用字符串</span><br><span class="line">#&#123;beanId&#125;  使用另一个bean</span><br><span class="line">#&#123;beanId.content.toUpperCase()&#125;  使用指定名属性，并使用方法</span><br><span class="line">#&#123;T(java.lang.Math).PI&#125;  使用静态字段或方法</span><br></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Bean的SpEL注入方式属性注入--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"category"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo4.Category"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"#&#123;'服装'&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"productInfo"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo4.ProductInfo"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"product"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo4.Product"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"#&#123;'裤子'&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;property name="price" value="#&#123;299&#125;"&gt;&lt;/property&gt;  下面采用调用方法的方式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"price"</span> <span class="attr">value</span>=<span class="string">"#&#123;productInfo.calculatePrice()&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"category"</span> <span class="attr">value</span>=<span class="string">"#&#123;category&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h3 id="Spring的复杂类型的属性注入"><a href="#Spring的复杂类型的属性注入" class="headerlink" title="Spring的复杂类型的属性注入"></a>Spring的复杂类型的属性注入</h3><p>类型包括：数组、List集合、Set集合、Map集合、Properties</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--复杂（集合）类型的属性注入--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"collectionBean"</span> <span class="attr">class</span>=<span class="string">"cn.hzebin.ioc.demo5.CollectionBean"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--数组类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"arrs"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>bbb<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>ccc<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--list类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>111<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>222<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>333<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--set类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"set"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>ddd<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>eee<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>fff<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Map集合的属性注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"aaa"</span> <span class="attr">value</span>=<span class="string">"111"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"bbb"</span> <span class="attr">value</span>=<span class="string">"222"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"ccc"</span> <span class="attr">value</span>=<span class="string">"333"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--properties属性注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"username"</span>&gt;</span>root<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"password"</span>&gt;</span>root1234<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><br><h2 id="使用注解定义Bean"><a href="#使用注解定义Bean" class="headerlink" title="使用注解定义Bean"></a>使用注解定义Bean</h2><p>使用Spring注解的使用需要引入的jar包：spring-aop</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--applicationContext.xml配置文件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 模板 xsd-configuration.html 40.2.8 the context schema--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--开启注解扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.hzebin"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><br><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Component</td><td>描述Spring框架中的Bean（相当于id）</td></tr><tr><td>上面这个注解与下面的注解等价，推荐使用下面的注解</td><td></td></tr><tr><td>@Repository</td><td>用于对Dao实现类进行标注</td></tr><tr><td>@Service</td><td>用于对Service实现类进行标注</td></tr><tr><td>@Controller</td><td>用于对Controller实现类进行标注</td></tr></tbody></table><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Value(“”)</td><td>给属性添加值的注解</td></tr></tbody></table><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Autowired</td><td>属性注入，默认按类型注入（id名不相同也行），也可以按id名称注入</td></tr></tbody></table><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@Autowired                                                                                                                                                                   @Qualifier(“userDao”)</td><td>注入的类型和id名称都要相同</td></tr><tr><td>上面的注解与下面的注解等价</td><td></td></tr><tr><td>@Resource(name = “”)</td><td></td></tr></tbody></table><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td>@PostConstruct</td><td>初始化，当Bean被载入导容器的时候调用该方法，与init-method作用相同</td></tr><tr><td>@PreDestroy</td><td>销毁，当Bean从容器中删除的时候调用该方法（单例才有效，与destory-method作用相同）</td></tr><tr><td>@Scope(“”)</td><td>Bean的作用域</td></tr></tbody></table><br><h2 id="XML配置和注解各有优缺点，可以将XML配置与注解配置混合使用"><a href="#XML配置和注解各有优缺点，可以将XML配置与注解配置混合使用" class="headerlink" title="XML配置和注解各有优缺点，可以将XML配置与注解配置混合使用"></a>XML配置和注解各有优缺点，可以将XML配置与注解配置混合使用</h2><p>XML配置的优点：结构清晰、易于理解</p><p>注解配置的优点：开发便捷、属性注入方便</p><br><h3 id="XML与注解整合开发"><a href="#XML与注解整合开发" class="headerlink" title="XML与注解整合开发"></a>XML与注解整合开发</h3><p>【使用XML来管理类，使用注解来进行属性注入】</p><p>使用步骤：</p><ol><li>引入context命名空间</li><li>在配置文件中添加context:annotattion-config标签 【意思：开启属性注入注解，禁止类注解】</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Spring-IOC&quot;&gt;&lt;a href=&quot;#Spring-IOC&quot; class=&quot;headerlink&quot; title=&quot;Spring IOC&quot;&gt;&lt;/a&gt;Spring IOC&lt;/h1&gt;&lt;p&gt;Spring IOC 练习的代码地址：&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;h
      
    
    </summary>
    
    
      <category term="Spring" scheme="http://github.com/hzebin/tags/Spring/"/>
    
      <category term="IOC" scheme="http://github.com/hzebin/tags/IOC/"/>
    
  </entry>
  
  <entry>
    <title>JDBC连接数据库</title>
    <link href="http://github.com/hzebin/2019/12/30/JDBC%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://github.com/hzebin/2019/12/30/JDBC连接数据库/</id>
    <published>2019-12-30T15:37:22.270Z</published>
    <updated>2019-12-30T15:39:29.994Z</updated>
    
    <content type="html"><![CDATA[<p> <strong>JDBC（Java Data Base Connectivity )，Java数据库连接</strong></p><p>使用方式：需要添加驱动包，将驱动包配置到lib，并将lib添加到Build Path</p><p><img src="https://i.loli.net/2019/12/30/cwIC49pnb12ZFi7.png" alt="20191230A.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">DriverManager 驱动管理类</span><br><span class="line">    作用一：<span class="number">1</span>. 注册驱动  <span class="number">2</span>. 获得数据库连接</span><br><span class="line"></span><br><span class="line">Connection 连接对象</span><br><span class="line">    作用：<span class="number">1</span>. 创建执行SQL语句的对象</span><br><span class="line">    <span class="function">Statement <span class="title">createStatement</span><span class="params">()</span>  执行SQL语句，有SQL注入的危险</span></span><br><span class="line"><span class="function">    PreparedStatement <span class="title">prepareStatement</span><span class="params">(String sql)</span>  预编译SQL语句，解决SQL注入问题</span></span><br><span class="line"><span class="function">        CallableStatement <span class="title">prepareCall</span><span class="params">(String sql)</span>  执行SQL中的存储过程</span></span><br><span class="line"><span class="function">     2. 进行事务管理</span></span><br><span class="line"><span class="function">    <span class="title">setAutoCommit</span><span class="params">(<span class="keyword">boolean</span> autoCommit)</span>  设置事务是否自动提交</span></span><br><span class="line"><span class="function">    <span class="title">commit</span><span class="params">()</span>  事务提交</span></span><br><span class="line"><span class="function">    <span class="title">rollback</span><span class="params">()</span>  事务回滚</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">Statement 执行SQL语句</span></span><br><span class="line"><span class="function">    作用： 1. 执行SQL语句</span></span><br><span class="line"><span class="function">     <span class="keyword">boolean</span> <span class="title">execute</span><span class="params">(String sql)</span>  执行SQL,执行的是select则返回<span class="keyword">true</span>，否则返回<span class="keyword">false</span></span></span><br><span class="line"><span class="function">     ResultSet <span class="title">executeQuery</span><span class="params">(String sql)</span>  执行SQL中的select语句</span></span><br><span class="line"><span class="function">     <span class="keyword">int</span> <span class="title">executeUpdate</span><span class="params">(String sql)</span>  执行SQL中的insert/update/delete</span></span><br><span class="line"><span class="function">      2. 执行批处理操作</span></span><br><span class="line"><span class="function">     <span class="title">addBatch</span><span class="params">(String sql)</span>  添加到批处理</span></span><br><span class="line"><span class="function">     <span class="title">executeBatch</span><span class="params">()</span>  执行批处理</span></span><br><span class="line"><span class="function">     <span class="title">clearBatch</span><span class="params">()</span>  清空批处理</span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">ResultSet 结果集</span></span><br><span class="line"><span class="function">    .<span class="title">next</span><span class="params">()</span>  .<span class="title">getXxx</span><span class="params">()</span>  .<span class="title">getObject</span><span class="params">(...)</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">JDBC的资源释放  .<span class="title">close</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    Connection对象要及时、正确关闭，尽量晚创建、尽量早释放</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SQL注入漏洞</span><br><span class="line">    <span class="number">1</span>. 在连接sql语句中插入or关键字</span><br><span class="line">    <span class="number">2</span>. 在连接sql语句中插入注释字符--</span><br><span class="line">解决办法：使用PreparedStatement，该变量出用?代替，变量的赋值下表从<span class="number">1</span>开始</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据库连接池：</span><br><span class="line">    连接池是创建和管理一个连接的缓冲池技术，这些连接准备好了被任何需要它们的线程使用。</span><br><span class="line">    </span><br><span class="line">    C3P0连接池，默认查找src路径下C3P0的配置文件</span><br></pre></td></tr></table></figure><p>存放在github中的JDBC示例代码：</p><p> <a href="https://github.com/hzebin/JavaStudy_JDBC">https://github.com/hzebin/JavaStudy_JDBC</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; &lt;strong&gt;JDBC（Java Data Base Connectivity )，Java数据库连接&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用方式：需要添加驱动包，将驱动包配置到lib，并将lib添加到Build Path&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https:/
      
    
    </summary>
    
    
      <category term="Java" scheme="http://github.com/hzebin/tags/Java/"/>
    
      <category term="JDBC" scheme="http://github.com/hzebin/tags/JDBC/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫--Scrapy框架</title>
    <link href="http://github.com/hzebin/2019/12/03/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB--Scrap%E6%A1%86%E6%9E%B6/"/>
    <id>http://github.com/hzebin/2019/12/03/Python网络爬虫--Scrap框架/</id>
    <published>2019-12-03T09:00:00.000Z</published>
    <updated>2019-12-03T09:06:33.451Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Scrapy 专业爬虫框架</strong></p><br><p><img src="https://i.loli.net/2019/12/03/p3tulTLKvJHCbgG.png" alt="20191203A01.png"></p><p>Scarpy框架：5+2结构</p><p><strong>requests与Scrapy的比较</strong></p><p>相同点：</p><ol><li>两者都可以进行页面的请求和爬取，Python爬虫的两个重要技术路线</li><li>两者可用性都好，文档丰富，入门简单</li><li>两者都没有处理js、提交表单、对应验证码等功能（可扩展）</li></ol><p>不同点：</p><table><thead><tr><th>requests</th><th>Scrapy</th></tr></thead><tbody><tr><td>页面级爬虫</td><td>网站级爬虫</td></tr><tr><td>功能库</td><td>框架</td></tr><tr><td>并发性考虑不足，性能较差</td><td>并发性好，性能较高【性能过高也不好，会骚扰服务器性能】</td></tr><tr><td>重点在于页面下载</td><td>重点在于爬虫结构</td></tr><tr><td>定制灵活</td><td>一般定制灵活，深度定制困难</td></tr><tr><td>上手十分简单</td><td>入门较难</td></tr></tbody></table><p><strong>如何选择</strong></p><p>非常小的需求，使用requests库</p><p>不太小的需求，Scrapy框架</p><p>定制程度很高的需求（不考虑规模）：自搭框架，requests &gt; Scrapy</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Scrapy命令行格式</span><br><span class="line">scrapy &lt;command&gt; [options] [args]  <span class="comment"># command为Scrapy命令</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>Scrapy常用命令</th><th>说明</th><th>格式</th></tr></thead><tbody><tr><td>startproject</td><td>创建一个新工程</td><td>scrapy startproject <name> [dir]</name></td></tr><tr><td>genspider</td><td>创建一个爬虫</td><td>scrapy genspider [options] <name> <domain></domain></name></td></tr><tr><td>settings</td><td>获得爬虫配置信息</td><td>scrapy settings [options]</td></tr><tr><td>crawl</td><td>运行一个爬虫</td><td>scrapy crawl <spider></spider></td></tr><tr><td>list</td><td>列出工程中所有爬虫</td><td>scrapy list</td></tr><tr><td>shell</td><td>启动URL调式命令行</td><td>scrapy shell [url]</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Scrapy 专业爬虫框架&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;





&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/12/03/p3tulTLKvJHCbgG.png&quot; alt=&quot;20191203A01.png&quot;&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="爬虫" scheme="http://github.com/hzebin/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Scrapy" scheme="http://github.com/hzebin/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫--正则表达式</title>
    <link href="http://github.com/hzebin/2019/12/03/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <id>http://github.com/hzebin/2019/12/03/Python网络爬虫（五）/</id>
    <published>2019-12-02T23:00:00.000Z</published>
    <updated>2019-12-03T09:05:56.082Z</updated>
    
    <content type="html"><![CDATA[<p>正则表达式RE</p><br><p>正则表达式常用操作符</p><table><thead><tr><th>操作符</th><th>说明</th><th>实例</th></tr></thead><tbody><tr><td>.</td><td>表示任何单个字符</td><td></td></tr><tr><td>[]</td><td>字符集，对单个字符给出取值范围</td><td>[abc]表示a、b、c，[a-z]表示a到z单个字符</td></tr><tr><td>[^ ]</td><td>非字符集，对单个字符给出排除范围</td><td>[^abc]表示非a或b或c的单个字符</td></tr><tr><td>*</td><td>前一个字符0次到无限次扩展</td><td>abc* 表示 ab、abc、abcc、abccc等</td></tr><tr><td>+</td><td>前一个字符1到无限次扩展</td><td>abc+ 表示 abc、abcc、abccc等</td></tr><tr><td>？</td><td>前一个字符0或1次扩展</td><td>abc? 表示 ab、abc</td></tr><tr><td>|</td><td>左右表达式任选一个</td><td></td></tr><tr><td>{m}</td><td>扩展前一个字符m次</td><td>ab{2}c表示abbc</td></tr><tr><td>{m, n}</td><td>扩展前一个字符m至n次（含n）</td><td>ab{1,2}c表示abc、abbc</td></tr><tr><td>^</td><td>匹配字符串开头</td><td>^abc表示abc且在一个字符串的开头</td></tr><tr><td>$</td><td>匹配字符串结尾</td><td>abc$表示abc且在一个字符串的结尾</td></tr><tr><td>()</td><td>分组标记，内部只能使用|操作符</td><td></td></tr><tr><td>\d</td><td>数字，等价于[0-9]</td><td></td></tr><tr><td>\w</td><td>单词字符，等价于[A-Za-z0-9_]</td><td></td></tr></tbody></table><br><p>import re</p><p>Re库是Python的标准库，主要用于字符串匹配</p><br><p>正则表达式的表示类型</p><ol><li><p>raw string类型（原生字符串类型），re库采用此类型，表示为 r’text’ 。raw string是不包含对转义符再次转义的字符串【<strong>原生字符串中间的\不被解释为转义字符</strong>】。例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r&apos;[1‐9]\d&#123;5&#125;&apos;</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>也可以采用string类型表示正则表达式，但更繁琐。例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;[1‐9]\\d&#123;5&#125;&apos;</span><br></pre></td></tr></table></figure></li></ol><p>建议使用raw string类型</p><br><table><thead><tr><th>Re库主要功能函数</th><th>说明</th></tr></thead><tbody><tr><td>re.search()</td><td>在一个字符串中搜索匹配正则表达式的第一个位置，返回match对象</td></tr><tr><td>re.match()</td><td>从一个字符串的开始位置起匹配正则表达式，返回match对象</td></tr><tr><td>re.findall()</td><td>搜索字符串，以列表类型返回全部能匹配的子串</td></tr><tr><td>re.split()</td><td>将一个字符串按照正则表达式匹配结果进行分割，返回列表类型</td></tr><tr><td>re.finditer()</td><td>搜索字符串，返回一个结果的迭代类型，每个迭代元素是match对象</td></tr><tr><td>re.sub()</td><td>在一个字符串中替换所有匹配正则表达式的子串，返回替换后的字符串</td></tr></tbody></table><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">re.search(pattern, string, flags=<span class="number">0</span>)</span><br><span class="line">    pattern: 正则表达式的字符串或原生字符串表示</span><br><span class="line">    string: 待匹配字符串</span><br><span class="line">    flags: 正则表达式使用时的控制标记</span><br></pre></td></tr></table></figure><table><thead><tr><th>flags常用标记</th><th>说明</th></tr></thead><tbody><tr><td>re.I    re.IGNORECASE</td><td>忽略正则表达式的大小写，[A‐Z]能够匹配小写字符</td></tr><tr><td>re.M    re.MULTILINE</td><td>正则表达式中的^操作符能够将给定字符串的每行当作匹配开始</td></tr><tr><td>re.S    re.DOTALL</td><td>正则表达式中的.操作符能够匹配所有字符，默认匹配除换行外的所有字符</td></tr></tbody></table><p><strong>用if判断匹配结果是否为空，否则会报错</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># re.search(pattern, string, flags=0)</span></span><br><span class="line">match = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT 100081'</span>)</span><br><span class="line"><span class="keyword">if</span> match:</span><br><span class="line">    print(match.group(<span class="number">0</span>))  <span class="comment">#输出100081</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># re.match(pattern, string, flags = 0)</span></span><br><span class="line">match = re.match(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT 100081'</span>)</span><br><span class="line"><span class="keyword">if</span> match:</span><br><span class="line">    print(<span class="string">"--"</span>)</span><br><span class="line">    print(match.group(<span class="number">0</span>))  <span class="comment"># 没有进到if</span></span><br><span class="line">    print(<span class="string">"--"</span>)</span><br><span class="line">match = re.match(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'100081 BIT'</span>)</span><br><span class="line"><span class="keyword">if</span> match:</span><br><span class="line">    print(match.group(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># re.findall(pattern, string, flags = 0)</span></span><br><span class="line">ls = re.findall(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT100081 TSU100084'</span>)</span><br><span class="line">print(ls)</span><br><span class="line"></span><br><span class="line"><span class="comment"># re.split(pattern, string, maxsplit=0, flag=0)</span></span><br><span class="line"><span class="comment"># maxsplit: 最大分割数，剩余部分作为最后一个元素输出</span></span><br><span class="line">ls = re.split(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT100081 TSU100084'</span>)</span><br><span class="line">print(ls)</span><br><span class="line">ls = re.split(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT100081 TSU100084'</span>, maxsplit = <span class="number">1</span>)</span><br><span class="line">print(ls)</span><br><span class="line"></span><br><span class="line"><span class="comment"># re.finditer(pattern, string, flags=0)</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> re.finditer(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT100081 TSU100084'</span>):</span><br><span class="line">    <span class="keyword">if</span> m:</span><br><span class="line">        print(m.group(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># re.sub(pattern, repl, string, count=0, flags=0)</span></span><br><span class="line"><span class="comment"># repl: 替换匹配字符串的字符串</span></span><br><span class="line"><span class="comment"># string: 带匹配字符串</span></span><br><span class="line"><span class="comment"># count: 匹配的最大替换次数</span></span><br><span class="line">str = re.sub(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">':zipcode'</span>, <span class="string">'BIT100081 TSU100084'</span>)</span><br><span class="line">print(str)</span><br></pre></td></tr></table></figure><p>Re库的两种使用方式：</p><ol><li><p>函数式用法：一次性操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rst = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT 100084'</span>)</span><br></pre></td></tr></table></figure></li><li><p>面向对象用法：编译后可以多次操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">regex = re.compile(<span class="string">r'[1-9]\d&#123;5&#125;'</span>) <span class="comment">#将正则表达式的字符串形式编译成正则表达式对象</span></span><br><span class="line">rst = regex.search(<span class="string">'BIT 100081'</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">等价写法：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">regex.search()</span></span><br><span class="line"><span class="string">regex.match()</span></span><br><span class="line"><span class="string">regex.findall()</span></span><br><span class="line"><span class="string">regex.split()</span></span><br><span class="line"><span class="string">regex.finditer()</span></span><br><span class="line"><span class="string">regex.sub()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure></li></ol><br><p><strong>Match对象</strong>是一次匹配的结果，包含匹配的很多信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">match = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT 100081'</span>)</span><br><span class="line"><span class="keyword">if</span> match:</span><br><span class="line">    print(match.group(<span class="number">0</span>))</span><br><span class="line">print(type(match))</span><br></pre></td></tr></table></figure><table><thead><tr><th>Match对象的属性</th><th>说明</th></tr></thead><tbody><tr><td>.string</td><td>待匹配的文本</td></tr><tr><td>.re</td><td>匹配时使用的patter对象（正则表达式）</td></tr><tr><td>.pos</td><td>正则表达式搜索文本的开始位置</td></tr><tr><td>.endpos</td><td>正则表达式搜索文本的结束位置</td></tr></tbody></table><table><thead><tr><th>Match对象的方法</th><th>说明</th></tr></thead><tbody><tr><td>.group(0)</td><td>获得匹配后的字符串</td></tr><tr><td>.start()</td><td>匹配字符串在原始字符串的开始位置</td></tr><tr><td>.end()</td><td>匹配字符串在原始字符串的结束位置</td></tr><tr><td>.span()</td><td>返回(.start(), .end())</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">match = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT 100081'</span>)</span><br><span class="line"><span class="keyword">if</span> match:</span><br><span class="line">    print(match.group(<span class="number">0</span>))</span><br><span class="line">print(type(match))</span><br><span class="line"></span><br><span class="line">m = re.search(<span class="string">r'[1-9]\d&#123;5&#125;'</span>, <span class="string">'BIT100081 TSU100084'</span>)</span><br><span class="line">print(m.string)</span><br><span class="line">print(m.re)</span><br><span class="line">print(m.pos)</span><br><span class="line">print(m.endpos)</span><br><span class="line">print(m.group(<span class="number">0</span>))</span><br><span class="line">print(m.start())</span><br><span class="line">print(m.end())</span><br><span class="line">print(m.span())</span><br></pre></td></tr></table></figure><br><p>Re库<strong>默认采用贪婪匹配</strong>，即输出匹配最长的子串</p><table><thead><tr><th>最小匹配字符串的操作符</th></tr></thead><tbody><tr><td>*?</td></tr><tr><td>+?</td></tr><tr><td>??</td></tr><tr><td>{m, n}?</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;正则表达式RE&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;正则表达式常用操作符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作符&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;实例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;表
      
    
    </summary>
    
    
      <category term="爬虫" scheme="http://github.com/hzebin/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="re" scheme="http://github.com/hzebin/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫--案例--中国大学排名</title>
    <link href="http://github.com/hzebin/2019/12/02/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB--%E6%A1%88%E4%BE%8B--%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6%E6%8E%92%E5%90%8D/"/>
    <id>http://github.com/hzebin/2019/12/02/Python网络爬虫--案例--中国大学排名/</id>
    <published>2019-12-02T08:00:00.000Z</published>
    <updated>2019-12-02T08:49:43.928Z</updated>
    
    <content type="html"><![CDATA[<p>python爬虫案例：中国大学排名定向爬虫</p><br><p>功能描述：</p><p>输入：大学排名URL链接</p><p>输出：大学牌型信息的屏幕输出（排名， 大学名称， 总分）</p><p>使用的库：requests，bs4</p><p>定向爬虫：仅对输入URL进行爬取，不扩展爬取</p><p><strong>【先判断网页中的数据是否动态生成，能否在源代码中获取数据信息】</strong></p><p><strong>【查看Robots协议】</strong></p><p>设计步骤：</p><ol><li>从网络上获取大学排名网页内容</li><li>提取网页内容中的信息到合适的数据结构中</li><li>利用数据结构展示并输出结果</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup  <span class="comment">#引入的是BuautifulSoup类</span></span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取页面的HTML代码</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout = <span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将数据放在列表中</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fillUnivList</span><span class="params">(ulist, html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">for</span> tr <span class="keyword">in</span> soup.find(<span class="string">'tbody'</span>).children:</span><br><span class="line">        <span class="comment">#  判断节点，排除字符串节点</span></span><br><span class="line">        <span class="keyword">if</span> isinstance(tr, bs4.element.Tag):</span><br><span class="line">            tds = tr(<span class="string">'td'</span>) <span class="comment">#find_all缩写</span></span><br><span class="line">            ulist.append([tds[<span class="number">0</span>].string, tds[<span class="number">1</span>].string, tds[<span class="number">3</span>].string])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出排名</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printUnivList</span><span class="params">(ulist, num)</span>:</span></span><br><span class="line">    <span class="comment"># print("&#123;:^10&#125;\t&#123;:^10&#125;\t&#123;:^10&#125;".format("排名", "学校", "总分"))</span></span><br><span class="line">    <span class="comment"># for i in range(num):</span></span><br><span class="line">    <span class="comment">#     temp = ulist[i]</span></span><br><span class="line">    <span class="comment">#     print("&#123;:^10&#125;\t&#123;:^10&#125;\t&#123;:^10&#125;".format(temp[0], temp[1], temp[2]))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 当中文字符宽度不够时，采用西文字符填充，中西文字符占用宽度不同</span></span><br><span class="line">    <span class="comment"># 解决办法：空格用中文字符填充</span></span><br><span class="line">    tmpl = <span class="string">"&#123;0:&#123;3&#125;^10&#125;\t&#123;1:&#123;3&#125;^10&#125;\t&#123;2:&#123;3&#125;^10&#125;"</span></span><br><span class="line">    print(tmpl.format(<span class="string">"排名"</span>, <span class="string">"学校"</span>, <span class="string">"总分"</span>, chr(<span class="number">12288</span>)))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        temp = ulist[i]</span><br><span class="line">        print(tmpl.format(temp[<span class="number">0</span>], temp[<span class="number">1</span>], temp[<span class="number">2</span>], chr(<span class="number">12288</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    uinfo = []</span><br><span class="line">    url = <span class="string">"http://zuihaodaxue.cn/zuihaodaxuepaiming2019.html"</span></span><br><span class="line">    html = getHTMLText(url)</span><br><span class="line">    fillUnivList(uinfo, html)  <span class="comment">#注意列表uinfo和ulist</span></span><br><span class="line">    <span class="comment"># print(uinfo)</span></span><br><span class="line">    printUnivList(uinfo, <span class="number">20</span>)  <span class="comment">#输出前20</span></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;python爬虫案例：中国大学排名定向爬虫&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;功能描述：&lt;/p&gt;
&lt;p&gt;输入：大学排名URL链接&lt;/p&gt;
&lt;p&gt;输出：大学牌型信息的屏幕输出（排名， 大学名称， 总分）&lt;/p&gt;
&lt;p&gt;使用的库：requests，bs4&lt;/p&gt;
&lt;p&gt;定向爬虫：仅对输
      
    
    </summary>
    
    
      <category term="爬虫" scheme="http://github.com/hzebin/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫（四）</title>
    <link href="http://github.com/hzebin/2019/12/02/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>http://github.com/hzebin/2019/12/02/Python网络爬虫（四）/</id>
    <published>2019-12-02T07:00:00.000Z</published>
    <updated>2019-12-02T07:18:55.517Z</updated>
    
    <content type="html"><![CDATA[<p><strong>三种信息标记形式</strong></p><p>XML 最早的通用信息标记语言，可拓展性好，但繁琐。适合Internet上的信息交互与传递</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">person</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">firstName</span>&gt;</span>Tian<span class="tag">&lt;/<span class="name">firstName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lastName</span>&gt;</span>Song<span class="tag">&lt;/<span class="name">lastName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">streetAddr</span>&gt;</span>中关村南大街5号<span class="tag">&lt;/<span class="name">streetAddr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">city</span>&gt;</span>北京市<span class="tag">&lt;/<span class="name">city</span>&gt;</span> <span class="tag">&lt;<span class="name">zipcode</span>&gt;</span>100081<span class="tag">&lt;/<span class="name">zipcode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">prof</span>&gt;</span>Computer System<span class="tag">&lt;/<span class="name">prof</span>&gt;</span><span class="tag">&lt;<span class="name">prof</span>&gt;</span>Security<span class="tag">&lt;/<span class="name">prof</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">person</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JSON 信息有类型，适合程序处理（js)，较XML简洁。适合应用云端和节点的信息通信，但没有注释</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">“firstName”: “Tian”,</span><br><span class="line">    “lastName”: “Song”,</span><br><span class="line">    “address”: &#123; </span><br><span class="line">        “streetAddr” :“中关村南大街5号”,</span><br><span class="line">        “city” :“北京市”,</span><br><span class="line">        “zipcode” :“100081”</span><br><span class="line">    &#125;,</span><br><span class="line">    “prof”: [  “Computer System” ,“Security” ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>YAML 信息无类型，文本信息比例较高，可读性好。适合各类系统的配置文件，有注释易读</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">firstName:</span> <span class="string">Tian</span></span><br><span class="line"><span class="attr">lastName:</span> <span class="string">Song</span></span><br><span class="line"><span class="attr">address:</span></span><br><span class="line"><span class="attr">streetAddr:</span> <span class="string">中关村南大街5号</span></span><br><span class="line"><span class="attr">city:</span> <span class="string">北京市</span></span><br><span class="line"><span class="attr">zipcode:</span> <span class="number">100081</span></span><br><span class="line"><span class="attr">prof:</span></span><br><span class="line"><span class="string">‐Computer</span> <span class="string">System</span></span><br><span class="line"><span class="string">‐Security</span></span><br></pre></td></tr></table></figure><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提取HTML中的所有URL链接</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://python123.io/ws/demo.html'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    soup = BeautifulSoup(r.text, <span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#提取链接</span></span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> soup.find_all(<span class="string">'a'</span>):</span><br><span class="line">        print(link.get(<span class="string">'href'</span>))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;&gt;.find_all(name, attrs, recursive, string, **kwargs)</span><br><span class="line">返回一个列表类型，存储查找的结果</span><br><span class="line"></span><br><span class="line">name: 对标签名称的检索字符串</span><br><span class="line">attrs: 对标签属性值的检索字符串，可标注属性检索</span><br><span class="line">recursive: 是否对子孙全部检索，默认为<span class="keyword">True</span>。搜索当前节点儿子层面为<span class="keyword">False</span></span><br><span class="line">string: &lt;&gt;...&lt;/&gt;中字符串区域的检索字符串</span><br><span class="line"></span><br><span class="line">&lt;tag&gt;(...) 等价于 &lt;tag&gt;.find_all(...)</span><br><span class="line">soup(...) 等价于 soup.find_all(...)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://python123.io/ws/demo.html'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    soup = BeautifulSoup(r.text, <span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"查找a标签：\n"</span>, soup.find_all(<span class="string">'a'</span>))</span><br><span class="line">    print(<span class="string">"查找a,b标签：\n"</span>, soup.find_all([<span class="string">'a'</span>, <span class="string">'b'</span>]))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"显示所有标签信息：\n"</span>, soup.find_all(<span class="keyword">True</span>))</span><br><span class="line">    print(<span class="string">"----"</span>)</span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> soup.find_all(<span class="keyword">True</span>):</span><br><span class="line">        print(tag.name)</span><br><span class="line">    print(<span class="string">"----"</span>)</span><br><span class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> soup.find_all(re.compile(<span class="string">'b'</span>)):</span><br><span class="line">        print(tag.name)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"属性值检索：\n"</span>, soup.find_all(<span class="string">'p'</span>, <span class="string">'course'</span>))</span><br><span class="line">    print(<span class="string">"标签属性值检索：\n"</span>, soup.find_all(id=<span class="string">"link1"</span>))</span><br><span class="line">    print(<span class="string">"检索：\n"</span>, soup.find_all(id=<span class="string">"link"</span>))</span><br><span class="line">    print(<span class="string">"检索：\n"</span>, soup.find_all(id=re.compile(<span class="string">'link'</span>)))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"在儿子层面搜索，不搜索子孙全部：\n"</span>, soup.find_all(<span class="string">'a'</span>, recursive=<span class="keyword">False</span>))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"检索：\n"</span>, soup.find_all(string=<span class="string">"Basic Python"</span>))</span><br><span class="line">    print(<span class="string">"检索：\n"</span>, soup.find_all(string=re.compile(<span class="string">'python'</span>)))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th>检索方法</th><th>说明</th></tr></thead><tbody><tr><td>&lt;&gt;.find_all()</td><td></td></tr><tr><td>&lt;&gt;.find()</td><td>搜索且只返回一个结果，同.find_all()参数</td></tr><tr><td>&lt;&gt;.find_parents()</td><td>在先辈节点中搜索，返回列表类型</td></tr><tr><td>&lt;&gt;.find_parent()</td><td>在先辈节点中返回一个结果</td></tr><tr><td>&lt;&gt;.find_next_siblings()</td><td>在后续平行节点中搜索，返回列表类型</td></tr><tr><td>&lt;&gt;.find_next_sibling()</td><td>在后续平行节点中返回一个结果</td></tr><tr><td>&lt;&gt;.find_previous_siblings()</td><td>在前序平行节点中搜索，返回列表类型</td></tr><tr><td>&lt;&gt;.find_previous_sibling()</td><td>在前序平行节点中返回一个结果</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;三种信息标记形式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;XML 最早的通用信息标记语言，可拓展性好，但繁琐。适合Internet上的信息交互与传递&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gu
      
    
    </summary>
    
    
      <category term="爬虫" scheme="http://github.com/hzebin/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫（三）</title>
    <link href="http://github.com/hzebin/2019/12/02/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://github.com/hzebin/2019/12/02/Python网络爬虫（三）/</id>
    <published>2019-12-02T01:00:00.000Z</published>
    <updated>2019-12-02T01:29:46.518Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Beautiful Soup库</strong> <strong>解析HTML页面</strong></p><p>pip install beautifulsoup4</p><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">BeautifulSoup库的初次使用方法</span><br><span class="line"><span class="comment"># 解析格式化html树</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://python123.io/ws/demo.html"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    demo = r.text  <span class="comment">#网页的源代码</span></span><br><span class="line">    soup = BeautifulSoup(demo, <span class="string">'html.parser'</span>)</span><br><span class="line">    print(soup.prettify())</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Beautiful Soup库是解析、遍历、维护“标签树”的功能库</span><br><span class="line"></span><br><span class="line">Beautiful Soup库引用方式：</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup1 = BeautifulSoup(<span class="string">"&lt;html&gt;data&lt;/html&gt;"</span>, <span class="string">'html.parser'</span>)  <span class="comment">#(文档内容, 解析器)</span></span><br><span class="line">soup2 = BeautifulSoup(open(<span class="string">"D://demo.html"</span>), <span class="string">'html.parser'</span>)  <span class="comment">#BeautifulSoup对应一个HTML/XML文档的全部内容</span></span><br></pre></td></tr></table></figure><br><table><thead><tr><th>BeautifulSoup库解析器</th><th>使用方法</th><th>条件</th></tr></thead><tbody><tr><td>bs4的HTML解析器</td><td>BeautifulSoup(mk, ‘html.parser’)</td><td>安装bs4库</td></tr><tr><td>lxml的HTML解析器</td><td>BeautifulSoup(mk, ‘lxml’)</td><td>pip install lxml</td></tr><tr><td>lxml的XML解析器</td><td>BeautifulSoup(mk, ‘xml’)</td><td>pip install lxml</td></tr><tr><td>html5lib的解析器</td><td>BeautifulSoup(mk, ‘html5lib’)</td><td>pip install html5lib</td></tr></tbody></table><table><thead><tr><th>BeautifulSoup类的基本元素</th><th>说明</th></tr></thead><tbody><tr><td>Tag</td><td>标签，分别用&lt;&gt;和&lt;/&gt;表明开头和结尾，返回标签及其内容</td></tr><tr><td>Name</td><td>标签的名字，<p>…</p>的名字是’p’（字符串类型），格式：<tag>.name</tag></td></tr><tr><td>Attributes</td><td>标签的属性，字典形式组织，格式：<tag>.attrs</tag></td></tr><tr><td>NavigableString</td><td>标签内非属性字符串，&lt;&gt;…&lt;/&gt;中的字符串，格式：<tag>.string</tag></td></tr><tr><td>Comment</td><td>标签内字符串的注释部分，一种特殊的Comment类型，格式：<tag>.string</tag></td></tr></tbody></table><p><strong>Tag标签</strong>：HTML语法中的标签都可以用soup.<tag>访问获得，当文档中存在多个相同的<tag>对应的内容是，soup.<tag>返回第一个</tag></tag></tag></p><p><strong>NavigableString</strong>：可以跨越多个层次</p><p>NavigableString和Comment都是.string，判断是非属性字符串还是注释要用type()判断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://python123.io/ws/demo.html'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    demo = r.text  <span class="comment">#页面的源代码保存在demo</span></span><br><span class="line">    print(<span class="string">"页面源代码：\n"</span>, demo)</span><br><span class="line"></span><br><span class="line">    soup = BeautifulSoup(demo, <span class="string">'html.parser'</span>)  <span class="comment">#熬一碗鲜美的汤</span></span><br><span class="line">    print(<span class="string">"格式化树：\n"</span>, soup)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"titlt标签：\n"</span>, soup.title)</span><br><span class="line">    print(<span class="string">"a标签：\n"</span>, soup.a)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"a标签的名字：\n"</span>, soup.a.name)</span><br><span class="line">    print(<span class="string">"a标签父亲的名字：\n"</span>, soup.a.parent.name)</span><br><span class="line">    print(<span class="string">"a标签的父亲的父亲的名字：\n"</span>, soup.a.parent.parent.name)</span><br><span class="line"></span><br><span class="line">    tag = soup.a</span><br><span class="line">    print(<span class="string">"tag标签的全部属性：\n"</span>, tag.attrs)</span><br><span class="line">    print(<span class="string">"tag标签的类型：\n"</span>, type(tag))</span><br><span class="line">    print(<span class="string">"tag.attrs的类型：\n"</span>, type(tag.attrs))  <span class="comment">#字典类型</span></span><br><span class="line">    print(<span class="string">"class属性：\n"</span>, tag.attrs[<span class="string">'class'</span>])</span><br><span class="line">    print(<span class="string">"href属性：\n"</span>, tag.attrs[<span class="string">'href'</span>])</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"a标签：\n"</span>, soup.a)</span><br><span class="line">    print(<span class="string">"a标签内非属性字符串：\n"</span>, soup.a.string)</span><br><span class="line">    print(<span class="string">"p标签：\n"</span>, soup.p)</span><br><span class="line">    print(<span class="string">"p标签内的非属性字符串：\n"</span>, soup.p.string)  <span class="comment">#NavigableString可以跨越多个层次</span></span><br><span class="line">    print(<span class="string">"类型：\n"</span>, type(soup.p.string))</span><br><span class="line"></span><br><span class="line">    soup2 = BeautifulSoup(<span class="string">"&lt;b&gt;&lt;!--A This is a comment--&gt;&lt;/b&gt;&lt;p&gt;B This is a comment&lt;/p&gt;"</span>, <span class="string">'html.parser'</span>)</span><br><span class="line">    print(<span class="string">"soup2.b.string:\n"</span>, soup2.b.string)</span><br><span class="line">    print(<span class="string">"类型："</span>, type(soup2.b.string))</span><br><span class="line">    print(<span class="string">"soup2.p.string:\n"</span>, soup2.p.string)</span><br><span class="line">    print(<span class="string">"类型："</span>, type(soup2.p.string))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><br><p><strong>基于bs4库的HTML内容遍历方法</strong></p><br><p>标签树的下行遍历（BeautifulSoup类型是标签树的根节点）</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.contents</td><td>子节点的列表，将<tag>所有儿子节点存入列表（包括\n）</tag></td></tr><tr><td>.children</td><td>子节点的迭代类型，与.contents类似，用于循环遍历儿子节点</td></tr><tr><td>.descendants</td><td>子孙节点的迭代类型，包含所有的子孙节点，用于循环遍历</td></tr></tbody></table><br><p>标签树的上行遍历</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.parent</td><td>节点的父亲标签</td></tr><tr><td>.parents</td><td>节点先辈标签的迭代类型，用于循环遍历先辈节点</td></tr></tbody></table><br><p>标签树的平行遍历</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>.next_sibling</td><td>返回按照HTML文本顺序的下一个平行节点标签</td></tr><tr><td>.previous_sibling</td><td>返回按照HTML文本顺序的上一个平行节点标签</td></tr><tr><td>.next_siblings</td><td>迭代类型，返回按照HTML文本顺序的后续所有平行节点标签</td></tr><tr><td>.previous_siblings</td><td>迭代类型，返回按照HTML文本顺序的前续所有平行节点标签【】</td></tr></tbody></table><ul><li><p>平行遍历：包含\n</p></li><li><p>naviablestring也构成标签树的节点，所以平行遍历获得的下一个标签不一定是标签类型</p></li><li><p>平行遍历发生在同一个父节点下的各个节点间</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于bs4库的HTML内容遍历方法</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://python123.io/ws/demo.html'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    soup = BeautifulSoup(r.text, <span class="string">'html.parser'</span>)</span><br><span class="line">    print(soup)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 标签树的下行遍历知识点</span></span><br><span class="line">    print(<span class="string">"soup.head:\n"</span>, soup.head)</span><br><span class="line">    print(<span class="string">"soup.head的子列表：\n"</span>, soup.head.contents)</span><br><span class="line">    print(<span class="string">"soup.body的子列表：\n"</span>, soup.body.contents)</span><br><span class="line">    print(<span class="string">"长面的子列表长度为：\n"</span>, len(soup.body.contents))  <span class="comment">#包括换行</span></span><br><span class="line">    print(<span class="string">"soup.body.contents[1]:\n"</span>, soup.body.contents[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"------------------------------------------------------"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 标签树的下行遍历 遍历儿子节点</span></span><br><span class="line">    <span class="keyword">for</span> child <span class="keyword">in</span> soup.body.children:</span><br><span class="line">        print(child)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"------------------------------------------------------"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> child <span class="keyword">in</span> soup.body.descendants:</span><br><span class="line">        print(<span class="string">"*HZB*"</span>, child)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"------------------------------------------------------"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 标签树的上行遍历知识点</span></span><br><span class="line">    print(<span class="string">"soup.title.parent:\n"</span>, soup.title.parent)</span><br><span class="line">    print(<span class="string">"soup.html.parent:\n"</span>, soup.html.parent)</span><br><span class="line">    print(<span class="string">"soup.parent:\n"</span>, soup.parent)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 上行遍历遍历所有先辈节点，包括soup本身，所以要区别判断</span></span><br><span class="line">    <span class="keyword">for</span> parent <span class="keyword">in</span> soup.a.parents:</span><br><span class="line">        <span class="keyword">if</span> parent <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            print(parent)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(parent.name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 平行遍历知识点</span></span><br><span class="line">    print(<span class="string">"soup.a.next_sibling:\n"</span>, soup.a.next_sibling)</span><br><span class="line">    print(<span class="string">"soup.a.next_sibling.next_sibling:\n"</span>, soup.a.next_sibling.next_sibling)</span><br><span class="line">    print(<span class="string">"soup.a.previous_sibling:\n"</span>, soup.a.previous_sibling)</span><br><span class="line">    print(<span class="string">"soup.a.previous_sibling.previous_sibling:\n"</span>, soup.a.previous_sibling.previous_sibling)</span><br><span class="line">    print(<span class="string">"soup.a.parent:\n"</span>, soup.a.parent)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 平行遍历 遍历后续节点</span></span><br><span class="line">    print(<span class="string">"----"</span>)</span><br><span class="line">    <span class="keyword">for</span> sibling <span class="keyword">in</span> soup.a.next_siblings:</span><br><span class="line">        print(sibling)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 平行遍历 遍历前序节点</span></span><br><span class="line">    print(<span class="string">"----"</span>)</span><br><span class="line">    <span class="keyword">for</span> sibling <span class="keyword">in</span> soup.a.previous_siblings:</span><br><span class="line">        print(sibling)</span><br><span class="line">    print(<span class="string">"----"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><br>bs4库的prettify()方法可以格式化html代码，它会为HTML文本<>及其内容怎加'\n'，python3默认支持utf-8编码，bs4库将任何HTML输入都编程utf-8编码<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bs库的prettify()方法格式化代码</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://python123.io/ws/demo.html'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    soup = BeautifulSoup(r.text, <span class="string">'html.parser'</span>)</span><br><span class="line">    print(<span class="string">"格式化代码：\n"</span>, soup.prettify())</span><br><span class="line">    print(<span class="string">"----------"</span>)</span><br><span class="line">    print(<span class="string">"标签格式化：\n"</span>, soup.a.prettify())</span><br><span class="line">    print(<span class="string">"----------"</span>)</span><br><span class="line">    soup2 = BeautifulSoup(<span class="string">"&lt;p&gt;中文&lt;/p&gt;"</span>, <span class="string">'html.parser'</span>)</span><br><span class="line">    print(soup2.p.prettify())</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Beautiful Soup库&lt;/strong&gt; &lt;strong&gt;解析HTML页面&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pip install beautifulsoup4&lt;/p&gt;
&lt;br&gt;

&lt;figure class=&quot;highlight python&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="爬虫" scheme="http://github.com/hzebin/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫（二）</title>
    <link href="http://github.com/hzebin/2019/12/01/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://github.com/hzebin/2019/12/01/Python网络爬虫（二）/</id>
    <published>2019-12-01T07:00:00.000Z</published>
    <updated>2019-12-01T07:58:13.187Z</updated>
    
    <content type="html"><![CDATA[<p>网络爬虫的尺寸</p><table><thead><tr><th>爬取网页 玩转网站</th><th>爬取网站 爬取系列网站</th><th>爬取全网</th></tr></thead><tbody><tr><td>小规模，数据量小，爬取速度不敏感 <strong>Requests库</strong></td><td>中规模，数据规模较大，爬取速度敏感 <strong>Scrapy库</strong></td><td>大规模，搜索引擎，爬取速度关键，只能定制开发</td></tr></tbody></table><p>网络爬虫带来的问题</p><ul><li>对服务器的性能骚扰，消耗Web服务器的资源开销</li><li>服务器上的数据有产权归属，可能带来法律风险</li><li>爬虫可能具备突破简单访问控制的能力，获得被保护数据从而泄露个人隐私</li></ul><p>网络爬虫的两种限制</p><ol><li><p>判断User-Agent进行限制</p><p>检查来访的HTTP协议头的User-Agent域，只响应浏览器或友好爬虫访问</p></li><li><p>发布Robots协议</p><p>告知所有爬虫网站的爬虫策略，要求爬虫遵守</p></li></ol><p>Robots协议 （网络爬虫排除标准）</p><p>作用：网站告知爬虫哪些页面可以抓取，哪些不行</p><p>形式：在网站的根目录下的robots.txt文件</p><p>语法：User-agent请求的是谁  Disallow不允许的位置  /代表根目录 *代表所有</p><p>网络爬虫先自动或人工识别roboot.txt，再进行内容爬取，如果不遵守协议可能带来风险，商业利益必须遵守</p><p>类人行为可以不参考Robots协议（不对服务器进行骚扰）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">案例<span class="number">1</span>：爬取京东的某件商品</span><br><span class="line"><span class="comment"># 爬取京东的某件商品</span></span><br><span class="line"><span class="comment"># url = https://item.jd.com/48918974270.html</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"https://item.jd.com/48918974270.html"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    print(r.text[:<span class="number">1000</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">案例<span class="number">2</span>：模拟浏览器的请求头访问亚马逊商品</span><br><span class="line"><span class="comment"># 模拟浏览器头部访问亚马逊商品</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"https://www.amazon.cn/gp/product/B01M8L5Z3Y"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 模拟浏览器头部信息</span></span><br><span class="line">    kv = &#123;<span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0'</span>&#125;</span><br><span class="line">    r = requests.get(url, headers = kv)</span><br><span class="line">    print(<span class="string">"头部信息为：\n"</span>, r.request.headers)  <span class="comment"># 注意request没有s</span></span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    print(<span class="string">"爬取结果为：\n"</span>, r.text[<span class="number">1000</span>:<span class="number">2000</span>])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">案例<span class="number">3</span>：百度搜索关键词</span><br><span class="line"><span class="comment"># 通过百度搜索关键词信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"https://www.baidu.com/s"</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kv = &#123;<span class="string">'wd'</span>: <span class="string">'Python'</span>&#125;</span><br><span class="line">    r = requests.get(url, params = kv)</span><br><span class="line">    print(<span class="string">"url地址为："</span>, r.request.url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    print(<span class="string">"所有信息的长度为：\n"</span>, len(r.text))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">案例<span class="number">4</span>：爬取图片并保存在本地（注意路径）</span><br><span class="line"><span class="comment"># 图片的爬取</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://photocdn.sohu.com/20151027/Img424310423.jpg"</span></span><br><span class="line">root = <span class="string">"D://PyCharm_file//workplace//images//"</span></span><br><span class="line">path = root + url.split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(root):</span><br><span class="line">        os.mkdir(root)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        <span class="comment"># print(r.status_code)</span></span><br><span class="line">        print(path)</span><br><span class="line">        <span class="keyword">with</span> open(path, <span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(r.content)  <span class="comment">#二进制写</span></span><br><span class="line">            f.close()</span><br><span class="line">            print(<span class="string">"文件保存成功"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"文件已存在"</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">案例<span class="number">5</span>：通过网站API查询IP地址</span><br><span class="line"><span class="comment"># 通过网站的API查询ip地址</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://m.ip138.com/ip.asp?ip="</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.get(url + <span class="string">'202.204.80.112'</span>)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    print(r.text[<span class="number">-500</span>:])</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"爬取失败"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;网络爬虫的尺寸&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;爬取网页 玩转网站&lt;/th&gt;
&lt;th&gt;爬取网站 爬取系列网站&lt;/th&gt;
&lt;th&gt;爬取全网&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;小规模，数据量小，爬取速度不敏感 &lt;s
      
    
    </summary>
    
    
      <category term="爬虫" scheme="http://github.com/hzebin/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫（一）</title>
    <link href="http://github.com/hzebin/2019/11/30/Python%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://github.com/hzebin/2019/11/30/Python网络爬虫（一）/</id>
    <published>2019-11-30T10:00:00.000Z</published>
    <updated>2019-11-30T11:56:50.758Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python网络爬虫"><a href="#Python网络爬虫" class="headerlink" title="Python网络爬虫"></a>Python网络爬虫</h1><p>requests库</p><p>自动爬取HTML页面，自动网络请求提交</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">requests库的安装小测：</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入requests库</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#构造一个请求</span></span><br><span class="line">r = requests.get(<span class="string">"https://baidu.com"</span>)</span><br><span class="line">print(<span class="string">"r的类型为：\n"</span>, type(r))</span><br><span class="line">print(<span class="string">"状态码为：\n"</span>, r.status_code)</span><br><span class="line">print(<span class="string">"html内容为：\n"</span>, r.text)</span><br></pre></td></tr></table></figure><p>requests库的7个主要方法</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>requests.request()</td><td>构造一个请求，支撑以下各方法的基础方法</td></tr><tr><td>requests.get()</td><td>获取HTML网页的主要方法，对应于HTTP的GET</td></tr><tr><td>requests.head()</td><td>获取HTML网页头信息的方法，对应于HTTP的HEAD</td></tr><tr><td>requests.post()</td><td>向HTML页面提交POST请求的方法，对应于HTTP的POST</td></tr><tr><td>requests.put()</td><td>向HTML网页提交PUT请求的方法，对应于HTTP的PUT</td></tr><tr><td>requests.patch()</td><td>向HTML网页提交局部修改请求，对应于HTTP的PATCH</td></tr><tr><td>requests.delete()</td><td>向HTML页面提交删除请求，对应于HTTP的DELETE</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">requests.get()</span><br><span class="line"></span><br><span class="line">r = requests.get(url)</span><br><span class="line">构造一个向服务器请求资源的Request对象</span><br><span class="line">返回一个包含服务器资源的Response对象，Response对象包含爬虫返回的内容</span><br><span class="line"></span><br><span class="line">requests.get(url, params=<span class="keyword">None</span>, **kwargs)</span><br><span class="line">url 拟获取页面的URL链接</span><br><span class="line">params url中的额外参数，字典或字节流格式，可选</span><br><span class="line">**kwargs <span class="number">12</span>个控制访问的参数</span><br></pre></td></tr></table></figure><p>Response对象的属性</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>r.status_code</td><td>HTTP请求的返回状态，200表示连接成功，404或其他表示失败</td></tr><tr><td>r.text</td><td>HTTP响应内容的字符串形式，即URL对应的页面内容</td></tr><tr><td>r.encoding</td><td>从HTTP header中猜测响应内容的编码方式（查看的的头部的charset，不准确，默认编码为ISO‐8859‐1）</td></tr><tr><td>r.apparent_encoding</td><td>从内容中分析出响应内容的编码方式（备选编码方式，比较准确）</td></tr><tr><td>r.content</td><td>HTTP响应内容的二进制形式（例如图像）</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入requests库</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#构造一个请求</span></span><br><span class="line">r = requests.get(<span class="string">"https://baidu.com"</span>)</span><br><span class="line">print(<span class="string">"r的类型为：\n"</span>, type(r))</span><br><span class="line"><span class="comment">#查看是否请求成功</span></span><br><span class="line">print(<span class="string">"状态码为：\n"</span>, r.status_code)</span><br><span class="line">print(<span class="string">"html内容为：\n"</span>, r.text)</span><br><span class="line">print(<span class="string">"网页的编码方式为：\n"</span>, r.encoding)</span><br><span class="line">print(<span class="string">"网页的备选编码方式为：\n"</span>, r.apparent_encoding)</span><br><span class="line"><span class="comment">#设置网页的编码方式</span></span><br><span class="line">r.encoding = <span class="string">'utf-8'</span></span><br><span class="line">print(<span class="string">"html内容为：\n"</span>, r.text)</span><br></pre></td></tr></table></figure><p>requests.get()网络连接可能有风险会抛出异常</p><table><thead><tr><th>requests库的异常</th><th>说明</th></tr></thead><tbody><tr><td>requests.ConnectionError</td><td>网络连接错误异常，如DNS查询失败，拒绝连接等</td></tr><tr><td>requests.HTTPError</td><td>HTTP错误异常</td></tr><tr><td>requests.URLRequired</td><td>URL缺失异常</td></tr><tr><td>requests.TooManyRedirects</td><td>超过最大重定向次数，产生重定向异常</td></tr><tr><td>requests.ConnectTimeout</td><td>连接远程服务器超时异常</td></tr><tr><td>requests.Timeout</td><td>请求URL超时，产生超时异常</td></tr><tr><td>r.raise_for_status()</td><td>如果不是200，产生异常requests.HTTPErrot。<strong>在方法内部判断r.status_code是否等于200，不需要增加额外的if语句，该语句便于利用try-except进行异常处理。</strong></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">爬取网页的通用代码框架</span><br><span class="line"></span><br><span class="line"><span class="comment">#爬取网页的通用代码框架</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHTMLText</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(url, timeout = <span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()  <span class="comment">#如果状态不是200，英法HTTPError异常</span></span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"产生异常"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    url = <span class="string">"https://www.baidu.com"</span></span><br><span class="line">    print(getHTMLText(url))</span><br></pre></td></tr></table></figure><p>HTTP 超文本传输协议</p><p>HTTP是一个基于“请求与响应”模式的、无状态【第一次请求与第二次请求没有关联】的应用层协议【HTTP协议工作在TCP协议之上】。采用URL作为定位网络资源的标识，URL格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://host[:port][path]</span><br></pre></td></tr></table></figure><p>PATCH与PUT的区别</p><p>假设URL位置有一组数据UserInfo，包括UserId、UserName等20个字段</p><p>需求：用户修改了UserName，其他不变</p><ul><li>采用PATCH，仅向URL提交UserName的局部更新请求</li><li>采用PUT，必须将所有20个字段一并提交到URL，<em>未提交的字段将会被删除</em></li></ul><p><strong>PATCH优点：节省网络宽带</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#requests库的head()方法</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">r = requests.head(<span class="string">"https://baidu.com"</span>)</span><br><span class="line">print(<span class="string">"请求的头部内容为：\n"</span>, r.headers)</span><br><span class="line">print(<span class="string">"请求的html内容为：\n"</span>, r.text)  <span class="comment">#输出为空</span></span><br><span class="line"><span class="comment">#所用head可以更加节约网络资源地去获取网络概要信息</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#requests库的post()方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">payload = &#123;<span class="string">'key1'</span>: <span class="string">'value1'</span>, <span class="string">'key2'</span>: <span class="string">'value2'</span>&#125;  <span class="comment">#字典 键值对</span></span><br><span class="line">r = requests.post(<span class="string">'http://httpbin.org/post'</span>, data = payload)</span><br><span class="line">print(r.text)</span><br><span class="line"><span class="comment">## 向URL POST一个字典，自动编码为from表单  跟put()方法一样，不过会将原有地数据覆盖掉</span></span><br><span class="line"><span class="comment"># &#123;  ... </span></span><br><span class="line"><span class="comment">#     "form": &#123; </span></span><br><span class="line"><span class="comment">#         "key2": "value2", </span></span><br><span class="line"><span class="comment">#         "key1": "value1" </span></span><br><span class="line"><span class="comment">#     &#125;, </span></span><br><span class="line"><span class="comment">#    ...</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#requests库地post()方法</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.post(<span class="string">'http://httpbin.org/post'</span>, data = <span class="string">'ABC'</span>)  <span class="comment">#字符串</span></span><br><span class="line">print(r.text)</span><br><span class="line"><span class="comment">## 向URL POST一个字符串，自动编码为data</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   ...</span></span><br><span class="line"><span class="comment">#   "data": "ABC",</span></span><br><span class="line"><span class="comment">#   "form": &#123;&#125;,</span></span><br><span class="line"><span class="comment">#     ...</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">requests.requests(method, url, **kwargs)</span><br><span class="line">method 请求方式，对应有GET/HEAD/POST/PUT/PATCH/DELETE/OPTIONS（获取服务器跟客户端能够打交道的参数）一共<span class="number">7</span>种</span><br><span class="line">url 拟获取页面的url链接</span><br><span class="line">**kwargs 访问控制的参数，共<span class="number">13</span>个，可选项</span><br><span class="line">params 字典或字节序列，作为参数增加到url中</span><br><span class="line">    &gt;&gt;&gt; kv=&#123;<span class="string">'key1'</span>:<span class="string">'value1'</span>,<span class="string">'key2'</span>:<span class="string">'value2'</span>&#125; </span><br><span class="line">&gt;&gt;&gt; r=requests.request(<span class="string">'GET'</span>,<span class="string">'http://python123.io/ws'</span>,params=kv)</span><br><span class="line"> &gt;&gt;&gt; print(r.url) http://python123.io/ws?key1=value1&amp;key2=value2</span><br><span class="line">    data 字典、字节序列或文件对象，作为Requests的内容</span><br><span class="line">    &gt;&gt;&gt; kv=&#123;<span class="string">'key1'</span>:<span class="string">'value1'</span>,<span class="string">'key2'</span>:<span class="string">'value2'</span>&#125; </span><br><span class="line">&gt;&gt;&gt; r=requests.request(<span class="string">'POST'</span>,<span class="string">'http://python123.io/ws'</span>,data=kv)</span><br><span class="line"> &gt;&gt;&gt; body=<span class="string">'主体内容'</span> </span><br><span class="line">&gt;&gt;&gt; r=requests.request(<span class="string">'POST'</span>,<span class="string">'http://python123.io/ws'</span>,data=body)</span><br><span class="line">    json JSON格式的数据，作为Requests的内容</span><br><span class="line">    &gt;&gt;&gt; kv=&#123;<span class="string">'key1'</span>:<span class="string">'value1'</span>&#125; </span><br><span class="line">&gt;&gt;&gt; r=requests.request(<span class="string">'POST'</span>,<span class="string">'http://python123.io/ws'</span>,json=kv)</span><br><span class="line">    headers 字典，HTTP定制头</span><br><span class="line">    &gt;&gt;&gt; hd=&#123;<span class="string">'user‐agent'</span>:<span class="string">'Chrome/10'</span>&#125; </span><br><span class="line">&gt;&gt;&gt; r=requests.request(<span class="string">'POST'</span>,<span class="string">'http://python123.io/ws'</span>,headers=hd)</span><br><span class="line">    cookies 字典或CookieJar,Requests中的cookie</span><br><span class="line">    auth 元组，支持HTTP认证功能</span><br><span class="line">    files 字典类型，传输文件</span><br><span class="line">    &gt;&gt;&gt; fs=&#123;<span class="string">'file'</span>:open(<span class="string">'data.xls'</span>,<span class="string">'rb'</span>)&#125; </span><br><span class="line">        &gt;&gt;&gt; r=requests.request(<span class="string">'POST'</span>,<span class="string">'http://python123.io/ws'</span>,files=fs)</span><br><span class="line">    timeout 设定超时时间，秒为单位</span><br><span class="line">    &gt;&gt;&gt; r=requests.request(<span class="string">'GET'</span>,<span class="string">'http://www.baidu.com'</span>,timeout=<span class="number">10</span>)</span><br><span class="line">    proxies 字典类型，设定访问代理服务器，可以增加登录认证(可以隐藏源，防止逆追踪)</span><br><span class="line">    &gt;&gt;&gt; pxs=&#123;<span class="string">'http'</span>:<span class="string">'http://user:pass@10.10.10.1:1234'</span> <span class="string">'https'</span>:<span class="string">'https://10.10.10.1:4321'</span>&#125; &gt;&gt;&gt; r=requests.request(<span class="string">'GET'</span>,<span class="string">'http://www.baidu.com'</span>,proxies=pxs)</span><br><span class="line">    allow_redirects <span class="keyword">True</span>/<span class="keyword">False</span>，默认为<span class="keyword">True</span>，重定向开关</span><br><span class="line">    stream <span class="keyword">True</span>/<span class="keyword">False</span>，默认为<span class="keyword">True</span>，获取内容立即下载开关</span><br><span class="line">    verify <span class="keyword">True</span>/<span class="keyword">False</span>，默认为<span class="keyword">True</span>，认证SSL证书开关</span><br><span class="line">    cert 本地SSL证书路径</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python网络爬虫&quot;&gt;&lt;a href=&quot;#Python网络爬虫&quot; class=&quot;headerlink&quot; title=&quot;Python网络爬虫&quot;&gt;&lt;/a&gt;Python网络爬虫&lt;/h1&gt;&lt;p&gt;requests库&lt;/p&gt;
&lt;p&gt;自动爬取HTML页面，自动网络请求提交&lt;/
      
    
    </summary>
    
    
      <category term="爬虫" scheme="http://github.com/hzebin/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>jQuery学习笔记（三）</title>
    <link href="http://github.com/hzebin/2019/09/23/jQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://github.com/hzebin/2019/09/23/jQuery学习笔记（三）/</id>
    <published>2019-09-23T00:25:27.000Z</published>
    <updated>2019-09-26T15:16:22.494Z</updated>
    
    <content type="html"><![CDATA[<p>jQuery操作DOM</p><h2 id="操作元素样式"><a href="#操作元素样式" class="headerlink" title="操作元素样式"></a>操作元素样式</h2><h3 id="获取样式属性值"><a href="#获取样式属性值" class="headerlink" title="获取样式属性值"></a>获取样式属性值</h3><p>jQuery中通过css()方法获取样式属性值</p><p>语法:<br>//获取单个属性：<br>$(selector).css(‘property’);<br>返回结果是字符串形式的属性值</p><p>//获取多个属性<br>$(selector).css([‘property1’, ‘property2’, ‘property3’, …]);<br>返回结果是对象形式的属性名和属性值</p><h3 id="设置样式属性值"><a href="#设置样式属性值" class="headerlink" title="设置样式属性值"></a>设置样式属性值</h3><p>jQuery中通过css()方法设置样式属性值</p><p>语法：<br>//设置单个属性<br>$(selector).css(‘property’, ‘value’);</p><p>//设置多个属性<br>$(selector).css({‘property1’: ‘value1’, ‘property2’: ‘value2’, …});</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"color: red; font-size: 50px; font-family: '宋体'"</span>&gt;</span></span><br><span class="line">        越努力 越幸运</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"myBtn"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"设置样式"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"d1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取样式属性值--单个属性</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> a = $(<span class="string">'div'</span>).css(<span class="string">'color'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(a);  <span class="comment">//结果为rgb(255, 0, 0)</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取样式属性值--多个属性</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> obj = $(<span class="string">'div'</span>).css([<span class="string">'color'</span>, <span class="string">'font-size'</span>, <span class="string">'font-family'</span>]);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(obj);  <span class="comment">//结果为&#123;color: "rgb(255, 0, 0)", font-size: "50px", font-family: "宋体"&#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//设置样式属性--单个属性</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//设置样式属性--多个属性</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#myBtn'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'#d1'</span>).css(&#123;<span class="attr">background</span>: <span class="string">'pink'</span>, <span class="attr">width</span>: <span class="string">'150px'</span>, <span class="attr">height</span>: <span class="string">'150px'</span>, <span class="string">'border-radius'</span>: <span class="string">'50%'</span>&#125;);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过函数设置样式属性值"><a href="#通过函数设置样式属性值" class="headerlink" title="通过函数设置样式属性值"></a>通过函数设置样式属性值</h3><p>使用css()方法设置属性值时，每个样式属性对应的value值还可以替换为函数形式。</p><p>语法：<br>函数调用后，将返回值作为样式属性的值。<br>index表示匹配元素的索引值，从0开始；value表示匹配元素的样式属性的当前值；newValue表示函数的返回值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置单个属性</span></span><br><span class="line">$(selector).css(<span class="string">'property'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> newValue;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置多个属性</span></span><br><span class="line">$(selector).css(&#123;</span><br><span class="line">    <span class="string">'property1'</span>: <span class="function"><span class="keyword">function</span>(<span class="params">index, value1</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> newValue;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'property2'</span>: <span class="function"><span class="keyword">function</span>(<span class="params">index, value2</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> newValue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"myBtn"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"设置样式"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"d2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).css(&#123;<span class="attr">background</span>: <span class="string">'pink'</span>, <span class="attr">width</span>: <span class="string">'150px'</span>, <span class="attr">height</span>: <span class="string">'50px'</span>, <span class="string">'border-radius'</span>: <span class="string">'50%'</span>&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//通过函数设置样式</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#myBtn'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'div'</span>).css(&#123;</span></span><br><span class="line"><span class="actionscript">                width: <span class="function"><span class="keyword">function</span><span class="params">(index, value)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">parseFloat</span>(value) * <span class="number">2</span>;</span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="actionscript">                height: <span class="function"><span class="keyword">function</span><span class="params">(index, value)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span>(index === <span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="built_in">parseFloat</span>(value) * <span class="number">2</span>;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(<span class="string">'#d2'</span>).css(<span class="string">'width'</span>));</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jQuery操作元素类"><a href="#jQuery操作元素类" class="headerlink" title="jQuery操作元素类"></a>jQuery操作元素类</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>addClass()</td><td>将指定的类添加到匹配元素中</td></tr><tr><td>removeClass()</td><td>从所有匹配的元素中删除全部或指定的类</td></tr><tr><td>toggleClass()</td><td>对设置或移除被选元素的一个或多个类进行切换</td></tr><tr><td>hasClass()</td><td>判断元素的某个类是否存在</td></tr></tbody></table><p>在实际开发中，css()方法与addClass()、removeClass()方法虽然可以改变元素的样式，但使用场景不同。一般来说，为了分离CSS与Javascript代码，建议使用addClass()、removeClass()对类进行操作，通过增加和移动类来实现样式的切换。而css()方法适用CSS样式值不固定的情况，例如为元素随机生成背景色。</p><p>toggleClass()方法：<br>$(selector).toggleClass(‘c’);  //参数c表示一个自定义的类，调用toggleClass()方法，指定元素中若没有c，则添加，否则执行移除操作。</p><p>方式一：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).addClass(<span class="string">'c'</span>);  <span class="comment">//添加单个类</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).addClass(<span class="string">'c1 c2 c3'</span>);  <span class="comment">//添加多个类（用空格分开）</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).removeClass();  <span class="comment">//移除所有类</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).removeClass(<span class="string">'c'</span>);  <span class="comment">//移除单个类</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).removeClass(<span class="string">'c1 c2 c3'</span>);  <span class="comment">//移除多个类</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> d = $(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="actionscript">        d.toggleClass(<span class="string">'c'</span>);  <span class="comment">//第一次调用</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        console.log(d[0].outerHTML);  //<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"c"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">        d.toggleClass(<span class="string">'c'</span>);  <span class="comment">//第二次调用</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        console.log(d[0].outerHTML);  //<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="actionscript">        d.toggleClass(<span class="string">'c'</span>);  <span class="comment">//第三次调用</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        console.log(d[0].outerHTML);  //<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"c"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式二：<br>toggleClass()的第二个参数，可手动控制类的添加或移除。该参数是布尔值，true表示添加类，false表示移除类。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(selector).toggleClass('c', true);  //添加类c</span><br><span class="line">$(selector).toggleClass('c', false);  //删除类c</span><br></pre></td></tr></table></figure><p>方式三：<br>toggleClass()第二个参数可通过条件判断的返回值设置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>操作元素类<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.b</span> &#123;</span></span><br><span class="line"><span class="undefined">            background: green;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>12312313<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        d.toggleClass(<span class="string">'c'</span>, <span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(d[<span class="number">0</span>].outerHTML);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> count=<span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;  <span class="comment">//this表示发生事件的元素</span></span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).toggleClass(<span class="string">'b'</span>, ++count%<span class="number">3</span> === <span class="number">0</span>);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>拓展：操作元素类的addClass()、removeClass()、toggleClass()方法支持使用函数作为参数，通过参数的返回值来操作元素的类。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//addClass()方法</span><br><span class="line">$('div').addClass(function(index, value) &#123;</span><br><span class="line">    console.log('元素的索引：' + index);</span><br><span class="line">    console.log('元素原来的class值' + value);</span><br><span class="line">    return 'item-' + index;  //将返回值作为要添加的class</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>hasClass()方法：<br>$(selector).hasClass(‘c’);  //判断是否含有类名c</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">//判断是否含有类名c，有则移除，无则添加</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Huang Zebin<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>($(<span class="string">'div'</span>).hasClass(<span class="string">'c'</span>)) &#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'div'</span>).removeClass(<span class="string">'c'</span>);</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">'div'</span>).addClass(<span class="string">'c'</span>);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> result = $(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(result[<span class="number">0</span>].outerHTML);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="操作元素的尺寸"><a href="#操作元素的尺寸" class="headerlink" title="操作元素的尺寸"></a>操作元素的尺寸</h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>width()</td><td>获取或设置元素的宽度 （没包括内边距？？）</td></tr><tr><td>height()</td><td>获取或设置元素的高度</td></tr><tr><td>innerWidth()</td><td>获取元素的宽度（包括内边距）</td></tr><tr><td>innerHeight()</td><td>获取元素的高度（包括内边距）</td></tr><tr><td>outerWidth()</td><td>获取元素的宽度（包括内边距和边框）</td></tr><tr><td>outerHeight()</td><td>获取元素的高度（包括内边距和边框）</td></tr><tr><td>outerWidth(true)</td><td>获取元素的宽度（包括内边距、边框、外边距）</td></tr><tr><td>outerHeight(true)</td><td>获取元素的高度（包括内边距、边框、外边距）</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(selector).width();  //获取宽度</span><br><span class="line">$(selector).width('30px');  //设置宽度</span><br><span class="line">$(selector).width(30);  //设置宽度，不加引号不能添加单位</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 200<span class="selector-tag">px</span>;  <span class="comment">/*元素的宽高（文字）*/</span></span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background: yellow;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-tag">red</span>;  <span class="comment">/*字体颜色*/</span></span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">            border-radius: 25%;</span></span><br><span class="line"><span class="undefined">            line-height: 25px;</span></span><br><span class="line"><span class="undefined">            padding: 10px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 获取和设置元素的宽度和高度 --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"按钮"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Huang Zebin<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'input'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'div'</span>).width($(<span class="string">'div'</span>).width() + <span class="number">50</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'div'</span>).height($(<span class="string">'div'</span>).height() + <span class="number">50</span>);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>备注：会查看Chrome的盒子模型</p><h3 id="操作元素的位置"><a href="#操作元素的位置" class="headerlink" title="操作元素的位置"></a>操作元素的位置</h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>offset()</td><td>获取匹配元素的（第一个元素）的坐标位置，或设置每个元素的坐标</td></tr><tr><td>offsetParent()</td><td>获取距离匹配元素最近的（含有定位信息）的元素</td></tr><tr><td>position()</td><td>获取匹配元素相对父元素的偏移</td></tr><tr><td>scrollLeft()</td><td>获取或设置匹配元素相对滚动条左侧的偏移</td></tr><tr><td>scrollTop()</td><td>获取或设置匹配元素相对滚动条顶部的偏移</td></tr></tbody></table><p>offset()方法：<br>可以获取到匹配元素中的第一个元素在当前页面的坐标位置。若元素的样式属性display设置为none，则获取到的值为0。<br>语法： $(selector).offset();<br>返回值包含两个属性left和top，分别表示元素距离浏览器的左偏移和上偏移。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>offset()<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取div的top和left值</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).offset().top);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(<span class="string">'div'</span>).offset().left);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//设置div的top和left值</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//$('div').offset(&#123;left: 200, top: 100&#125;);</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).offset(&#123;<span class="attr">left</span>: <span class="number">100</span>&#125;);  <span class="comment">//键值对&#123;&#125;  向右偏移</span></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>position()方法获取元素相对于父元素（含有定位）的偏移，当父元素没有设置定位时，后者的左右与前者等价.【例子？？】</p><p>offsetParent()方法返回距离指定元素最近的“被定位”的祖辈元素对象。“被定位”是指元素的样式属性中position属性的值为relative、absolute、fixed，不包括position属性的默认值static。<br>语法： $(selector).offsetParent();</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            border: 1px solid red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#d1</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 100px;</span></span><br><span class="line"><span class="undefined">            height: 100px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#d2</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#d3</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 300px;</span></span><br><span class="line"><span class="undefined">            height: 300px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-id">#d4</span> &#123;</span></span><br><span class="line"><span class="undefined">            width: 400px;</span></span><br><span class="line"><span class="undefined">            height: 400px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"d1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"d2"</span> <span class="attr">style</span>=<span class="string">"position: relative"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"d3"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"d4"</span>&gt;</span>test<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#d4'</span>).offsetParent().css(<span class="string">'backgroundColor'</span>, <span class="string">'green'</span>);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>scrollLeft()与scrollTop()方法可以获取或设置指定元素相对滚动条左侧和顶部的偏移值。<br>//获取元素相对左侧的偏移值<br>$(selector).scrollLeft();<br>//设置元素相对左侧的偏移值<br>$(selector).scrollLeft(value);</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            background: pink;</span></span><br><span class="line"><span class="undefined">            height: 100px;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            border: 1px solid black;</span></span><br><span class="line"><span class="undefined">            overflow: auto;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        p &#123;</span></span><br><span class="line"><span class="undefined">            background: yellow;</span></span><br><span class="line"><span class="undefined">            height: 1000px;</span></span><br><span class="line"><span class="undefined">            width: 1000px;</span></span><br><span class="line"><span class="undefined">            margin: 10px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"按钮"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>行动好过语言<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'input'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'div'</span>).scrollTop(<span class="string">'500'</span>);</span></span><br><span class="line"><span class="javascript">            $(<span class="string">'div'</span>).scrollLeft(<span class="string">'50'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;jQuery操作DOM&lt;/p&gt;
&lt;h2 id=&quot;操作元素样式&quot;&gt;&lt;a href=&quot;#操作元素样式&quot; class=&quot;headerlink&quot; title=&quot;操作元素样式&quot;&gt;&lt;/a&gt;操作元素样式&lt;/h2&gt;&lt;h3 id=&quot;获取样式属性值&quot;&gt;&lt;a href=&quot;#获取样式属性值&quot; cl
      
    
    </summary>
    
    
      <category term="jQuery" scheme="http://github.com/hzebin/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>jQuery学习笔记（二）</title>
    <link href="http://github.com/hzebin/2019/09/22/jQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://github.com/hzebin/2019/09/22/jQuery学习笔记（二）/</id>
    <published>2019-09-22T05:00:00.000Z</published>
    <updated>2019-09-22T14:27:36.169Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jQuery选择器简介"><a href="#jQuery选择器简介" class="headerlink" title="jQuery选择器简介"></a>jQuery选择器简介</h2><p>选择器的应用体现了jQuery的一个设计思想，即获取（选择）网页中的元素，然后根据实际需求对元素进行各种操作。</p><p>jQuery模仿CSS选择器实现了jQuery选择器，然后通过jQuery选择器来获取元素，不仅让获取元素的方式更加多样化，而且可以在获取元素后为元素添加样式、行为。</p><p>jQuery选择器语法： $(selector);<br>//根据id值获取元素<br>$(‘#id的值’)<br>//根据元素的名称获取元素<br>$(‘元素的名称’)<br>selector代表jQuery选择器，代码执行后，返回一个jQuery对象（类数组）。</p><p>jQuery选择器按照功能可以分为基本选择器、层次选择器、过滤选择器。</p><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h2><p>基本选择器包括id选择器、类选择器。元素选择器、通配符选择器。</p><table><thead><tr><th>选择器</th><th>描述</th><th>返回值</th></tr></thead><tbody><tr><td>#id</td><td>id选择器，根据id值匹配一个元素</td><td>单个元素</td></tr><tr><td>.class</td><td>类选择器，根据类名匹配元素</td><td>元素集合</td></tr><tr><td>element</td><td>元素选择器，根据元素名匹配所有元素</td><td>元素集合</td></tr><tr><td>*</td><td>通配符选择器，匹配所有元素</td><td>元素集合</td></tr><tr><td>selector1, selector2, …, selectorN</td><td>同时获取多个元素</td><td>元素集合</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            border: 1px solid black;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"byId"</span>&gt;</span>第一个div元素，id值为byId<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>第一个p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"byClass"</span>&gt;</span>第二个p元素，类名为byClass<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"byClass"</span>&gt;</span>第二个div元素，类名为byClass<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//id选择器,一个id选择器只能获取一个元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#byId'</span>).css(<span class="string">'background'</span>, <span class="string">'pink'</span>);  <span class="comment">//修改背景颜色</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//类选择器,可以为不同的元素设置同名的class值</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'.byClass'</span>).css(<span class="string">'background'</span>, <span class="string">'red'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//元素选择器</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'p'</span>).css(<span class="string">'font-size'</span>, <span class="string">'20px'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//通配符选择器(*获取页面的所有元素,包括body元素，有性能问题)</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'*'</span>).css(<span class="string">'background'</span>, <span class="string">'yellow'</span>);</span></span><br><span class="line"><span class="undefined">        /*</span></span><br><span class="line"><span class="undefined">        虽然通配符可以匹配所有的元素，但是会影响网页渲染的时间，建议用逗号分隔开多个元素</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'.byClass, #byId'</span>).css(<span class="string">'background'</span>, <span class="string">'yellow'</span>);</span></span><br><span class="line"><span class="undefined">        */</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h2><table><thead><tr><th>选择器</th><th>描述</th><th>返回值</th></tr></thead><tbody><tr><td>parent &gt; child</td><td>子元素选择器，根据父元素匹配所有的子元素（紧邻的一代元素）</td><td>元素元素</td></tr><tr><td>selector selector1</td><td>后代选择器，根据祖先元素（selector）匹配所有的后代元素（selector1）。【后代元素不仅包括子元素，还包括子元素下的所有其他元素】</td><td>元素集合</td></tr><tr><td>prev + next</td><td>兄弟选择器，匹配prev元素紧邻的兄弟元素【后面第一个符合的元素，只找一个，包括* 】</td><td>元素集合</td></tr><tr><td>prev ~ siblings</td><td>兄弟选择器，匹配prev元素后的所有兄弟元素</td><td>元素集合</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>层次选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是div前面的p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dv"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是div中的第一个p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第一个li元素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第二个li中的p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是div中的第二个p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是div后面的第1个p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是div后面的第2个p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是div后面的第3个p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//子元素选择器//</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#dv &gt; p'</span>).css(<span class="string">'background'</span>, <span class="string">'red'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//在jQuery中，可以使用children()方法代替子元素的选择器</span></span></span><br><span class="line"><span class="undefined">        /*</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#dv &gt; p'</span>);  <span class="comment">//使用子元素选择器获取</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#dv'</span>).children(<span class="string">'p'</span>);  <span class="comment">//使用children方法获取</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        另：</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#dv &gt; *'</span>);  <span class="comment">//找出id为dv下的全部子元素</span></span></span><br><span class="line"><span class="undefined">        */</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//后代选择器//</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#dv p'</span>).css(<span class="string">'background'</span>, <span class="string">'red'</span>);</span></span><br><span class="line"><span class="undefined">        /*</span></span><br><span class="line"><span class="undefined">        find()方法也可以获取指定元素的后代元素</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#dv p'</span>);  <span class="comment">//使用后代选择器获取</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#dv'</span>).find(<span class="string">'p'</span>);  <span class="comment">//使用find()方法获取</span></span></span><br><span class="line"><span class="undefined">        */</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//兄弟选择器//</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#dv + p'</span>).css(<span class="string">'background'</span>, <span class="string">'green'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//兄弟选择器//</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#dv ~ p'</span>).css(<span class="string">'background'</span>, <span class="string">'yellow'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        /*</span></span><br><span class="line"><span class="undefined">        拓展：</span></span><br><span class="line"><span class="undefined">        next()可获取指定元素紧邻的下一个兄弟元素</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).next(<span class="string">'p'</span>).css(<span class="string">'background'</span>, <span class="string">'green'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        nextAll()可获取指定元素后的所有兄弟元素</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).nextAll(<span class="string">'p'</span>).css(<span class="string">'background'</span>, <span class="string">'green'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        siblings()可获取指定元素的所有兄弟元素（前后都要）</span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div'</span>).siblings(<span class="string">'p'</span>).css(<span class="string">'background'</span>, <span class="string">'green'</span>);</span></span><br><span class="line"><span class="undefined">        */</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="过滤选择器"><a href="#过滤选择器" class="headerlink" title="过滤选择器"></a>过滤选择器</h2><p>为了快速筛选DOM元素，jQuery提供了一些过滤选择器，过滤选择器通常以“：”开头，”：“后面用于指定过滤规则。</p><p>以下介绍7种过滤选择器</p><h3 id="基本过滤选择器"><a href="#基本过滤选择器" class="headerlink" title="基本过滤选择器"></a>基本过滤选择器</h3><table><thead><tr><th>选择器</th><th>描述</th><th>返回值</th></tr></thead><tbody><tr><td>:first</td><td>获取第一个元素</td><td>单个元素</td></tr><tr><td>:last</td><td>获取最后一个元素</td><td>单个元素</td></tr><tr><td>:not(selector)</td><td>获取除给定选择器外的所有元素</td><td>元素集合</td></tr><tr><td>:even</td><td>获取所有索引值为偶数的元素，索引号从0开始</td><td>元素集合</td></tr><tr><td>:odd</td><td>获取所有索引值为奇数的元素，索引号从0开始</td><td>元素集合</td></tr><tr><td>:eq(index)</td><td>指定元素索引值元素</td><td>单个元素</td></tr><tr><td>:gt(index)</td><td>大于所给定值的元素</td><td>元素集合</td></tr><tr><td>:lt(index)</td><td>小于给定值的元素</td><td>元素集合</td></tr><tr><td>:header</td><td>获取所有标题类型的元素，如h1,h2,…</td><td>元素集合</td></tr><tr><td>:animated</td><td>获取正在执行动画效果的元素</td><td>元素集合</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">"width: 200px"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>第四行<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//索引值为偶数的li</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'li:even'</span>).css(<span class="string">'background'</span>, <span class="string">'pink'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//索引值为奇数的li</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'li:odd'</span>).css(<span class="string">'background'</span>, <span class="string">'red'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//索引值大于等于2的li (可以使用组合形式)</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'li:eq(2), li:gt(2)'</span>).css(<span class="string">'background'</span>, <span class="string">"green"</span>);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="可见性过滤选择器"><a href="#可见性过滤选择器" class="headerlink" title="可见性过滤选择器"></a>可见性过滤选择器</h3><p>在网页开发中，具有动态效果的页面往往有很多元素被隐藏。”:hidden”选择器可以获取css样式为”display: none”，以及属性” type=”hidden” “的文本隐藏域。</p><table><thead><tr><th>选择器</th><th>描述</th><th>返回值</th></tr></thead><tbody><tr><td>:visible</td><td>获取所有可见元素</td><td>元素集合</td></tr><tr><td>:hidden</td><td>获取所有不可见元素</td><td>元素集合</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"dis"</span>&gt;</span>显示文本1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"vis"</span>&gt;</span>显示文本2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"隐藏文本"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取所有课件元素，添加背景色</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">':visible'</span>).css(<span class="string">'background'</span>, <span class="string">'yellow'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(<span class="string">':visible'</span>));</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取显示的p元素，设置两种不同的隐藏方式</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//备注：":hidden"选择器无法获取CSS样式为"visibility: hidden"的隐藏元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#dis:visible'</span>).css(<span class="string">'display'</span>, <span class="string">'none'</span>);  <span class="comment">//空间释放</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#vis:visible'</span>).css(<span class="string">'visibility'</span>, <span class="string">'hidden'</span>);  <span class="comment">//空间不释放</span></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'隐藏的p元素：'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(<span class="string">'p:hidden'</span>));</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'隐藏的input元素：'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log($(<span class="string">'input:hidden'</span>));</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="内容过滤选择器"><a href="#内容过滤选择器" class="headerlink" title="内容过滤选择器"></a>内容过滤选择器</h3><p>元素的内容是指它所包含的子元素或文本内容</p><table><thead><tr><th>选择器</th><th>描述</th><th>返回值</th></tr></thead><tbody><tr><td>:contains(text)</td><td>获取包含给定文本的元素</td><td>元素集合</td></tr><tr><td>:empty</td><td>获取所有不包含子元素或者文本的空元素</td><td>元素集合</td></tr><tr><td>:has(selector)</td><td>获取含有选择器所匹配的元素</td><td>元素集合</td></tr><tr><td>:parent</td><td>获取含有子元素或文本的元素</td><td>元素集合</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>过滤选择器--内容过滤选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 30px;</span></span><br><span class="line"><span class="undefined">            margin: 5px;</span></span><br><span class="line"><span class="undefined">            border: 1px solid black;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是div元素的文本<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我也是div元素的文本<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是div内span元素的文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//查找含有“也”子的元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div:contains("也")'</span>).css(<span class="string">'background'</span>, <span class="string">'pink'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//查找含有span标签的元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div:has(span)'</span>).css(<span class="string">'background'</span>, <span class="string">'pink'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//查找为空的div元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div:empty'</span>).css(<span class="string">'background'</span>, <span class="string">'pink'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//内容不为空的元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'div:parent'</span>).css(<span class="string">'background'</span>, <span class="string">'green'</span>);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性过滤选择器"><a href="#属性过滤选择器" class="headerlink" title="属性过滤选择器"></a>属性过滤选择器</h3><table><thead><tr><th>选择器</th><th>描述</th><th>返回值</th></tr></thead><tbody><tr><td>[attribute]</td><td>获取包含给定属性的元素</td><td>元素集合</td></tr><tr><td>[attribute=value]</td><td>获取等于给定的属性是某个特定值的元素</td><td>元素集合</td></tr><tr><td>[attribute!=value]</td><td>获取不等于给定的属性是某个特定值的元素</td><td>元素集合</td></tr><tr><td>[attribute^=value]</td><td>获取给定的属性是以某些值开始的元素</td><td>元素集合</td></tr><tr><td>[attribute$=value]</td><td>获取给定的属性是以某些值结尾的元素</td><td>元素集合</td></tr><tr><td>[attribute*=value]</td><td>获取给定的属性是以包含某些值的元素</td><td>元素集合</td></tr><tr><td>[selector1][selector2][selectorN]</td><td>获取满足多个条件的复合属性的元素（并且关系）</td><td>元素集合</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>过滤选择器--属性过滤选择器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="undefined">            height: 50px;</span></span><br><span class="line"><span class="undefined">            border: 1px solid black;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dv"</span>&gt;</span>class=dv<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">title</span>=<span class="string">"标题"</span>&gt;</span>title=标题<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dv1"</span> <span class="attr">title</span>=<span class="string">"标题1"</span>&gt;</span>class=dv1 title=标题1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dv1"</span> <span class="attr">title</span>=<span class="string">"标题2"</span>&gt;</span>class=dv2 title=标题2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取所有（可以在[]前添加指定标签）class属性值以d开头的元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'[class^=d]'</span>).css(<span class="string">'background'</span>, <span class="string">'pink'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取所有class=dv1，title属性值含有2的元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'[class=dv1][title*=2]'</span>).css(<span class="string">'background'</span>, <span class="string">'green'</span>);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="子元素过滤选择器"><a href="#子元素过滤选择器" class="headerlink" title="子元素过滤选择器"></a>子元素过滤选择器</h3><table><thead><tr><th>选择器</th><th>描述</th><th>返回值</th></tr></thead><tbody><tr><td>:first-child</td><td>获取每个父元素下的第一个子元素</td><td>元素集合</td></tr><tr><td>:last-child</td><td>获取每个父元素下的最后一个子元素</td><td>元素集合</td></tr><tr><td>:only-child</td><td>获取每个仅有一个子元素的父元素下的子元素</td><td>元素集合</td></tr><tr><td>:nth-child(eq、even、odd、index)</td><td>获取每个元素下的特定元素，索引号从1开始</td><td>元素集合</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>重庆<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取父元素下仅含一个的子元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'li:only-child'</span>).css(<span class="string">'background'</span>, <span class="string">'pink'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取元素指定元素下的第一个元素</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'li:nth-child(1)'</span>).css(<span class="string">'background'</span>, <span class="string">'green'</span>);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表单过滤选择器"><a href="#表单过滤选择器" class="headerlink" title="表单过滤选择器"></a>表单过滤选择器</h3><table><thead><tr><th>选择器</th><th>描述</th><th>返回值</th></tr></thead><tbody><tr><td>:input</td><td>获取表单中所有input、textarea、select、button元素（表单控件）</td><td>元素集合</td></tr><tr><td>:text</td><td>获取表单中所有input[type=text]的元素（单行文本框）</td><td>元素集合</td></tr><tr><td>:password</td><td>获取表单中所有input[type=password]的元素（密码框）</td><td>元素集合</td></tr><tr><td>:radio</td><td>获取表单中所有input[type=radio]的元素（单选按钮）</td><td>元素集合</td></tr><tr><td>:checkbox</td><td>获取表单中所有input[type=checkbox]的元素（复选框）</td><td>元素集合</td></tr><tr><td>:submit</td><td>获取表单中所有input[type=submit]的元素（提交按钮）</td><td>元素集合</td></tr><tr><td>:image</td><td>获取表单中所有input[type=image]的元素（图像域）</td><td>元素集合</td></tr><tr><td>:reset</td><td>获取表单中所有input[type=reset]的元素（重置按钮）</td><td>元素集合</td></tr><tr><td>:button</td><td>获取表单中所有input[type=button]的元素（普通按钮）</td><td>元素集合</td></tr><tr><td>:file</td><td>获取表单中所有input[type=file]的元素（文件域）</td><td>元素集合</td></tr></tbody></table><p>注意：<br>①”:button”选择器的作用范围，包含使用input[type=button]和button元素定义的按钮<br>②”:image”选择器的作用范围，包含使用input[typeimage]定义的图像，但不包含img元素定义的图像</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"myForm"</span>&gt;</span></span><br><span class="line">        昵称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"text"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"password"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>男<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>女<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        爱好：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>游泳<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>旅游<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        照片1：<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./img/pro_down.png"</span> <span class="attr">width</span>=<span class="string">"100"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        照片2：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"./img/pro_down.png"</span> <span class="attr">width</span>=<span class="string">"150"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        说明：<span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>清空<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"保存"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//隐藏button定义的按钮</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//$('#myForm :button').hide();  //!!!!#myForm后面有空格，等价于#myForm *:button</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//隐藏input定义的图片</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">'#myForm :image'</span>).hide();  <span class="comment">//不包含img元素</span></span></span><br><span class="line"><span class="undefined">        </span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表单对象属性过滤选择器"><a href="#表单对象属性过滤选择器" class="headerlink" title="表单对象属性过滤选择器"></a>表单对象属性过滤选择器</h3><table><thead><tr><th>选择器</th><th>描述</th><th>返回值</th></tr></thead><tbody><tr><td>:enabled</td><td>获取表单中所有属性为可用的元素</td><td>元素集合</td></tr><tr><td>:disabled</td><td>获取表单中所有属性为不可用的元素</td><td>元素集合</td></tr><tr><td>:checked</td><td>获取表单中所有被选中的元素</td><td>元素集合</td></tr><tr><td>:selected</td><td>获取表单中所有被选中的option的元素</td><td>元素集合</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$('input:checked').hide();  //隐藏选中的元素</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;jQuery选择器简介&quot;&gt;&lt;a href=&quot;#jQuery选择器简介&quot; class=&quot;headerlink&quot; title=&quot;jQuery选择器简介&quot;&gt;&lt;/a&gt;jQuery选择器简介&lt;/h2&gt;&lt;p&gt;选择器的应用体现了jQuery的一个设计思想，即获取（选择）网页中的
      
    
    </summary>
    
    
      <category term="jQuery" scheme="http://github.com/hzebin/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Jquery学习笔记（一）</title>
    <link href="http://github.com/hzebin/2019/09/22/jQuery%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://github.com/hzebin/2019/09/22/jQuery学习笔记（一）/</id>
    <published>2019-09-22T03:42:00.000Z</published>
    <updated>2019-09-22T03:42:28.539Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是jQuery"><a href="#什么是jQuery" class="headerlink" title="什么是jQuery"></a>什么是jQuery</h2><p>jQuery是一款跨浏览器的开源JavaScript库，它的核心理念是write less,do more（写得更少，做的更多）。</p><p>jQuery 1.x版本兼容IE6/7/8，使用最为广泛，所以推荐使用1.x最新版本(官网地址：<a href="https://code.jquery.com/" target="_blank" rel="noopener">https://code.jquery.com/</a>)</p><h2 id="DOM对象与jQuery对象"><a href="#DOM对象与jQuery对象" class="headerlink" title="DOM对象与jQuery对象"></a>DOM对象与jQuery对象</h2><h3 id="什么是DOM对象"><a href="#什么是DOM对象" class="headerlink" title="什么是DOM对象"></a>什么是DOM对象</h3><p>在Javascript中，经常需要操作DOM。所谓DOM指的是文档对象模型。它提供了对文档结构化的描述，并将HTML页面与脚本、程序语言联系起来.</p><h3 id="什么是jQuery对象"><a href="#什么是jQuery对象" class="headerlink" title="什么是jQuery对象"></a>什么是jQuery对象</h3><p>$()是一个工厂函数，通过$(参数)的形式可以创建jQuery的实例对象，创建了jQuery对象之后，可以调用提供的方法。<br>备注：$(参数)等价于jQuery(参数)，若在项目中$被用于其他功能，则可使用jQuery进行操作。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jQuery对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  <span class="comment">&lt;!--引入本地jQuery--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello jQuery<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//创建div元素对象，保存为obj</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> obj = $(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//判断obj是否为jQuery对象</span></span></span><br><span class="line"><span class="actionscript">        alert(obj <span class="keyword">instanceof</span> jQuery);  <span class="comment">//输出结果为true</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//调用html()方法获取元素的内容</span></span></span><br><span class="line"><span class="actionscript">        alert(obj.html());  <span class="comment">//输出结果为Hello jQuery</span></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>拓展：<br>在使用jQuery时，不仅可以通过jQuery对象调用实例方法，还可以直接通过“$.方法名()”的形式调用静态方法。<br>静态方法“$.trim()”可以过滤字符串两端的空白字符</p><h3 id="jQuery对象转换成DOM对象"><a href="#jQuery对象转换成DOM对象" class="headerlink" title="jQuery对象转换成DOM对象"></a>jQuery对象转换成DOM对象</h3><p>jQuery对象属于类数组对象，其内部将DOM对象作为数组元素。jQuery对象转换成DOM对象有两种方式，index表示DOM对象在jQuery对象中的索引。<br>方式1：obj[index]</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>第一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>第二个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> divs = $(<span class="string">'div'</span>)  <span class="comment">//divs类数组</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> div1 = divs[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> div2 = divs[<span class="number">1</span>];</span></span><br><span class="line"><span class="undefined">    alert(div1.innerHTML);</span></span><br><span class="line"><span class="undefined">    alert(div2.innerHTML);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式2：obj.get(index)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>第一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> result = $(<span class="string">'div'</span>).get(<span class="number">0</span>).innerHTML;</span></span><br><span class="line"><span class="undefined">    alert(result);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="DOM对象转换成jQuery对象"><a href="#DOM对象转换成jQuery对象" class="headerlink" title="DOM对象转换成jQuery对象"></a>DOM对象转换成jQuery对象</h3><p>将DOM对象作为$()函数的参数，即可转换成jQuery对象</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"myBtn"</span>&gt;</span>Hello HuangZebin<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//获取DOM对象myBtn</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">'myBtn'</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//将DOM对象转为jQuery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> btn1 = $(btn);  <span class="comment">//这里不用单引号!</span></span></span><br><span class="line"><span class="actionscript">    alert(btn1[<span class="number">0</span>] === btn);  <span class="comment">//三等于号（值 类型 都相同）</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Chrome开发者工具讲解"><a href="#Chrome开发者工具讲解" class="headerlink" title="Chrome开发者工具讲解"></a>Chrome开发者工具讲解</h2><p>外链：<a href="https://blog.csdn.net/Huang2016SCJ/article/details/101017442" target="_blank" rel="noopener">https://blog.csdn.net/Huang2016SCJ/article/details/101017442</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;什么是jQuery&quot;&gt;&lt;a href=&quot;#什么是jQuery&quot; class=&quot;headerlink&quot; title=&quot;什么是jQuery&quot;&gt;&lt;/a&gt;什么是jQuery&lt;/h2&gt;&lt;p&gt;jQuery是一款跨浏览器的开源JavaScript库，它的核心理念是write l
      
    
    </summary>
    
    
      <category term="jQuery" scheme="http://github.com/hzebin/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>web学习之javascript</title>
    <link href="http://github.com/hzebin/2019/07/14/web%E5%AD%A6%E4%B9%A0%E4%B9%8Bjavascript/"/>
    <id>http://github.com/hzebin/2019/07/14/web学习之javascript/</id>
    <published>2019-07-14T09:49:00.000Z</published>
    <updated>2019-07-14T13:49:52.855Z</updated>
    
    <content type="html"><![CDATA[<p>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2b0ff59c3a088143.jpg" alt="20190714C01.jpg" title>                </div>                <div class="image-caption">20190714C01.jpg</div>            </figure><p>eg:外部引入js文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2b11a00e14f26287.jpg" alt="20190714C02.jpg" title>                </div>                <div class="image-caption">20190714C02.jpg</div>            </figure><p>我们可以将JavaScript代码放在html文件中任何位置:<br>放在<head><meta name="generator" content="Hexo 3.9.0">部分,浏览器解析head部分就会执行这个代码，然后才解析页面的其余部分。<br>放在</head><body>部分,JavaScript代码在网页读取到该语句的时候就会执行。</body></p><p>注意: javascript作为一种脚本语言可以放在html页面中任何位置，但是浏览器解释html时是按先后顺序的，所以前面的script就先被执行。比如进行页面显示初始化的js必须放在head里面，因为初始化都要求提前进行（如给页面body设置css等）；而如果是通过事件调用执行的function那么对位置没什么要求的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2b12513d4a856092.jpg" alt="20190714C03.jpg" title>                </div>                <div class="image-caption">20190714C03.jpg</div>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">javascript注释</span><br><span class="line"></span><br><span class="line">//单行注释</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">asasd</span><br><span class="line">多行注释</span><br><span class="line">asdasd</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><p>定义变量使用关键字var,语法如下：<br>var 变量名</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">变量名可以任意取名，但要遵循命名规则:</span><br><span class="line">    1.变量必须使用字母、下划线(_)或者美元符($)开始。</span><br><span class="line">    2.然后可以使用任意多个英文字母、数字、下划线(_)或者美元符($)组成。</span><br><span class="line">    3.不能使用JavaScript关键词与JavaScript保留字。</span><br><span class="line"></span><br><span class="line">变量要先声明再赋值，如下：</span><br><span class="line">var mychar;</span><br><span class="line">mychar="javascript";</span><br><span class="line">var mynum = 6;</span><br><span class="line"></span><br><span class="line">变量可以重复赋值，如下：</span><br><span class="line">var mychar;</span><br><span class="line">mychar="javascript";</span><br><span class="line">mychar="hello";</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">1. 在JS中区分大小写，如变量mychar与myChar是不一样的，表示是两个变量。</span><br><span class="line">2. 变量虽然也可以不声明，直接使用，但不规范，需要先声明，后使用。</span><br></pre></td></tr></table></figure><p>JavaScript-判断语句（if…else）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">语法:</span><br><span class="line">if(条件)</span><br><span class="line">&#123; 条件成立时执行的代码 &#125;</span><br><span class="line">else</span><br><span class="line">&#123; 条件不成立时执行的代码 &#125;</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">   <span class="keyword">var</span> myage = <span class="number">18</span>;</span></span><br><span class="line"><span class="actionscript">   <span class="keyword">if</span>(myage&gt;=<span class="number">18</span>)  <span class="comment">//myage&gt;=18是判断条件</span></span></span><br><span class="line"><span class="javascript">   &#123; <span class="built_in">document</span>.write(<span class="string">"你是成年人。"</span>);&#125;</span></span><br><span class="line"><span class="actionscript">   <span class="keyword">else</span>  <span class="comment">//否则年龄小于18</span></span></span><br><span class="line"><span class="javascript">   &#123; <span class="built_in">document</span>.write(<span class="string">"未满18岁，你不是成年人。"</span>);&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>javascript函数定义：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">基本语法如下:</span><br><span class="line">function 函数名()</span><br><span class="line">&#123;</span><br><span class="line">     函数代码;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2b1f2186ff184575.jpg" alt="20190714C04.jpg" title>                </div>                <div class="image-caption">20190714C04.jpg</div>            </figure><p>JavaScript-输出内容（document.write）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">document.write() 可用于直接向 HTML 输出流写内容。简单的说就是直接在网页中输出内容。</span><br><span class="line"></span><br><span class="line">第一种:输出内容用""括起，直接输出""号内的内容。</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.write(<span class="string">"I love JavaScript！"</span>); <span class="comment">//内容用""括起来，""里的内容直接输出。</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">第二种:通过变量，输出内容</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> mystr=<span class="string">"hello world!"</span>;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.write(mystr);  <span class="comment">//直接写变量名，输出变量存储的内容。</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">第三种:输出多项内容，内容之间用+号连接。</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> mystr=<span class="string">"hello"</span>;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.write(mystr+<span class="string">"I love JavaScript"</span>); <span class="comment">//多项内容之间用+号连接</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">第四种:输出HTML标签，并起作用，标签使用""括起来。</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> mystr=<span class="string">"hello"</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(mystr+<span class="string">"&lt;br&gt;"</span>);<span class="comment">//输出hello后，输出一个换行符</span></span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.write(<span class="string">"JavaScript"</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>关于空格的eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2b20b45cbf023010.jpg" alt="20190714C05.jpg" title>                </div>                <div class="image-caption">20190714C05.jpg</div>            </figure><p>JavaScript-警告（alert 消息对话框）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">我们在访问网站的时候，有时会突然弹出一个小窗口，上面写着一段提示信息文字。如果你不点击“确定”，就不能对网页做任何操作，这个小窗口就是使用alert实现的。</span><br><span class="line"></span><br><span class="line">语法: </span><br><span class="line">alert(字符串或变量);  </span><br><span class="line"></span><br><span class="line">看下面的代码:</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">   <span class="keyword">var</span> mynum = <span class="number">30</span>;</span></span><br><span class="line"><span class="actionscript">   alert(<span class="string">"hello!"</span>);</span></span><br><span class="line"><span class="undefined">   alert(mynum);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JavaScript-确认（confirm 消息对话框）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">confirm 消息对话框通常用于允许用户做选择的动作，如：“你对吗？”等。弹出对话框(包括一个确定按钮和一个取消按钮)。</span><br><span class="line"></span><br><span class="line">语法:</span><br><span class="line">confirm(str);</span><br><span class="line"></span><br><span class="line">参数说明:</span><br><span class="line">str：在消息对话框中要显示的文本</span><br><span class="line">返回值: Boolean值</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">当用户点击"确定"按钮时，返回true</span><br><span class="line">当用户点击"取消"按钮时，返回false</span><br><span class="line"></span><br><span class="line">注: 通过返回值可以判断用户点击了什么按钮</span><br><span class="line"></span><br><span class="line">看下面的代码:</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> mymessage=confirm(<span class="string">"你喜欢JavaScript吗?"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span>(mymessage==<span class="literal">true</span>)</span></span><br><span class="line"><span class="javascript">    &#123;   <span class="built_in">document</span>.write(<span class="string">"很好,加油!"</span>);   &#125;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">else</span></span></span><br><span class="line"><span class="javascript">    &#123;  <span class="built_in">document</span>.write(<span class="string">"JS功能强大，要学习噢!"</span>);   &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JavaScript-提问（prompt 消息对话框）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">prompt弹出消息对话框,通常用于询问一些需要与用户交互的信息。弹出消息对话框（包含一个确定按钮、取消按钮与一个文本输入框）。</span><br><span class="line"></span><br><span class="line">语法:</span><br><span class="line">prompt(str1, str2);</span><br><span class="line"></span><br><span class="line">参数说明：</span><br><span class="line">str1: 要显示在消息对话框中的文本，不可修改</span><br><span class="line">str2：文本框中的内容，可以修改</span><br><span class="line"></span><br><span class="line">返回值:</span><br><span class="line">1. 点击确定按钮，文本框中的内容将作为函数返回值</span><br><span class="line">2. 点击取消按钮，将返回null</span><br><span class="line"></span><br><span class="line">看看下面代码:</span><br><span class="line">var myname=prompt("请输入你的姓名:");</span><br><span class="line">if(myname!=null)</span><br><span class="line">  &#123;   alert("你好"+myname); &#125;</span><br><span class="line">else</span><br><span class="line">  &#123;  alert("你好 my friend.");  &#125;</span><br></pre></td></tr></table></figure><p>JavaScript-打开新窗口（window.open）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">open() 方法可以查找一个已经存在或者新建的浏览器窗口。</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line">window.open([URL], [窗口名称], [参数字符串])</span><br><span class="line"></span><br><span class="line">参数说明:</span><br><span class="line">URL：可选参数，在窗口中要显示网页的网址或路径。如果省略这个参数，或者它的值是空字符串，那么窗口就不显示任何文档。</span><br><span class="line">窗口名称：可选参数，被打开窗口的名称。</span><br><span class="line">    1.该名称由字母、数字和下划线字符组成。</span><br><span class="line">    2."_top"、"_blank"、"_self"具有特殊意义的名称。</span><br><span class="line">       _blank：在新窗口显示目标网页</span><br><span class="line">       _self：在当前窗口显示目标网页</span><br><span class="line">       _top：框架网页中在上部窗口中显示目标网页</span><br><span class="line">    3.相同 name 的窗口只能创建一个，要想创建多个窗口则 name 不能相同。</span><br><span class="line">    4.name 不能包含有空格。</span><br><span class="line">参数字符串：可选参数，设置窗口参数，各参数用逗号隔开。</span><br><span class="line"></span><br><span class="line">例如:打开http://www.imooc.com网站，大小为300px * 200px，无菜单，无工具栏，无状态栏，有滚动条窗口：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"> <span class="built_in">window</span>.open(<span class="string">'http://www.imooc.com'</span>,<span class="string">'_blank'</span>,<span class="string">'width=300,height=200,menubar=no,toolbar=no, status=no,scrollbars=yes'</span>)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">注意：运行结果考虑浏览器兼容问题。</span><br></pre></td></tr></table></figure><p>参数表：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2b30fa2576099246.jpg" alt="20190714C06.jpg" title>                </div>                <div class="image-caption">20190714C06.jpg</div>            </figure><p>JavaScript-关闭窗口（window.close）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">close()关闭窗口</span><br><span class="line"></span><br><span class="line">用法：</span><br><span class="line">window.close();   //关闭本窗口</span><br><span class="line">或</span><br><span class="line"><span class="tag">&lt;<span class="name">窗口对象</span>&gt;</span>.close();   //关闭指定的窗口</span><br><span class="line"></span><br><span class="line">例如:关闭新建的窗口。</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> mywin=<span class="built_in">window</span>.open(<span class="string">'http://www.imooc.com'</span>); <span class="comment">//将新打的窗口对象，存储在变量mywin中</span></span></span><br><span class="line"><span class="undefined">   mywin.close();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">注意:上面代码在打开新窗口的同时，关闭该窗口，看不到被打开的窗口。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;eg:&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
        
      
    
    </summary>
    
    
      <category term="web前端" scheme="http://github.com/hzebin/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>web学习之css</title>
    <link href="http://github.com/hzebin/2019/07/14/web%E5%AD%A6%E4%B9%A0%E4%B9%8Bcss/"/>
    <id>http://github.com/hzebin/2019/07/14/web学习之css/</id>
    <published>2019-07-14T08:34:00.000Z</published>
    <updated>2019-07-14T12:48:43.550Z</updated>
    
    <content type="html"><![CDATA[<p>CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字体加粗等。</p><p>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2ae9e34686024048.jpg" alt="20190714B01.jpg" title>                </div>                <div class="image-caption">20190714B01.jpg</div>            </figure><p>css代码格式：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2aebb2daf0f98933.jpg" alt="20190714B02.jpg" title>                </div>                <div class="image-caption">20190714B02.jpg</div>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">多条声明需要用分号分隔</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">p&#123;</span></span><br><span class="line"><span class="css">   <span class="selector-tag">font-size</span><span class="selector-pseudo">:12px</span>;  <span class="comment">/*css的注释语句这样写*/</span></span></span><br><span class="line"><span class="css">   <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span></span><br></pre></td></tr></table></figure><p>css样式有三种形式：内联式、嵌入式和外部式<br>①内联式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red;font-size:12px"</span>&gt;</span>这里文字是红色，大小为12px<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>②嵌入式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>嵌入式css样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">span</span>&#123;  <span class="comment">/*选择器*/</span></span></span><br><span class="line"><span class="css">   <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;  <span class="comment">/*样式*/</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>③外部式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">连接style.css，样式写在了该文件中</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>嵌入式css样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"style.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>三种样式的优先级：内联式 &gt; 嵌入式 &gt; 外部式<br>但是嵌入式&gt;外部式有一个前提：嵌入式css样式的位置一定在外部式的后面。如右代码编辑器就是这样，&lt;link href=”style.css” …&gt;代码在<style type="text/css">…</style>代码的前面（实际开发中也是这么写的）。感兴趣的小伙伴可以试一下，把它们调换顺序，再看他们的优先级是否变化。<br>【其实总结来说，就是–就近原则（离被设置元素越近优先级别越高）】</p><hr>类选择器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">.类选器名称&#123;css样式代码;&#125;</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">1、英文圆点开头</span><br><span class="line">2、其中类选器名称可以任意起名（但不要起中文噢）</span><br><span class="line"></span><br><span class="line">使用方法：</span><br><span class="line">第一步：使用合适的标签把要修饰的内容标记起来，如下：</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">第二步：使用class="类选择器名称"为标签设置一个类，如下：</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"stress"</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">第三步：设置类选器css样式，如下：</span><br><span class="line">.stress&#123;color:red;&#125;/*类前面要加入一个英文圆点*/</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2af8c25810b96227.jpg" alt="20190714B03.jpg" title>                </div>                <div class="image-caption">20190714B03.jpg</div>            </figure><p>ID选择器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在很多方面，ID选择器都类似于类选择符，但也有一些重要的区别：</span><br><span class="line"></span><br><span class="line">1、为标签设置id="ID名称"，而不是class="类名称"。</span><br><span class="line">2、ID选择符的前面是井号（#）号，而不是英文圆点（.）</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2af9c2b452d16047.jpg" alt="20190714B04.jpg" title>                </div>                <div class="image-caption">20190714B04.jpg</div>            </figure><p>imooc 8-5  –&gt;go</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字体加粗等。&lt;/p&gt;
&lt;p&gt;eg:&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
            
      
    
    </summary>
    
    
      <category term="web前端" scheme="http://github.com/hzebin/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>web学习之html</title>
    <link href="http://github.com/hzebin/2019/07/14/web%E5%AD%A6%E4%B9%A0%E4%B9%8Bhtml/"/>
    <id>http://github.com/hzebin/2019/07/14/web学习之html/</id>
    <published>2019-07-14T08:15:00.000Z</published>
    <updated>2019-07-14T08:15:53.413Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>HTML是网页内容的载体。内容就是网页制作者放在页面上想要让用户浏览的信息，可以包含文字、图片、视频等。</p></li><li><p>CSS样式是表现。就像网页的外衣。比如，标题字体、颜色变化，或为标题加入背景图片、边框等。所有这些用来改变内容外观的东西称之为表现。</p></li><li><p>JavaScript是用来实现网页上的特效效果。如：鼠标滑过弹出下拉菜单。或鼠标滑过表格的背景颜色改变。还有焦点新闻（新闻图片）的轮换。可以这么理解，有动画的，有交互的一般都是用JavaScript来实现的。</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  <span class="comment">&lt;!--根标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>  <span class="comment">&lt;!--文档头部标签--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Html和CSS的关系<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        h1&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span><span class="selector-pseudo">:12px</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#930</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="xml">        &#125;  <span class="comment">&lt;!--css样式--&gt;</span></span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span>  <span class="comment">&lt;!--网页显示的主要内容--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">标签可以大写或小写，但建议为小写</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  标题标签</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span>  段落标签  [默认样式：段前段后都会有空白]</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"1.jpg"</span>&gt;</span>  图片img引用标签</span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span>  斜字体，强调关键字</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span>  粗字体</span><br><span class="line"><span class="tag">&lt;<span class="name">p1</span>&gt;</span><span class="tag">&lt;/<span class="name">p2</span>&gt;</span> ... <span class="tag">&lt;<span class="name">p6</span>&gt;</span><span class="tag">&lt;/<span class="name">p6</span>&gt;</span>  文章标题  [默认样式：加粗 1到6字体从大到小]</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span>  为文字设置单独的样式</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span>  换行</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span>  水平横线  [默认样式：加粗黑色]</span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>联系地址信息<span class="tag">&lt;/<span class="name">address</span>&gt;</span>  地址信息标签  [默认样式：斜体 ;可以定义一个地址，如电子邮件地址、签名、文档的作者身份]</span><br><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span>代码语言<span class="tag">&lt;<span class="name">code</span>&gt;</span>  单行代码</span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>代码语言<span class="tag">&lt;/<span class="name">pre</span>&gt;</span>  多行代码  [代码会保留空格和换行符]</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  可以把一些独立的逻辑部分划分出来，相当于一个容器</span><br><span class="line">&amp;nbsp;  空格</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>标签的作用:</span><br><span class="line">文档的头部描述了文档的各种属性和信息，包括文档的标题等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。</span><br><span class="line"></span><br><span class="line">下面这些标签可用在 head 部分:</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>...<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  <span class="comment">&lt;!--网页的标题信息--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined">...</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">...</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>标签</span><br></pre></td></tr></table></figure><p>为文字设置单独的样式<br>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2a876a61d0998070.jpg" alt="20190714A01.jpg" title>                </div>                <div class="image-caption">20190714A01.jpg</div>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">q</span>&gt;</span>引用文本<span class="tag">&lt;/<span class="name">q</span>&gt;</span>标签</span><br><span class="line">短文本引用，引用别人的话，自动为文本两边加上双引号</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2a8b71984aa62990.jpg" alt="20190714A02.jpg" title>                </div>                <div class="image-caption">20190714A02.jpg</div>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>文本引用<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span>标签</span><br><span class="line">对长文本进行引用，引用的文本整段会缩进</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2a8c545686a39780.jpg" alt="20190714A03.jpg" title>                </div>                <div class="image-caption">20190714A03.jpg</div>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ul-li标签</span><br><span class="line">列表显示标签，没有前后顺序,默认样式每项li前都会自带一个圆点</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2a916d35bcd54149.jpg" alt="20190714A04.jpg" title>                </div>                <div class="image-caption">20190714A04.jpg</div>            </figure><p>ol-li标签<br>列表显示标签，有前后顺序，默认样式每项前有序号，序号从1开始<br>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2a92a62374651607.jpg" alt="20190714A05.jpg" title>                </div>                <div class="image-caption">20190714A05.jpg</div>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  标签</span><br><span class="line">可以为一个逻辑部分设置一个名称，唯一标识</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"板块名称"</span>&gt;</span>..<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span>标签</span><br><span class="line">创建表格的元素有table、tbody、tr(行)、th（表格表头，默认粗体居中）、td(单元格)</span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span>…<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span>：如果不加<span class="tag">&lt;<span class="name">thead</span>&gt;</span><span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tfooter</span>&gt;</span> , table表格加载完后才显示。加上这些表格结构， tbody包含行的内容下载完优先显示，不必等待表格结束后在显示，同时如果表格很长，用tbody分段，可以一部分一部分地显示。（通俗理解table 可以按结构一块块的显示，不在等整个表格加载完后显示。）</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">summary</span>=<span class="string">"表格简介文本"</span>&gt;</span>  给表格添加摘要</span><br><span class="line">摘要的内容是不会在浏览器中显示出来的。它的作用是增加表格的可读性(语义化)，使搜索引擎更好的读懂表格内容，还可以使屏幕阅读器更好的帮助特殊用户读取表格内容。</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span>标题文本<span class="tag">&lt;/<span class="name">caption</span>&gt;</span>  给表格添加标题</span><br><span class="line">用以描述表格内容，标题的显示位置：表格上方。</span><br></pre></td></tr></table></figure><p>eg:为表格加入边框</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2a98885381384974.jpg" alt="20190714A06.jpg" title>                </div>                <div class="image-caption">20190714A06.jpg</div>            </figure><p>eg:为表格添加摘要和标题</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2ad5887280a79762.jpg" alt="20190714A07.jpg" title>                </div>                <div class="image-caption">20190714A07.jpg</div>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>标签链接到另一个页面</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"目标网址"</span> <span class="attr">title</span>=<span class="string">"鼠标滑过显示的文本"</span>&gt;</span>链接显示的文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">只要为文本加入a标签后，文字的颜色就会自动变为蓝色（被点击过的文本颜色为紫色）</span><br><span class="line"></span><br><span class="line">设置在新的浏览器窗口中打开</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"目标网址"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>click here!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>标签可以利用mailto链接邮件地址</span><br></pre></td></tr></table></figure><p>mailto参数详解：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2ad95d506f087328.jpg" alt="20190714A08.jpg" title>                </div>                <div class="image-caption">20190714A08.jpg</div>            </figure><p>eg:如果mailto后面同时有多个参数的话，第一个参数必须以“?”开头，后面的参数每一个都以“&amp;”分隔。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2ad9a48eec872166.jpg" alt="20190714A09.jpg" title>                </div>                <div class="image-caption">20190714A09.jpg</div>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span>&gt;</span>  插入图片的标签</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图片地址"</span> <span class="attr">alt</span>=<span class="string">"下载失败时的替换文本"</span> <span class="attr">title</span> = <span class="string">"提示文本"</span>&gt;</span></span><br><span class="line">1、title：提供在图像可见时对图像的描述(鼠标滑过图片时显示的文本)；</span><br><span class="line">2、图像可以是GIF，PNG，JPEG格式的图像文件。</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span>  表单标签，与用户交互</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"传送方式"</span> <span class="attr">action</span>=<span class="string">"服务器文件"</span>&gt;</span></span><br><span class="line">action ：浏览者输入的数据被传送到的地方,比如一个PHP页面(save.php)</span><br><span class="line"></span><br><span class="line">文本输入框、密码输入框</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text/password"</span> <span class="attr">name</span>=<span class="string">"名称"</span> <span class="attr">value</span>=<span class="string">"文本"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">1、type：</span><br><span class="line">   当type="text"时，输入框为文本输入框</span><br><span class="line">   当type="password"时, 输入框为密码输入框</span><br><span class="line">   当type="submit"时, 确定按钮</span><br><span class="line">   当type="reset"时, 重置按钮</span><br><span class="line">2、name：为文本框命名，以备后台程序ASP 、PHP使用。</span><br><span class="line">3、value：为文本输入框设置默认值。(一般起到提示作用)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textaarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span>  文本域，支持多行文本输入</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span>  <span class="attr">rows</span>=<span class="string">"行数"</span> <span class="attr">cols</span>=<span class="string">"列数"</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">1、<span class="tag">&lt;<span class="name">textarea</span>&gt;</span>标签是成对出现的，以<span class="tag">&lt;<span class="name">textarea</span>&gt;</span>开始，以<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span>结束。</span><br><span class="line">2、cols ：多行输入域的列数。</span><br><span class="line">3、rows ：多行输入域的行数。</span><br><span class="line">4、在<span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span>标签之间可以输入默认值。</span><br><span class="line"></span><br><span class="line">eg:</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>  <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"save.php"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">"50"</span> <span class="attr">rows</span>=<span class="string">"10"</span> &gt;</span>在这里输入内容...<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">使用单选框、复选框，让用户选择</span><br><span class="line">语法：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio/checkbox"</span> <span class="attr">value</span>=<span class="string">"值"</span> <span class="attr">name</span>=<span class="string">"名称"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>/&gt;</span></span><br><span class="line">1、type:</span><br><span class="line">   当 type="radio" 时，控件为单选框</span><br><span class="line">   当 type="checkbox" 时，控件为复选框</span><br><span class="line">2、value：提交数据到服务器的值（后台程序PHP使用）</span><br><span class="line">3、name：为控件命名，以备后台程序 ASP、PHP 使用</span><br><span class="line">4、checked：当设置 checked="checked" 时，该选项被默认选中</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2adea64924242570.jpg" alt="20190714A10.jpg" title>                </div>                <div class="image-caption">20190714A10.jpg</div>            </figure><p>下拉框列表eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2ae00b1acc299405.jpg" alt="20190714A11.jpg" title>                </div>                <div class="image-caption">20190714A11.jpg</div>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用下拉列表框进行多选</span><br><span class="line">下拉列表也可以进行多选操作，在<span class="tag">&lt;<span class="name">select</span>&gt;</span>标签中设置multiple="multiple"属性，就可以实现多选功能，在 windows 操作系统下，进行多选时按下Ctrl键同时进行单击（在 Mac下使用 Command +单击），可以选择多个选项。</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2ae0d19f42151336.jpg" alt="20190714A12.jpg" title>                </div>                <div class="image-caption">20190714A12.jpg</div>            </figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">form表单中的label标签</span><br><span class="line">label标签不会向用户呈现任何特殊效果，它的作用是为鼠标用户改进了可用性。</span><br><span class="line">如果你在 label 标签内点击文本，就会触发此控件。就是说，当用户单击选中该label标签时，浏览器就会自动将焦点转到和标签相关的表单控件上（就自动选中和该label标签相关连的表单控件上）。</span><br><span class="line"></span><br><span class="line">语法：</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"控件id名称"</span>&gt;</span></span><br><span class="line">注意：标签的 for 属性中的值应当与相关控件的 id 属性值一定要相同。</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/07/14/5d2ae2980c9d772702.jpg" alt="20190714A13.jpg" title>                </div>                <div class="image-caption">20190714A13.jpg</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;HTML是网页内容的载体。内容就是网页制作者放在页面上想要让用户浏览的信息，可以包含文字、图片、视频等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CSS样式是表现。就像网页的外衣。比如，标题字体、颜色变化，或为标题加入背景图片、边框等。所有这些用来改变内容外观的
      
    
    </summary>
    
    
      <category term="web前端" scheme="http://github.com/hzebin/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>软件设计师之程序语言基础知识</title>
    <link href="http://github.com/hzebin/2019/03/16/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88%E4%B9%8B%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>http://github.com/hzebin/2019/03/16/软件设计师之程序语言基础知识/</id>
    <published>2019-03-16T12:46:28.000Z</published>
    <updated>2019-03-16T14:36:02.553Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="低级语言和高级语言"><a href="#低级语言和高级语言" class="headerlink" title="低级语言和高级语言"></a>低级语言和高级语言</h3><p>(1)低级语言<br>机器语言和汇编语言称为低级语言。<br>&emsp;&emsp;机器语言指0、1组成的机器指令序列<br>&emsp;&emsp;汇编语言指用符号表示指令的语言<br>&emsp;&emsp;MOV AX,2<br>&emsp;&emsp;MOV BX,3<br>&emsp;&emsp;ADD AX,BX</p><p>(2)高级语言<br>&emsp;&emsp;高级语言是从人类的逻辑思维角度出发、面向各类应用的程序语言，抽象程度大大提高，需要编译成特定机器上的目标代码才能执行。这类语言与人们使用的自然语言比较接近，大大提高了  程序设计的效率。</p><h3 id="编译程序和解释程序"><a href="#编译程序和解释程序" class="headerlink" title="编译程序和解释程序"></a>编译程序和解释程序</h3><p>&emsp;&emsp;高级语言或汇编语言编写的程序称为源程序，源程序不能直接  在计算机上执行。<br>&emsp;&emsp;如果源程序是汇编语言编写的，则需要一个称为汇编程序  的翻译程序将其翻译成目标程序，然后才能执行。<br>&emsp;&emsp;如果源程序是为高级语言时，这个翻译程序称为编译程序<br>&emsp;&emsp;按源程序中语句的执行顺序，逐条翻译并立即执行相关功  能的处理程序、称为解释程序。</p><p>程序的执行方式：<br>1、编译执行：按编译方式在计算机上执行用高级语言编写的  程序，需经过两个阶段：<br>编译阶段，把源程序翻译为目标程序； 运行阶段，真正执行此目标程序。<br>&emsp;&emsp;优点：执行效率高、占用资源小。<br>&emsp;&emsp;缺点：兼容性差。<br>2、解释执行：源程序的每个语句一经解释就立即执行。<br>&emsp;&emsp;优点：可移植性较好、开发速度较快、与用户通信方便。<br>&emsp;&emsp;缺点：效率低。<br><img src alt="图20190316-1-A"></p><h2 id="编译系统基本原理"><a href="#编译系统基本原理" class="headerlink" title="编译系统基本原理"></a>编译系统基本原理</h2><p>编译程序的工作过程可以分为6个阶段：词法分析、语法分析、语义分析、中间代码生成、代码优化、目标代码生成。</p><p>①词法分析阶段<br>输入源程序，对构成源程序的字符串进行扫描和分解，识别  出一个个的单词，删掉无用信息，报告分析时的错误。<br>一个程序语言的基本语法符号分为五类：关键字、标识符、  常量、运算符、界符等<br>词法分析器所输出单词符号常常表示成如下的二元式：<br>(单词种别，单词符号的属性值)<br>描述词法规则通常用：正规式和有限自动机</p><p>2、状态转换图<br>状态转换图是状态有限的有向图，用圆圈表示结点状态，结  点之间有向边代表状态转换，有向边上可标记字符，表示前  一状态接受某一个字符之后的状态转移。<br>&emsp;&emsp;下图表示在状态i下的状态转换：<br>&emsp;&emsp;若输入字符为x，则读入x并转换到状态j<br>&emsp;&emsp;若输入字符为y，则读入y并转换到状态k<br><img src alt="图20190316-1-B"></p><p>状态转换图的功能<br>&emsp;&emsp;用于识别一定字符串<br>状态转换图的要求<br>&emsp;&emsp;状态（即结点）个数有限<br>&emsp;&emsp;至少一个初始状态，若干终止状态<br>&emsp;&emsp;每条边上标有字符（也可以是空字符）</p><p>状态转换图的表示习惯<br>&emsp;&emsp;初始状态用”○”表示<br>&emsp;&emsp;非终止状态用”○”表示<br>&emsp;&emsp;状态之间的跳转用含有字符的有向边表示<br>&emsp;&emsp;终止状态用”◎”表示<br>&emsp;&emsp;多读进一个字符用”*”表示</p><p>3、正规表达式与正规集（定义和运算）<br>状态转换图可以构造词法分析程序，但属于非形式化描述 正规表达式（简称正规式）是词法分析的形式化表示方法。  所谓形式化的方法，是指用一整套带有严格规定的符号体系  来描述问题的方法。<br>&emsp;&emsp;优点：更加清晰和准确</p><p>正规式与正规集的递归定义：<br>1、ε和Φ都是字母表∑上的正规式，它们所表示的正规集分别为{ε}和Φ；<br>2、任何a∈∑，a是∑上的一个正规式，它所表示的正规集为{a}；<br>3、<br><img src alt="图20190316-1-C"><br>仅由有限次使用上述三步骤而得到的表达式才是∑上的正规式。仅由这  些正规式所表示的子集才是∑上的正规集。</p><p>正规式定义中<br>“|”读为“或<br>“·”读为“连接”<br>“*”读为”闭包”（即，任意有限次的自重复连接）</p><p><img src alt="图20190316-1-D"></p><h2 id="程序语言的控制结构"><a href="#程序语言的控制结构" class="headerlink" title="程序语言的控制结构"></a>程序语言的控制结构</h2><p>–unfinish</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h2&gt;&lt;h3 id=&quot;低级语言和高级语言&quot;&gt;&lt;a href=&quot;#低级语言和高级语言&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="软件设计师" scheme="http://github.com/hzebin/tags/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%B8%88/"/>
    
      <category term="程序语言基础知识" scheme="http://github.com/hzebin/tags/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>在MyEclipse开发JSP的初学小知识</title>
    <link href="http://github.com/hzebin/2019/02/25/%E5%9C%A8MyEclipse%E5%BC%80%E5%8F%91JSP%E7%9A%84%E5%88%9D%E5%AD%A6%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    <id>http://github.com/hzebin/2019/02/25/在MyEclipse开发JSP的初学小知识/</id>
    <published>2019-02-25T12:31:04.000Z</published>
    <updated>2019-02-25T14:46:59.477Z</updated>
    
    <content type="html"><![CDATA[<h2 id="外挂Tomcat服务器"><a href="#外挂Tomcat服务器" class="headerlink" title="外挂Tomcat服务器"></a>外挂Tomcat服务器</h2><p>如果没有MyEclipse编译器，如何浏览JSP项目呢？通过Tomcat软件就可以浏览MyEclipse导出的.war项目</p><h3 id="从MyEclipse导出项目"><a href="#从MyEclipse导出项目" class="headerlink" title="从MyEclipse导出项目"></a>从MyEclipse导出项目</h3><p>右击项目 -&gt; Export -&gt; WAR file</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fe9081e32.jpg" alt="20180225_2_A" title>                </div>                <div class="image-caption">20180225_2_A</div>            </figure><h3 id="Tomcat服务器"><a href="#Tomcat服务器" class="headerlink" title="Tomcat服务器"></a>Tomcat服务器</h3><p>将Tomcat下载到D:\apache-tomcat-9.0.14 ， 则该目录为Tomcat的安装路径</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fe9e47489.jpg" alt="20180225_2_B" title>                </div>                <div class="image-caption">20180225_2_B</div>            </figure><p>conf下的server.xml文件可以配置Tomcat的端口号</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73feab37a40.jpg" alt="20180225_2_C" title>                </div>                <div class="image-caption">20180225_2_C</div>            </figure><p>双击startup.bat可以启动Tomcat服务器</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73feb7adcbd.jpg" alt="20180225_2_D" title>                </div>                <div class="image-caption">20180225_2_D</div>            </figure><p>webapps文件夹内存放的是项目的地方，将导出的homework.war文件粘贴的这个位置，则就是讲这个JSP项目部署到Tomcat服务器中了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fec471894.jpg" alt="20180225_2_E" title>                </div>                <div class="image-caption">20180225_2_E</div>            </figure><p>打开浏览器输入正确的端口号和项目路径，可以浏览到项目的内容</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fed02c4fd.jpg" alt="20180225_2_F" title>                </div>                <div class="image-caption">20180225_2_F</div>            </figure><p>双击shutdown.bat可以关闭Tomcat服务器</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fedda7fc3.jpg" alt="20180225_2_G" title>                </div>                <div class="image-caption">20180225_2_G</div>            </figure><p>服务器上编译的文件存放在这个位置</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fee8bf5ee.jpg" alt="20180225_2_H" title>                </div>                <div class="image-caption">20180225_2_H</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;外挂Tomcat服务器&quot;&gt;&lt;a href=&quot;#外挂Tomcat服务器&quot; class=&quot;headerlink&quot; title=&quot;外挂Tomcat服务器&quot;&gt;&lt;/a&gt;外挂Tomcat服务器&lt;/h2&gt;&lt;p&gt;如果没有MyEclipse编译器，如何浏览JSP项目呢？通过Tomc
      
    
    </summary>
    
    
      <category term="MyEclipse" scheme="http://github.com/hzebin/tags/MyEclipse/"/>
    
      <category term="JSP Web" scheme="http://github.com/hzebin/tags/JSP-Web/"/>
    
  </entry>
  
  <entry>
    <title>初学在MyEclipse下开发JSP页面</title>
    <link href="http://github.com/hzebin/2019/02/25/%E5%88%9D%E5%AD%A6%E5%9C%A8MyEclipse%E4%B8%8B%E5%BC%80%E5%8F%91JSP%E9%A1%B5%E9%9D%A2/"/>
    <id>http://github.com/hzebin/2019/02/25/初学在MyEclipse下开发JSP页面/</id>
    <published>2019-02-25T11:35:56.000Z</published>
    <updated>2019-02-25T14:47:04.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新建JSP-Web项目"><a href="#新建JSP-Web项目" class="headerlink" title="新建JSP Web项目"></a>新建JSP Web项目</h2><p>依次操作：File -&gt; New -&gt; Web Projects</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73f95985eab.jpg" alt="20190225A" title>                </div>                <div class="image-caption">20190225A</div>            </figure><p>依次操作：Next -&gt; Next</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fa40c84e3.jpg" alt="20190225B" title>                </div>                <div class="image-caption">20190225B</div>            </figure><p>点击finish完成项目的创建</p><p>项目结构图如下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fa978d47e.jpg" alt="20190225C" title>                </div>                <div class="image-caption">20190225C</div>            </figure><p>修改index.jsp文件的代码，第一行修改为pageEncoding=”UTF-8”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73faad49701.jpg" alt="20190225D" title>                </div>                <div class="image-caption">20190225D</div>            </figure><p>在下方的Servers选项卡中，点击右边图标，将需要部署的项目进行部署（add and remove)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fab9aab0e.jpg" alt="20190225E" title>                </div>                <div class="image-caption">20190225E</div>            </figure><p>将项目homework添加到服务器完成部署</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fac75237e.jpg" alt="20190225F" title>                </div>                <div class="image-caption">20190225F</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fad3ca725.jpg" alt="20190225G" title>                </div>                <div class="image-caption">20190225G</div>            </figure><p>点击启动Tomcat服务器</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fafddc291.jpg" alt="20190225H" title>                </div>                <div class="image-caption">20190225H</div>            </figure><p>Console选项卡显示启动服务器的结果，http-8080表示服务器端口</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fb1de9b0e.jpg" alt="20190225I" title>                </div>                <div class="image-caption">20190225I</div>            </figure><p>在浏览器中输入正确的端口号和路径浏览jsp网页</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fb29c5b58.jpg" alt="20190225J" title>                </div>                <div class="image-caption">20190225J</div>            </figure><p>在serverxml文件中可以修改项目的端口号</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2019/02/25/5c73fb39dabf0.jpg" alt="20190225K" title>                </div>                <div class="image-caption">20190225K</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;新建JSP-Web项目&quot;&gt;&lt;a href=&quot;#新建JSP-Web项目&quot; class=&quot;headerlink&quot; title=&quot;新建JSP Web项目&quot;&gt;&lt;/a&gt;新建JSP Web项目&lt;/h2&gt;&lt;p&gt;依次操作：File -&amp;gt; New -&amp;gt; Web Proj
      
    
    </summary>
    
    
      <category term="MyEclipse" scheme="http://github.com/hzebin/tags/MyEclipse/"/>
    
      <category term="JSP Web" scheme="http://github.com/hzebin/tags/JSP-Web/"/>
    
  </entry>
  
</feed>
